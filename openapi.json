{
    "oasDefinition": {
        "components": {
            "securitySchemes": {
                "basicAuth": {
                    "scheme": "basic",
                    "type": "http"
                }
            }
        },
        "info": {
            "contact": {
                "email": "support@partnerstack.com",
                "name": "PartnerStack Support"
            },
            "description": "PartnerStack REST API.",
            "termsOfService": "https://docs.google.com/document/d/1o7pDmMsvetHTx2gwSSg2WBwbM2yZcvf-63-YIA_Qz2I/export?format=pdf",
            "title": "PartnerStack API",
            "version": "2.0.0",
            "x-logo": {
                "altText": "PartnerStack Logo",
                "url": "https://assets.website-files.com/5bd09c4c2b661f4530a081c3/5bd86b2716e1ea314e5c2c05_rectangle%20-%20icon%20%2B%20text%20-%20purple.png"
            }
        },
        "openapi": "3.0.2",
        "paths": {
            "/deals/{deal_key}/assignment/{partnership_key}/{stack_key}": {
                "post": {
                    "description": "Assign the provided partnership to the provided deal.",
                    "parameters": [
                        {
                            "description": "Unique identifier of the deal",
                            "example": "deal_9KgQyH8Uzm4t4V",
                            "in": "path",
                            "name": "deal_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Unique identifier of the partnership",
                            "example": "part_z9dFwIcx7UyRYr",
                            "in": "path",
                            "name": "partnership_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Personal stack key",
                            "example": "stck_0kOOiSZslD522e",
                            "in": "path",
                            "name": "stack_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Assign the provided partnership to the provided deal."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "cookieAuth": []
                        },
                        {
                            "oauth2": [
                                "deal:write"
                            ]
                        }
                    ],
                    "summary": "Assign partnership to deal",
                    "tags": [
                        "Deals"
                    ],
                    "x-apiType": [
                        "company"
                    ],
                    "x-isPublic": true,
                    "x-scope": "write"
                }
            },
            "/deals/{deal_key}/file/{file_key}": {
                "get": {
                    "description": "Get the file for the deal.",
                    "parameters": [
                        {
                            "description": "Unique identifier of the deal",
                            "example": "deal_9KgQyH8Uzm4t4V",
                            "in": "path",
                            "name": "deal_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Unique identifier of the file",
                            "example": "file_z9dFwIcx7UyRYr",
                            "in": "path",
                            "name": "file_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "url": {
                                                        "description": "URL for the file",
                                                        "nullable": false,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Get the file for the deal."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "cookieAuth": []
                        },
                        {
                            "oauth2": [
                                "deal:read"
                            ]
                        }
                    ],
                    "summary": "Get deal file",
                    "tags": [
                        "Deals"
                    ],
                    "x-apiType": [
                        "company"
                    ],
                    "x-isPublic": true,
                    "x-scope": "read"
                }
            },
            "/v2/actions": {
                "get": {
                    "description": "Returns a list of your actions. The actions are returned sorted by creation date by default, with the most recent actions appearing first.",
                    "parameters": [
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Partnership key in which the results are filtered by.",
                            "example": "part_1234",
                            "in": "query",
                            "name": "partnership_key",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Will filter for actions with the specified name.",
                            "example": "application_approved",
                            "in": "query",
                            "name": "action_type",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "The field in which the results are ordered by. A `-` prefix denotes that the results are in descending order.",
                            "example": "-created_at",
                            "in": "query",
                            "name": "order_by",
                            "required": false,
                            "schema": {
                                "enum": [
                                    "-created_at",
                                    "created_at",
                                    "-updated_at",
                                    "updated_at"
                                ],
                                "type": "string"
                            }
                        },
                        {
                            "description": "A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.",
                            "example": 10,
                            "in": "query",
                            "name": "limit",
                            "schema": {
                                "default": 10,
                                "maximum": 250,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.",
                            "example": "key_8U5s1iH2Pd2a2p",
                            "in": "query",
                            "name": "starting_after",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.",
                            "example": "key_sE1vd9uwep7XHg",
                            "in": "query",
                            "name": "ending_before",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "has_more": {
                                                        "type": "boolean"
                                                    },
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "description": "An **Action** represents a specific action a partner or customer took on your platform",
                                                                    "properties": {
                                                                        "archived": {
                                                                            "description": "The boolean flag which determines if the action is archived or not.",
                                                                            "example": "True",
                                                                            "type": "boolean"
                                                                        },
                                                                        "company": {
                                                                            "description": "Base schema representation of a company",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "description": "Unique key of this company",
                                                                                    "example": "co_UD9407hi0jFiFe",
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "description": "The name of this company",
                                                                                    "example": "Nice Company",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "customer": {
                                                                            "nullable": true,
                                                                            "properties": {
                                                                                "key": {
                                                                                    "description": "Unique key of this customer.",
                                                                                    "example": "cus_1h1QBVUg03Ij69",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "sub_ids": {
                                                                                    "example": [
                                                                                        "youtube"
                                                                                    ],
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "nullable": true,
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "partnership_key": {
                                                                            "description": "Unique key of this partnership.",
                                                                            "example": "part_1234567",
                                                                            "type": "string"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of action the partner or customer performed",
                                                                            "example": "post_created",
                                                                            "type": "string",
                                                                            "x-accessor": "external_type"
                                                                        },
                                                                        "value": {
                                                                            "description": "The number of times the action was performed",
                                                                            "example": 1,
                                                                            "minimum": 1,
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "type": "array"
                                                    },
                                                    "total": {
                                                        "nullable": true,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Returns a list of your actions. The actions are returned sorted by creation date by default, with the most recent actions appearing first."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "bearerAuth": []
                        },
                        {
                            "oauth2": [
                                "action:read"
                            ]
                        }
                    ],
                    "summary": "List all actions",
                    "tags": [
                        "Actions"
                    ],
                    "x-apiType": [
                        "company",
                        "partner"
                    ],
                    "x-isPublic": true,
                    "x-scope": "read"
                },
                "post": {
                    "description": "Records a new action taken by a given partner or customer, and the number of times that action was performed.",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "**Actions** represent a specific action a partner or customer took on your platform",
                                            "properties": {
                                                "external_key": {
                                                    "description": "The external key of the action record in PartnerStack",
                                                    "example": "act_12345",
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "target_key": {
                                                    "description": "The identifier of the target specified in `target_type`. For a customer, this is the customer key. For a partnership, it is their partner key.",
                                                    "example": "bertramgilfoyle",
                                                    "type": "string"
                                                },
                                                "target_type": {
                                                    "description": "Whether to record an action under a partnership or customer",
                                                    "enum": [
                                                        "partnership",
                                                        "customer"
                                                    ],
                                                    "example": "customer",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "The type of action the partner or customer performed",
                                                    "example": "post_created",
                                                    "type": "string",
                                                    "x-accessor": "external_type"
                                                },
                                                "value": {
                                                    "description": "The number of times the action was performed",
                                                    "example": 1,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "required": [
                                                "type",
                                                "value",
                                                "target_type",
                                                "target_key"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "**Actions** represent a specific action a partner or customer took on your platform",
                                                        "properties": {
                                                            "external_key": {
                                                                "description": "The external key of the action record in PartnerStack",
                                                                "example": "act_12345",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "target_key": {
                                                                "description": "The identifier of the target specified in `target_type`. For a customer, this is the customer key. For a partnership, it is their partner key.",
                                                                "example": "bertramgilfoyle",
                                                                "type": "string"
                                                            },
                                                            "target_type": {
                                                                "description": "Whether to record an action under a partnership or customer",
                                                                "enum": [
                                                                    "partnership",
                                                                    "customer"
                                                                ],
                                                                "example": "customer",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "The type of action the partner or customer performed",
                                                                "example": "post_created",
                                                                "type": "string",
                                                                "x-accessor": "external_type"
                                                            },
                                                            "value": {
                                                                "description": "The number of times the action was performed",
                                                                "example": 1,
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Records a new action taken by a given partner or customer, and the number of times that action was performed."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "action:write"
                            ]
                        }
                    ],
                    "summary": "Record action",
                    "tags": [
                        "Actions"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/actions/{action_key}": {
                "delete": {
                    "description": "Archives an action. Any associated rewards or drip rewards will be archived as well.",
                    "parameters": [
                        {
                            "description": "Unique identifier for actions",
                            "example": "act_96TdHG43BtlGAs",
                            "in": "path",
                            "name": "action_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Archives an action. Any associated rewards or drip rewards will be archived as well."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "action:write"
                            ]
                        }
                    ],
                    "summary": "Archive an action",
                    "tags": [
                        "Actions"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/applications": {
                "post": {
                    "description": "Create an application for a partner with desired params.",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "group_slug": {
                                            "description": "Slug of the group to create the application",
                                            "nullable": false,
                                            "type": "string"
                                        },
                                        "meta": {
                                            "additionalProperties": true,
                                            "description": "Key value pairs that store additional information about this application. First and last name, email and business name required. Use the /application/form-template to view field names",
                                            "nullable": false,
                                            "properties": {
                                                "business_name": {
                                                    "example": "Agency",
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "example": "partner@agency.com",
                                                    "type": "string"
                                                },
                                                "first_name": {
                                                    "example": "Ash",
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "example": "Ketchum",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "first_name",
                                                "last_name",
                                                "email",
                                                "business_name"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "group_slug",
                                        "meta"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "additionalProperties": true,
                                                        "description": "Applications represent partnerstack partners attempting to join vendor programs via public form",
                                                        "properties": {
                                                            "actioned_by": {
                                                                "description": "Name of the member that approved/declined this application",
                                                                "example": "Professor Xavier",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "approved": {
                                                                "description": "Has this application been approved by the vendor",
                                                                "enum": [
                                                                    true,
                                                                    false,
                                                                    null
                                                                ],
                                                                "nullable": true,
                                                                "type": "boolean"
                                                            },
                                                            "content": {
                                                                "additionalProperties": true,
                                                                "description": "the filled out values for the application form itself",
                                                                "properties": {
                                                                    "email": {
                                                                        "description": "Email for the applying partner",
                                                                        "example": "dog@frog.com",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "first_name": {
                                                                        "description": "First name of the partner applying",
                                                                        "example": "Walter",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "last_name": {
                                                                        "description": "Last name of the partner applying",
                                                                        "example": "White",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "decline_reason": {
                                                                "description": "Reason given by vendor for not approving a specific application",
                                                                "example": "Not a valid application",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "flag_reasons": {
                                                                "description": "Reasons why a partnership was flagged for fraud",
                                                                "nullable": true,
                                                                "type": "array"
                                                            },
                                                            "fraud_flagged": {
                                                                "description": "Wherether or not the partner has been flagged for fraud",
                                                                "example": false,
                                                                "nullable": false,
                                                                "type": "boolean"
                                                            },
                                                            "group_name": {
                                                                "description": "Name of the group to which the partner is applying to become a part of",
                                                                "example": "Cooler dudes",
                                                                "nullable": false,
                                                                "type": "string"
                                                            },
                                                            "team_blocked": {
                                                                "description": "Whether the partner team has been blocked by the program",
                                                                "nullable": true,
                                                                "type": "boolean"
                                                            },
                                                            "team_key": {
                                                                "description": "Key representing the partner's team",
                                                                "example": "stck_12334",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "team_name": {
                                                                "description": "Name of the partner team to which this applying partner belongs",
                                                                "example": "Cool dudes",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "with_profile": {
                                                                "description": "Whether the partner team has used their team_profile instead of filling out the application form",
                                                                "nullable": true,
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Create an application for a partner with desired params."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "application:write"
                            ]
                        }
                    ],
                    "summary": "Create an Application",
                    "tags": [
                        "Applications"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/applications/decision": {
                "patch": {
                    "description": "Update the decision of the given Applications provided",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "application_keys": {
                                            "description": "List of application_keys that we are approving or declining",
                                            "nullable": false,
                                            "type": "array"
                                        },
                                        "approved": {
                                            "description": "The decision approval state, null removes existing decision",
                                            "example": true,
                                            "nullable": true,
                                            "type": "boolean"
                                        },
                                        "decline_reason": {
                                            "description": "The reason associated with the provided decision",
                                            "example": "Ineligible based on Partner Country",
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "group_id_override": {
                                            "description": "The override group to move the Partner to after applying decision",
                                            "example": 1234,
                                            "nullable": true,
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "additionalProperties": true,
                                                                    "description": "Applications represent partnerstack partners attempting to join vendor programs via public form",
                                                                    "properties": {
                                                                        "actioned_by": {
                                                                            "description": "Name of the member that approved/declined this application",
                                                                            "example": "Professor Xavier",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "approved": {
                                                                            "description": "Has this application been approved by the vendor",
                                                                            "enum": [
                                                                                true,
                                                                                false,
                                                                                null
                                                                            ],
                                                                            "nullable": true,
                                                                            "type": "boolean"
                                                                        },
                                                                        "content": {
                                                                            "additionalProperties": true,
                                                                            "description": "the filled out values for the application form itself",
                                                                            "properties": {
                                                                                "email": {
                                                                                    "description": "Email for the applying partner",
                                                                                    "example": "dog@frog.com",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "first_name": {
                                                                                    "description": "First name of the partner applying",
                                                                                    "example": "Walter",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "last_name": {
                                                                                    "description": "Last name of the partner applying",
                                                                                    "example": "White",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "decline_reason": {
                                                                            "description": "Reason given by vendor for not approving a specific application",
                                                                            "example": "Not a valid application",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "flag_reasons": {
                                                                            "description": "Reasons why a partnership was flagged for fraud",
                                                                            "nullable": true,
                                                                            "type": "array"
                                                                        },
                                                                        "fraud_flagged": {
                                                                            "description": "Wherether or not the partner has been flagged for fraud",
                                                                            "example": false,
                                                                            "nullable": false,
                                                                            "type": "boolean"
                                                                        },
                                                                        "group_name": {
                                                                            "description": "Name of the group to which the partner is applying to become a part of",
                                                                            "example": "Cooler dudes",
                                                                            "nullable": false,
                                                                            "type": "string"
                                                                        },
                                                                        "team_blocked": {
                                                                            "description": "Whether the partner team has been blocked by the program",
                                                                            "nullable": true,
                                                                            "type": "boolean"
                                                                        },
                                                                        "team_key": {
                                                                            "description": "Key representing the partner's team",
                                                                            "example": "stck_12334",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "team_name": {
                                                                            "description": "Name of the partner team to which this applying partner belongs",
                                                                            "example": "Cool dudes",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "with_profile": {
                                                                            "description": "Whether the partner team has used their team_profile instead of filling out the application form",
                                                                            "nullable": true,
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Update the decision of the given Applications provided"
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "application:write"
                            ]
                        }
                    ],
                    "summary": "Bulk Decision Applications",
                    "tags": [
                        "Applications"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/applications/{application_key}/decision": {
                "patch": {
                    "description": "Update the decision of the given Application",
                    "parameters": [
                        {
                            "description": "The key of the application we're applying a decision to",
                            "example": "appl_1234hasf0",
                            "in": "path",
                            "name": "application_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "approved": {
                                            "description": "The decision approval state, null removes existing decision",
                                            "example": true,
                                            "nullable": true,
                                            "type": "boolean"
                                        },
                                        "decline_reason": {
                                            "description": "The reason associated with the provided decision",
                                            "example": "Ineligible based on Partner Country",
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "group_id_override": {
                                            "description": "The override group to move the Partner to after applying decision",
                                            "example": 1234,
                                            "nullable": true,
                                            "type": "integer"
                                        },
                                        "group_key_override": {
                                            "description": "The override group to move the partner to after applying decision. If supplied, will take precedence over any group_id_override value also set.",
                                            "example": "grup_Ar4kucsdFxKgQs",
                                            "nullable": true,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "additionalProperties": true,
                                                        "description": "Applications represent partnerstack partners attempting to join vendor programs via public form",
                                                        "properties": {
                                                            "actioned_by": {
                                                                "description": "Name of the member that approved/declined this application",
                                                                "example": "Professor Xavier",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "approved": {
                                                                "description": "Has this application been approved by the vendor",
                                                                "enum": [
                                                                    true,
                                                                    false,
                                                                    null
                                                                ],
                                                                "nullable": true,
                                                                "type": "boolean"
                                                            },
                                                            "content": {
                                                                "additionalProperties": true,
                                                                "description": "the filled out values for the application form itself",
                                                                "properties": {
                                                                    "email": {
                                                                        "description": "Email for the applying partner",
                                                                        "example": "dog@frog.com",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "first_name": {
                                                                        "description": "First name of the partner applying",
                                                                        "example": "Walter",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "last_name": {
                                                                        "description": "Last name of the partner applying",
                                                                        "example": "White",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "decline_reason": {
                                                                "description": "Reason given by vendor for not approving a specific application",
                                                                "example": "Not a valid application",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "flag_reasons": {
                                                                "description": "Reasons why a partnership was flagged for fraud",
                                                                "nullable": true,
                                                                "type": "array"
                                                            },
                                                            "fraud_flagged": {
                                                                "description": "Wherether or not the partner has been flagged for fraud",
                                                                "example": false,
                                                                "nullable": false,
                                                                "type": "boolean"
                                                            },
                                                            "group_name": {
                                                                "description": "Name of the group to which the partner is applying to become a part of",
                                                                "example": "Cooler dudes",
                                                                "nullable": false,
                                                                "type": "string"
                                                            },
                                                            "team_blocked": {
                                                                "description": "Whether the partner team has been blocked by the program",
                                                                "nullable": true,
                                                                "type": "boolean"
                                                            },
                                                            "team_key": {
                                                                "description": "Key representing the partner's team",
                                                                "example": "stck_12334",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "team_name": {
                                                                "description": "Name of the partner team to which this applying partner belongs",
                                                                "example": "Cool dudes",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "with_profile": {
                                                                "description": "Whether the partner team has used their team_profile instead of filling out the application form",
                                                                "nullable": true,
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Update the decision of the given Application"
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "application:write"
                            ]
                        }
                    ],
                    "summary": "Decision an Application",
                    "tags": [
                        "Applications"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/customers": {
                "get": {
                    "description": "Returns a list of your customers. The customers are returned sorted by creation date by default, with the most recent customers appearing first.",
                    "parameters": [
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Will filter for partnerships who are in a group with the specified name. Name must have spaces and special characters removed.",
                            "example": "resellers",
                            "in": "query",
                            "name": "group",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Will filter to a specific partnership's `partner_key`, which can be found using the partnership's get endpoint or from the partnership view in your PartnerStack dashboard.",
                            "example": "bertramgilfoyle",
                            "in": "query",
                            "name": "partner_key",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.",
                            "example": 10,
                            "in": "query",
                            "name": "limit",
                            "schema": {
                                "default": 10,
                                "maximum": 250,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.",
                            "example": "key_8U5s1iH2Pd2a2p",
                            "in": "query",
                            "name": "starting_after",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.",
                            "example": "key_sE1vd9uwep7XHg",
                            "in": "query",
                            "name": "ending_before",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "has_more": {
                                                        "type": "boolean"
                                                    },
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "description": "**Customers** represent the users who have been referred by a **Partner**.\n\n**Customers** are linked to the **Partner** that referred them through a **partner_key** which must be provided on the Create Customer endpoint.\n\nThe **partner_key** is retrievable from `growsumo.data.partner_key`, which is created by the `PartnerStackJS` snippet.",
                                                                    "properties": {
                                                                        "customer_key": {
                                                                            "description": "External customer key that can be configured on creation.",
                                                                            "example": "123435",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string",
                                                                            "x-accessor": "external_key"
                                                                        },
                                                                        "email": {
                                                                            "description": "The customers email, must be a valid email",
                                                                            "example": "johnsmith@gmail.com",
                                                                            "format": "email",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "field_data": {
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        },
                                                                        "fields": {
                                                                            "items": {
                                                                                "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                                "properties": {
                                                                                    "api_name": {
                                                                                        "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "external_type": {
                                                                                        "description": "Name that can be used for external systems",
                                                                                        "maxLength": 255,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "field_key": {
                                                                                        "description": "Key of field that is presented",
                                                                                        "example": "field_fjkdlrh9i32nfew",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "help_text": {
                                                                                        "description": "The help text that is provided for this field",
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "hidden": {
                                                                                        "description": "Whether or not this field is displayed when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "internal_name": {
                                                                                        "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of field that is presented",
                                                                                        "example": "Company Address",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "options": {
                                                                                        "description": "Options to select from if this field is a picklist/checkbox",
                                                                                        "type": "object"
                                                                                    },
                                                                                    "placeholder_text": {
                                                                                        "description": "The text of the placeholder that is provided for this field",
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "position": {
                                                                                        "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "required": {
                                                                                        "description": "Whether or not this field will be required when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "type": {
                                                                                        "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                                        "maxLength": 255,
                                                                                        "type": "string",
                                                                                        "x-accessor": "type_"
                                                                                    },
                                                                                    "value": {
                                                                                        "description": "The value that was submitted to the field and stored on the target object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "meta": {
                                                                            "description": "Additional custom fields for the customer that is configured in your PartnerStack dashboard.",
                                                                            "example": {
                                                                                "field": "value"
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "name": {
                                                                            "description": "Should be either the customer's name, or the company name",
                                                                            "example": "John Smith",
                                                                            "maxLength": 100,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "partner_key": {
                                                                            "description": "The key of the partner that is responsible for the customer",
                                                                            "example": "bertramgilfoyle",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "partnership_key": {
                                                                            "description": "Unique key of this partnership.",
                                                                            "example": "part_A7nGc9pKnx8xEW",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "provider_key": {
                                                                            "description": "A unique identifier given by a payment provider (Stripe, Recurly, Chargebee etc)",
                                                                            "example": "cus_AJ6bvXbVofMpsW",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "source_key": {
                                                                            "description": "The key of the source at which the customer was created through",
                                                                            "example": "deal_987us345r2",
                                                                            "maxLength": 40,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "source_type": {
                                                                            "description": "The source at which the customer was created through",
                                                                            "example": "deal",
                                                                            "maxLength": 40,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "test": {
                                                                            "description": "True if created by a test partner",
                                                                            "example": true,
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "type": "array"
                                                    },
                                                    "total": {
                                                        "nullable": true,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Returns a list of your customers. The customers are returned sorted by creation date by default, with the most recent customers appearing first."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "oauth2": [
                                "customer:read"
                            ]
                        },
                        {
                            "bearerAuth": []
                        },
                        {
                            "basicAuth": []
                        }
                    ],
                    "summary": "List all customers",
                    "tags": [
                        "Customers"
                    ],
                    "x-apiType": [
                        "company",
                        "partner"
                    ],
                    "x-isPublic": true,
                    "x-scope": "read"
                },
                "post": {
                    "description": "Creates a new customer with the data provided.",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "customer_key": {
                                                    "description": "External customer key that can be configured on creation.",
                                                    "example": "123435",
                                                    "maxLength": 255,
                                                    "nullable": true,
                                                    "type": "string",
                                                    "x-accessor": "external_key"
                                                },
                                                "email": {
                                                    "description": "The customers email, must be a valid email",
                                                    "example": "johnsmith@gmail.com",
                                                    "format": "email",
                                                    "maxLength": 255,
                                                    "type": "string"
                                                },
                                                "meta": {
                                                    "description": "Additional custom fields for the customer that is configured in your PartnerStack dashboard.",
                                                    "example": {
                                                        "field": "value"
                                                    },
                                                    "type": "object"
                                                },
                                                "name": {
                                                    "description": "Should be either the customer's name, or the company name",
                                                    "example": "John Smith",
                                                    "maxLength": 100,
                                                    "type": "string"
                                                },
                                                "provider_key": {
                                                    "description": "A unique identifier given by a payment provider (Stripe, Recurly, Chargebee etc)",
                                                    "example": "cus_AJ6bvXbVofMpsW",
                                                    "maxLength": 255,
                                                    "nullable": true,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "partner_key": {
                                                    "description": "The key of the partner that is responsible for the customer **(note: `partner_key` must belong to a partner in your program)**.",
                                                    "example": "bertramgilfoyle",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "required": [
                                                "customer_key",
                                                "partner_key",
                                                "email"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "**Customers** represent the users who have been referred by a **Partner**.\n\n**Customers** are linked to the **Partner** that referred them through a **partner_key** which must be provided on the Create Customer endpoint.\n\nThe **partner_key** is retrievable from `growsumo.data.partner_key`, which is created by the `PartnerStackJS` snippet.",
                                                        "properties": {
                                                            "customer_key": {
                                                                "description": "External customer key that can be configured on creation.",
                                                                "example": "123435",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string",
                                                                "x-accessor": "external_key"
                                                            },
                                                            "email": {
                                                                "description": "The customers email, must be a valid email",
                                                                "example": "johnsmith@gmail.com",
                                                                "format": "email",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "field_data": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "fields": {
                                                                "items": {
                                                                    "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                    "properties": {
                                                                        "api_name": {
                                                                            "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "external_type": {
                                                                            "description": "Name that can be used for external systems",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_key": {
                                                                            "description": "Key of field that is presented",
                                                                            "example": "field_fjkdlrh9i32nfew",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "help_text": {
                                                                            "description": "The help text that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "hidden": {
                                                                            "description": "Whether or not this field is displayed when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "internal_name": {
                                                                            "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of field that is presented",
                                                                            "example": "Company Address",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "options": {
                                                                            "description": "Options to select from if this field is a picklist/checkbox",
                                                                            "type": "object"
                                                                        },
                                                                        "placeholder_text": {
                                                                            "description": "The text of the placeholder that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "position": {
                                                                            "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                            "type": "integer"
                                                                        },
                                                                        "required": {
                                                                            "description": "Whether or not this field will be required when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                            "maxLength": 255,
                                                                            "type": "string",
                                                                            "x-accessor": "type_"
                                                                        },
                                                                        "value": {
                                                                            "description": "The value that was submitted to the field and stored on the target object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "meta": {
                                                                "description": "Additional custom fields for the customer that is configured in your PartnerStack dashboard.",
                                                                "example": {
                                                                    "field": "value"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "description": "Should be either the customer's name, or the company name",
                                                                "example": "John Smith",
                                                                "maxLength": 100,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "partner_key": {
                                                                "description": "The key of the partner that is responsible for the customer",
                                                                "example": "bertramgilfoyle",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "partnership_key": {
                                                                "description": "Unique key of this partnership.",
                                                                "example": "part_A7nGc9pKnx8xEW",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "provider_key": {
                                                                "description": "A unique identifier given by a payment provider (Stripe, Recurly, Chargebee etc)",
                                                                "example": "cus_AJ6bvXbVofMpsW",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "source_key": {
                                                                "description": "The key of the source at which the customer was created through",
                                                                "example": "deal_987us345r2",
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "source_type": {
                                                                "description": "The source at which the customer was created through",
                                                                "example": "deal",
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "test": {
                                                                "description": "True if created by a test partner",
                                                                "example": true,
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Creates a new customer with the data provided."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "customer:write"
                            ]
                        }
                    ],
                    "summary": "Create a customer",
                    "tags": [
                        "Customers"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/customers/{customer_key}": {
                "delete": {
                    "description": "Deletes a customer with a given customer key.",
                    "parameters": [
                        {
                            "description": "Unique identifier for customers. This is the same as the `customer_key` that can be assigned using PartnerStackJS.",
                            "example": "cus_a80cb515fe",
                            "in": "path",
                            "name": "customer_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "description": "Standard fields that are present on all database objects.",
                                                "properties": {
                                                    "created_at": {
                                                        "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                        "example": 1574181282399,
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "key": {
                                                        "description": "A unique identifier used to reference the object",
                                                        "example": "co_a80cb515fe",
                                                        "maxLength": 255,
                                                        "type": "string"
                                                    },
                                                    "updated_at": {
                                                        "description": "Unix timestamp in milliseconds taken at time of last update",
                                                        "example": 1574181282399,
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Deletes a customer with a given customer key."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "customer:write"
                            ]
                        }
                    ],
                    "summary": "Delete a customer",
                    "tags": [
                        "Customers"
                    ],
                    "x-isPublic": true
                },
                "get": {
                    "description": "Gets a customer with a given customer key.",
                    "parameters": [
                        {
                            "description": "Unique identifier for customers. This is the same as the `customer_key` that can be assigned using PartnerStackJS.",
                            "example": "cus_a80cb515fe",
                            "in": "path",
                            "name": "customer_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "**Customers** represent the users who have been referred by a **Partner**.\n\n**Customers** are linked to the **Partner** that referred them through a **partner_key** which must be provided on the Create Customer endpoint.\n\nThe **partner_key** is retrievable from `growsumo.data.partner_key`, which is created by the `PartnerStackJS` snippet.",
                                                        "properties": {
                                                            "customer_key": {
                                                                "description": "External customer key that can be configured on creation.",
                                                                "example": "123435",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string",
                                                                "x-accessor": "external_key"
                                                            },
                                                            "email": {
                                                                "description": "The customers email, must be a valid email",
                                                                "example": "johnsmith@gmail.com",
                                                                "format": "email",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "field_data": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "fields": {
                                                                "items": {
                                                                    "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                    "properties": {
                                                                        "api_name": {
                                                                            "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "external_type": {
                                                                            "description": "Name that can be used for external systems",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_key": {
                                                                            "description": "Key of field that is presented",
                                                                            "example": "field_fjkdlrh9i32nfew",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "help_text": {
                                                                            "description": "The help text that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "hidden": {
                                                                            "description": "Whether or not this field is displayed when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "internal_name": {
                                                                            "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of field that is presented",
                                                                            "example": "Company Address",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "options": {
                                                                            "description": "Options to select from if this field is a picklist/checkbox",
                                                                            "type": "object"
                                                                        },
                                                                        "placeholder_text": {
                                                                            "description": "The text of the placeholder that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "position": {
                                                                            "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                            "type": "integer"
                                                                        },
                                                                        "required": {
                                                                            "description": "Whether or not this field will be required when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                            "maxLength": 255,
                                                                            "type": "string",
                                                                            "x-accessor": "type_"
                                                                        },
                                                                        "value": {
                                                                            "description": "The value that was submitted to the field and stored on the target object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "meta": {
                                                                "description": "Additional custom fields for the customer that is configured in your PartnerStack dashboard.",
                                                                "example": {
                                                                    "field": "value"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "description": "Should be either the customer's name, or the company name",
                                                                "example": "John Smith",
                                                                "maxLength": 100,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "partner_key": {
                                                                "description": "The key of the partner that is responsible for the customer",
                                                                "example": "bertramgilfoyle",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "partnership_key": {
                                                                "description": "Unique key of this partnership.",
                                                                "example": "part_A7nGc9pKnx8xEW",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "provider_key": {
                                                                "description": "A unique identifier given by a payment provider (Stripe, Recurly, Chargebee etc)",
                                                                "example": "cus_AJ6bvXbVofMpsW",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "source_key": {
                                                                "description": "The key of the source at which the customer was created through",
                                                                "example": "deal_987us345r2",
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "source_type": {
                                                                "description": "The source at which the customer was created through",
                                                                "example": "deal",
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "test": {
                                                                "description": "True if created by a test partner",
                                                                "example": true,
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Gets a customer with a given customer key."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "customer:read"
                            ]
                        }
                    ],
                    "summary": "Retrieve a customer",
                    "tags": [
                        "Customers"
                    ],
                    "x-isPublic": true
                },
                "patch": {
                    "description": "Updates a customer with the data provided. Any parameters not passed will not be updated.",
                    "parameters": [
                        {
                            "description": "Unique identifier for customers. This is the same as the `customer_key` that can be assigned using PartnerStackJS.",
                            "example": "cus_a80cb515fe",
                            "in": "path",
                            "name": "customer_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "customer_key": {
                                            "description": "External customer key that can be configured on creation.",
                                            "example": "123435",
                                            "maxLength": 255,
                                            "nullable": true,
                                            "type": "string",
                                            "x-accessor": "external_key"
                                        },
                                        "email": {
                                            "description": "The customers email, must be a valid email",
                                            "example": "johnsmith@gmail.com",
                                            "format": "email",
                                            "maxLength": 255,
                                            "type": "string"
                                        },
                                        "meta": {
                                            "description": "Additional custom fields for the customer that is configured in your PartnerStack dashboard.",
                                            "example": {
                                                "field": "value"
                                            },
                                            "type": "object"
                                        },
                                        "name": {
                                            "description": "Should be either the customer's name, or the company name",
                                            "example": "John Smith",
                                            "maxLength": 100,
                                            "type": "string"
                                        },
                                        "provider_key": {
                                            "description": "A unique identifier given by a payment provider (Stripe, Recurly, Chargebee etc)",
                                            "example": "cus_AJ6bvXbVofMpsW",
                                            "maxLength": 255,
                                            "nullable": true,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "**Customers** represent the users who have been referred by a **Partner**.\n\n**Customers** are linked to the **Partner** that referred them through a **partner_key** which must be provided on the Create Customer endpoint.\n\nThe **partner_key** is retrievable from `growsumo.data.partner_key`, which is created by the `PartnerStackJS` snippet.",
                                                        "properties": {
                                                            "customer_key": {
                                                                "description": "External customer key that can be configured on creation.",
                                                                "example": "123435",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string",
                                                                "x-accessor": "external_key"
                                                            },
                                                            "email": {
                                                                "description": "The customers email, must be a valid email",
                                                                "example": "johnsmith@gmail.com",
                                                                "format": "email",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "field_data": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "fields": {
                                                                "items": {
                                                                    "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                    "properties": {
                                                                        "api_name": {
                                                                            "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "external_type": {
                                                                            "description": "Name that can be used for external systems",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_key": {
                                                                            "description": "Key of field that is presented",
                                                                            "example": "field_fjkdlrh9i32nfew",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "help_text": {
                                                                            "description": "The help text that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "hidden": {
                                                                            "description": "Whether or not this field is displayed when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "internal_name": {
                                                                            "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of field that is presented",
                                                                            "example": "Company Address",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "options": {
                                                                            "description": "Options to select from if this field is a picklist/checkbox",
                                                                            "type": "object"
                                                                        },
                                                                        "placeholder_text": {
                                                                            "description": "The text of the placeholder that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "position": {
                                                                            "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                            "type": "integer"
                                                                        },
                                                                        "required": {
                                                                            "description": "Whether or not this field will be required when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                            "maxLength": 255,
                                                                            "type": "string",
                                                                            "x-accessor": "type_"
                                                                        },
                                                                        "value": {
                                                                            "description": "The value that was submitted to the field and stored on the target object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "meta": {
                                                                "description": "Additional custom fields for the customer that is configured in your PartnerStack dashboard.",
                                                                "example": {
                                                                    "field": "value"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "description": "Should be either the customer's name, or the company name",
                                                                "example": "John Smith",
                                                                "maxLength": 100,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "partner_key": {
                                                                "description": "The key of the partner that is responsible for the customer",
                                                                "example": "bertramgilfoyle",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "partnership_key": {
                                                                "description": "Unique key of this partnership.",
                                                                "example": "part_A7nGc9pKnx8xEW",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "provider_key": {
                                                                "description": "A unique identifier given by a payment provider (Stripe, Recurly, Chargebee etc)",
                                                                "example": "cus_AJ6bvXbVofMpsW",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "source_key": {
                                                                "description": "The key of the source at which the customer was created through",
                                                                "example": "deal_987us345r2",
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "source_type": {
                                                                "description": "The source at which the customer was created through",
                                                                "example": "deal",
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "test": {
                                                                "description": "True if created by a test partner",
                                                                "example": true,
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Updates a customer with the data provided. Any parameters not passed will not be updated."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "customer:write"
                            ]
                        }
                    ],
                    "summary": "Update a customer",
                    "tags": [
                        "Customers"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/deals": {
                "get": {
                    "description": "Returns a list of your deals. The deals are\n    returned sorted by creation date, with the most recent deals\n    appearing first.",
                    "parameters": [
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Will filter for partnerships who are in a group with the specified name. Name must have spaces and special characters removed.",
                            "example": "resellers",
                            "in": "query",
                            "name": "group",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Will filter to a specific partnership's `partner_key`, which can be found using the partnership's get endpoint or from the partnership view in your PartnerStack dashboard.",
                            "example": "bertramgilfoyle",
                            "in": "query",
                            "name": "partner_key",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.",
                            "example": 10,
                            "in": "query",
                            "name": "limit",
                            "schema": {
                                "default": 10,
                                "maximum": 250,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.",
                            "example": "key_8U5s1iH2Pd2a2p",
                            "in": "query",
                            "name": "starting_after",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.",
                            "example": "key_sE1vd9uwep7XHg",
                            "in": "query",
                            "name": "ending_before",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "has_more": {
                                                        "type": "boolean"
                                                    },
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "description": "**Deals** allow your partners to submit accounts they are working to your sales team to avoid channel conflicts and earn commissions for closed accounts.\n\nTypically the Deals experience is handled through a CRM integration like Salesforce. However you may opt to use the Deals API to have PartnerStack interact with a custom data warehouse rather than directly with your CRM.",
                                                                    "properties": {
                                                                        "account_name": {
                                                                            "description": "Name of the account",
                                                                            "example": "Digital Agency Acme",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "amount": {
                                                                            "description": "Deal amount in **cents**",
                                                                            "example": 25000,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "close_date": {
                                                                            "description": "Expected close date of deal as YYYY-MM-DD",
                                                                            "example": "2020-03-01",
                                                                            "format": "date",
                                                                            "type": "string",
                                                                            "x-accessor": "close_date_as_date_string"
                                                                        },
                                                                        "contact_first_name": {
                                                                            "description": "First name of the account's contact",
                                                                            "example": "John",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "contact_last_name": {
                                                                            "description": "Last name of the account's contact",
                                                                            "example": "Smith",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "external_key": {
                                                                            "description": "Reference that can be used in place of the key.",
                                                                            "example": "deal_1234",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_data": {
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        },
                                                                        "fields": {
                                                                            "items": {
                                                                                "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                                "properties": {
                                                                                    "api_name": {
                                                                                        "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "external_type": {
                                                                                        "description": "Name that can be used for external systems",
                                                                                        "maxLength": 255,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "field_key": {
                                                                                        "description": "Key of field that is presented",
                                                                                        "example": "field_fjkdlrh9i32nfew",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "help_text": {
                                                                                        "description": "The help text that is provided for this field",
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "hidden": {
                                                                                        "description": "Whether or not this field is displayed when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "internal_name": {
                                                                                        "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of field that is presented",
                                                                                        "example": "Company Address",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "options": {
                                                                                        "description": "Options to select from if this field is a picklist/checkbox",
                                                                                        "type": "object"
                                                                                    },
                                                                                    "placeholder_text": {
                                                                                        "description": "The text of the placeholder that is provided for this field",
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "position": {
                                                                                        "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "required": {
                                                                                        "description": "Whether or not this field will be required when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "type": {
                                                                                        "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                                        "maxLength": 255,
                                                                                        "type": "string",
                                                                                        "x-accessor": "type_"
                                                                                    },
                                                                                    "value": {
                                                                                        "description": "The value that was submitted to the field and stored on the target object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "group_key": {
                                                                            "description": "The unique key of the group in which this deals's partner is in",
                                                                            "example": "grup_UHrMpyoNbTBRuc",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "lost_reason": {
                                                                            "description": "Reason for which the deal was lost.",
                                                                            "example": "Not the right fit",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "meta": {
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        },
                                                                        "mold_key": {
                                                                            "maxLength": 40,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "partner_key": {
                                                                            "description": "The unique key of the partner who owns this deal",
                                                                            "example": "bertramgilfoyle",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "source": {
                                                                            "description": "Source of the deal, either 'partner' or 'vendor', defaults to 'partner' if not specified",
                                                                            "enum": [
                                                                                "partner",
                                                                                "vendor"
                                                                            ],
                                                                            "example": "partner",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "stage": {
                                                                            "description": "Current stage of this deal. Must appear in Deals Stage list found in group settings.",
                                                                            "example": "Working",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "team": {
                                                                            "allOf": [
                                                                                {
                                                                                    "description": "Standard fields that are present on all database objects.",
                                                                                    "properties": {
                                                                                        "created_at": {
                                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "A unique identifier used to reference the object",
                                                                                            "example": "co_a80cb515fe",
                                                                                            "maxLength": 255,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "updated_at": {
                                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                {
                                                                                    "description": "Details of team used in public API.",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "description": "The name of the partner team",
                                                                                            "example": "Tushar",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            ],
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        },
                                                                        "team_member": {
                                                                            "allOf": [
                                                                                {
                                                                                    "description": "Standard fields that are present on all database objects.",
                                                                                    "properties": {
                                                                                        "created_at": {
                                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "A unique identifier used to reference the object",
                                                                                            "example": "co_a80cb515fe",
                                                                                            "maxLength": 255,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "updated_at": {
                                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                {
                                                                                    "description": "Details of team member used in public API.",
                                                                                    "properties": {
                                                                                        "email": {
                                                                                            "description": "Email of the partner team member",
                                                                                            "example": "tushten@partnerstack.com",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "first_name": {
                                                                                            "description": "First name of the partner team member",
                                                                                            "example": "Tushar",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "last_name": {
                                                                                            "description": "Last name of the partner team member",
                                                                                            "example": "Sutherland",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            ],
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "type": "array"
                                                    },
                                                    "total": {
                                                        "nullable": true,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Returns a list of your deals. The deals are\n    returned sorted by creation date, with the most recent deals\n    appearing first."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "deal:read"
                            ]
                        }
                    ],
                    "summary": "List all deals",
                    "tags": [
                        "Deals"
                    ],
                    "x-isPublic": true
                },
                "post": {
                    "description": "Creates a deal with desired params.",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "account_name": {
                                                    "description": "Name of the account",
                                                    "example": "Digital Agency Acme",
                                                    "maxLength": 255,
                                                    "type": "string"
                                                },
                                                "amount": {
                                                    "description": "Deal amount in **cents**",
                                                    "example": 25000,
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "close_date": {
                                                    "description": "Expected close date of deal as YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS or full ISO 8601 with timezone",
                                                    "example": "2020-03-01",
                                                    "format": "date",
                                                    "type": "string",
                                                    "x-accessor": "close_date_as_date_string"
                                                },
                                                "contact_first_name": {
                                                    "description": "First name of the account's contact",
                                                    "example": "John",
                                                    "maxLength": 255,
                                                    "type": "string"
                                                },
                                                "contact_last_name": {
                                                    "description": "Last name of the account's contact",
                                                    "example": "Smith",
                                                    "maxLength": 255,
                                                    "type": "string"
                                                },
                                                "field_data": {
                                                    "nullable": true,
                                                    "type": "object"
                                                },
                                                "fields": {
                                                    "items": {
                                                        "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                        "properties": {
                                                            "api_name": {
                                                                "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "external_type": {
                                                                "description": "Name that can be used for external systems",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "field_key": {
                                                                "description": "Key of field that is presented",
                                                                "example": "field_fjkdlrh9i32nfew",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "help_text": {
                                                                "description": "The help text that is provided for this field",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "hidden": {
                                                                "description": "Whether or not this field is displayed when filling out its attached form",
                                                                "type": "boolean"
                                                            },
                                                            "internal_name": {
                                                                "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Name of field that is presented",
                                                                "example": "Company Address",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "options": {
                                                                "description": "Options to select from if this field is a picklist/checkbox",
                                                                "type": "object"
                                                            },
                                                            "placeholder_text": {
                                                                "description": "The text of the placeholder that is provided for this field",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "position": {
                                                                "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                "type": "integer"
                                                            },
                                                            "required": {
                                                                "description": "Whether or not this field will be required when filling out its attached form",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                "maxLength": 255,
                                                                "type": "string",
                                                                "x-accessor": "type_"
                                                            },
                                                            "value": {
                                                                "description": "The value that was submitted to the field and stored on the target object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "meta": {
                                                    "nullable": true,
                                                    "type": "object"
                                                },
                                                "personal_stack_key": {
                                                    "description": "The unique personal stack_key of the partner team member who submitted this deal. To select a team member, please pass either the personal_stack_key or the team_member_email. Partner source only.",
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "source": {
                                                    "description": "Source of the deal, either 'partner' or 'vendor', defaults to 'partner' if not specified",
                                                    "enum": [
                                                        "partner",
                                                        "vendor"
                                                    ],
                                                    "example": "partner",
                                                    "type": "string"
                                                },
                                                "stage": {
                                                    "description": "Current stage of this deal. Must appear in Deals Stage list found in group settings.",
                                                    "example": "Working",
                                                    "maxLength": 255,
                                                    "type": "string"
                                                },
                                                "team_member_email": {
                                                    "description": "The email of the partner team member who submitted this deal. To select a team member, please pass either the personal_stack_key or the team_member_email. Partner source only.",
                                                    "nullable": true,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "account_name",
                                                "contact_first_name",
                                                "contact_last_name",
                                                "amount",
                                                "stage",
                                                "close_date"
                                            ],
                                            "type": "object"
                                        }
                                    ],
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "group_key": {
                                                    "description": "The unique key of the group in which this deals's prospective partner is. Required if 'source' is specified as 'vendor'",
                                                    "example": "grup_UHrMpyoNbTBRuc",
                                                    "maxLength": 255,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "group_key"
                                            ],
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "partner_key": {
                                                    "description": "The unique key of the partner who owns this deal. Required if 'source' is specified as 'partner'.",
                                                    "example": "bertramgilfoyle",
                                                    "maxLength": 255,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "partner_key"
                                            ],
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "**Deals** allow your partners to submit accounts they are working to your sales team to avoid channel conflicts and earn commissions for closed accounts.\n\nTypically the Deals experience is handled through a CRM integration like Salesforce. However you may opt to use the Deals API to have PartnerStack interact with a custom data warehouse rather than directly with your CRM.",
                                                        "properties": {
                                                            "account_name": {
                                                                "description": "Name of the account",
                                                                "example": "Digital Agency Acme",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "amount": {
                                                                "description": "Deal amount in **cents**",
                                                                "example": 25000,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "close_date": {
                                                                "description": "Expected close date of deal as YYYY-MM-DD",
                                                                "example": "2020-03-01",
                                                                "format": "date",
                                                                "type": "string",
                                                                "x-accessor": "close_date_as_date_string"
                                                            },
                                                            "contact_first_name": {
                                                                "description": "First name of the account's contact",
                                                                "example": "John",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "contact_last_name": {
                                                                "description": "Last name of the account's contact",
                                                                "example": "Smith",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "external_key": {
                                                                "description": "Reference that can be used in place of the key.",
                                                                "example": "deal_1234",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "field_data": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "fields": {
                                                                "items": {
                                                                    "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                    "properties": {
                                                                        "api_name": {
                                                                            "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "external_type": {
                                                                            "description": "Name that can be used for external systems",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_key": {
                                                                            "description": "Key of field that is presented",
                                                                            "example": "field_fjkdlrh9i32nfew",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "help_text": {
                                                                            "description": "The help text that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "hidden": {
                                                                            "description": "Whether or not this field is displayed when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "internal_name": {
                                                                            "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of field that is presented",
                                                                            "example": "Company Address",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "options": {
                                                                            "description": "Options to select from if this field is a picklist/checkbox",
                                                                            "type": "object"
                                                                        },
                                                                        "placeholder_text": {
                                                                            "description": "The text of the placeholder that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "position": {
                                                                            "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                            "type": "integer"
                                                                        },
                                                                        "required": {
                                                                            "description": "Whether or not this field will be required when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                            "maxLength": 255,
                                                                            "type": "string",
                                                                            "x-accessor": "type_"
                                                                        },
                                                                        "value": {
                                                                            "description": "The value that was submitted to the field and stored on the target object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "group_key": {
                                                                "description": "The unique key of the group in which this deals's partner is in",
                                                                "example": "grup_UHrMpyoNbTBRuc",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "lost_reason": {
                                                                "description": "Reason for which the deal was lost.",
                                                                "example": "Not the right fit",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "meta": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "mold_key": {
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "partner_key": {
                                                                "description": "The unique key of the partner who owns this deal",
                                                                "example": "bertramgilfoyle",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "source": {
                                                                "description": "Source of the deal, either 'partner' or 'vendor', defaults to 'partner' if not specified",
                                                                "enum": [
                                                                    "partner",
                                                                    "vendor"
                                                                ],
                                                                "example": "partner",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "stage": {
                                                                "description": "Current stage of this deal. Must appear in Deals Stage list found in group settings.",
                                                                "example": "Working",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "team": {
                                                                "allOf": [
                                                                    {
                                                                        "description": "Standard fields that are present on all database objects.",
                                                                        "properties": {
                                                                            "created_at": {
                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "key": {
                                                                                "description": "A unique identifier used to reference the object",
                                                                                "example": "co_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "updated_at": {
                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "description": "Details of team used in public API.",
                                                                        "properties": {
                                                                            "name": {
                                                                                "description": "The name of the partner team",
                                                                                "example": "Tushar",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "team_member": {
                                                                "allOf": [
                                                                    {
                                                                        "description": "Standard fields that are present on all database objects.",
                                                                        "properties": {
                                                                            "created_at": {
                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "key": {
                                                                                "description": "A unique identifier used to reference the object",
                                                                                "example": "co_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "updated_at": {
                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "description": "Details of team member used in public API.",
                                                                        "properties": {
                                                                            "email": {
                                                                                "description": "Email of the partner team member",
                                                                                "example": "tushten@partnerstack.com",
                                                                                "type": "string"
                                                                            },
                                                                            "first_name": {
                                                                                "description": "First name of the partner team member",
                                                                                "example": "Tushar",
                                                                                "type": "string"
                                                                            },
                                                                            "last_name": {
                                                                                "description": "Last name of the partner team member",
                                                                                "example": "Sutherland",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "nullable": true,
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Creates a deal with desired params."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "deal:write"
                            ]
                        }
                    ],
                    "summary": "Create a deal",
                    "tags": [
                        "Deals"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/deals/form-templates": {
                "get": {
                    "description": "Fetches the specified form templates for a deal.",
                    "parameters": [
                        {
                            "in": "query",
                            "name": "group_key",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "in": "query",
                            "name": "mold_key",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "in": "query",
                            "name": "partner_key",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "items": {
                                                    "allOf": [
                                                        {
                                                            "description": "Standard fields that are present on all database objects.",
                                                            "properties": {
                                                                "created_at": {
                                                                    "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                    "example": 1574181282399,
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "key": {
                                                                    "description": "A unique identifier used to reference the object",
                                                                    "example": "co_a80cb515fe",
                                                                    "maxLength": 255,
                                                                    "type": "string"
                                                                },
                                                                "updated_at": {
                                                                    "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                    "example": 1574181282399,
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        {
                                                            "description": "**FormTemplates** are configurable on many of our supported objects. These forms act as a way to collect additional information on object create",
                                                            "properties": {
                                                                "description": {
                                                                    "description": "A description for users to better understand the form",
                                                                    "example": "please fill out the entire form to register a deal",
                                                                    "nullable": true,
                                                                    "type": "string",
                                                                    "x-accessor": "target_data.description"
                                                                },
                                                                "fields": {
                                                                    "items": {
                                                                        "description": "**Fields** are attached to **FormTemplates** and allow for configurable options / types of data to collect from partners",
                                                                        "properties": {
                                                                            "default_value": {
                                                                                "description": "The default value that will be pinned to this field on the resulting object if no value is provided"
                                                                            },
                                                                            "help_text": {
                                                                                "description": "Helper text on how to use this field",
                                                                                "maxLength": 255,
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            },
                                                                            "hidden": {
                                                                                "description": "Whether or not this field is displayed when filling out its attached form",
                                                                                "type": "boolean"
                                                                            },
                                                                            "internal_name": {
                                                                                "description": "API name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "maps_to": {
                                                                                "description": "If provided, the response to the current field will map to responses of fields within maps_to array",
                                                                                "type": "array"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of field that is presented",
                                                                                "example": "Company Address",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "options": {
                                                                                "description": "Options to select from if this field is a picklist/checkbox",
                                                                                "type": "object"
                                                                            },
                                                                            "placeholder_text": {
                                                                                "description": "Text to be used as placeholder when filling out this field",
                                                                                "maxLength": 255,
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            },
                                                                            "position": {
                                                                                "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                                "type": "integer"
                                                                            },
                                                                            "protected": {
                                                                                "description": "Boolean that limits values of field that can be edited. If True, this field may not be archived and type as well as required cannot be edited.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "required": {
                                                                                "description": "Whether or not this field will be required when filling out its attached form",
                                                                                "type": "boolean"
                                                                            },
                                                                            "type": {
                                                                                "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                                "maxLength": 255,
                                                                                "type": "string",
                                                                                "x-accessor": "type_"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "groups": {
                                                                    "items": {
                                                                        "allOf": [
                                                                            {
                                                                                "description": "Standard fields that are present on all database objects.",
                                                                                "properties": {
                                                                                    "created_at": {
                                                                                        "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                        "example": 1574181282399,
                                                                                        "format": "int32",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "key": {
                                                                                        "description": "A unique identifier used to reference the object",
                                                                                        "example": "co_a80cb515fe",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "updated_at": {
                                                                                        "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                        "example": 1574181282399,
                                                                                        "format": "int32",
                                                                                        "type": "integer"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            {
                                                                                "description": "**Groups** are a way to segment partners within PartnerStack to selectively distribute access to things such as Campaigns, Marketing Assets, and Rewards",
                                                                                "properties": {
                                                                                    "archived": {
                                                                                        "description": "Whether or not this group is still active",
                                                                                        "nullable": true,
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "default": {
                                                                                        "description": "Whether this is the default Group for partners to join",
                                                                                        "type": "boolean",
                                                                                        "x-accessor": "is_default"
                                                                                    },
                                                                                    "features": {
                                                                                        "description": "Features that partners within this group have access too",
                                                                                        "nullable": true,
                                                                                        "type": "object"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "The name of this Group as presented to partners",
                                                                                        "example": "Resellers",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "slug": {
                                                                                        "description": "The slugified version of this groups name to be added to routes",
                                                                                        "example": "resellers",
                                                                                        "maxLength": 255,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "name": {
                                                                    "description": "The presented name of this form",
                                                                    "example": "Deal registration form",
                                                                    "maxLength": 255,
                                                                    "nullable": true,
                                                                    "type": "string"
                                                                },
                                                                "title": {
                                                                    "description": "A title to display to users when they fill out the form",
                                                                    "example": "My Companies Deal Registration Form",
                                                                    "nullable": true,
                                                                    "type": "string",
                                                                    "x-accessor": "target_data.title"
                                                                },
                                                                "type": {
                                                                    "description": "The type of object within PartnerStack that this form translates to",
                                                                    "example": "deal",
                                                                    "type": "string",
                                                                    "x-accessor": "target_type"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    ]
                                                },
                                                "type": "array"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Fetches the specified form templates for a deal."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "deal:read"
                            ]
                        }
                    ],
                    "summary": "Retrieve the form templates for a deal",
                    "tags": [
                        "Deals"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/deals/{deal_key}": {
                "delete": {
                    "description": "Archives the specified deal",
                    "parameters": [
                        {
                            "description": "Unique identifier of deal.",
                            "example": "deal_1234",
                            "in": "path",
                            "name": "deal_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Archives the specified deal"
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "deal:write"
                            ]
                        }
                    ],
                    "summary": "Archive a deal",
                    "tags": [
                        "Deals"
                    ],
                    "x-isPublic": true
                },
                "get": {
                    "description": "Retrieves the details of an existing deal. You need only supply the unique deal key that was returned upon deal creation.",
                    "parameters": [
                        {
                            "description": "Unique identifier of deal. Can be `external_key`, if one configured for deal.",
                            "example": "deal_1234",
                            "in": "path",
                            "name": "deal_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "**Deals** allow your partners to submit accounts they are working to your sales team to avoid channel conflicts and earn commissions for closed accounts.\n\nTypically the Deals experience is handled through a CRM integration like Salesforce. However you may opt to use the Deals API to have PartnerStack interact with a custom data warehouse rather than directly with your CRM.",
                                                        "properties": {
                                                            "account_name": {
                                                                "description": "Name of the account",
                                                                "example": "Digital Agency Acme",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "amount": {
                                                                "description": "Deal amount in **cents**",
                                                                "example": 25000,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "close_date": {
                                                                "description": "Expected close date of deal as YYYY-MM-DD",
                                                                "example": "2020-03-01",
                                                                "format": "date",
                                                                "type": "string",
                                                                "x-accessor": "close_date_as_date_string"
                                                            },
                                                            "contact_first_name": {
                                                                "description": "First name of the account's contact",
                                                                "example": "John",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "contact_last_name": {
                                                                "description": "Last name of the account's contact",
                                                                "example": "Smith",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "external_key": {
                                                                "description": "Reference that can be used in place of the key.",
                                                                "example": "deal_1234",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "field_data": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "fields": {
                                                                "items": {
                                                                    "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                    "properties": {
                                                                        "api_name": {
                                                                            "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "external_type": {
                                                                            "description": "Name that can be used for external systems",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_key": {
                                                                            "description": "Key of field that is presented",
                                                                            "example": "field_fjkdlrh9i32nfew",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "help_text": {
                                                                            "description": "The help text that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "hidden": {
                                                                            "description": "Whether or not this field is displayed when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "internal_name": {
                                                                            "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of field that is presented",
                                                                            "example": "Company Address",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "options": {
                                                                            "description": "Options to select from if this field is a picklist/checkbox",
                                                                            "type": "object"
                                                                        },
                                                                        "placeholder_text": {
                                                                            "description": "The text of the placeholder that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "position": {
                                                                            "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                            "type": "integer"
                                                                        },
                                                                        "required": {
                                                                            "description": "Whether or not this field will be required when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                            "maxLength": 255,
                                                                            "type": "string",
                                                                            "x-accessor": "type_"
                                                                        },
                                                                        "value": {
                                                                            "description": "The value that was submitted to the field and stored on the target object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "group_key": {
                                                                "description": "The unique key of the group in which this deals's partner is in",
                                                                "example": "grup_UHrMpyoNbTBRuc",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "lost_reason": {
                                                                "description": "Reason for which the deal was lost.",
                                                                "example": "Not the right fit",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "meta": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "mold_key": {
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "partner_key": {
                                                                "description": "The unique key of the partner who owns this deal",
                                                                "example": "bertramgilfoyle",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "source": {
                                                                "description": "Source of the deal, either 'partner' or 'vendor', defaults to 'partner' if not specified",
                                                                "enum": [
                                                                    "partner",
                                                                    "vendor"
                                                                ],
                                                                "example": "partner",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "stage": {
                                                                "description": "Current stage of this deal. Must appear in Deals Stage list found in group settings.",
                                                                "example": "Working",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "team": {
                                                                "allOf": [
                                                                    {
                                                                        "description": "Standard fields that are present on all database objects.",
                                                                        "properties": {
                                                                            "created_at": {
                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "key": {
                                                                                "description": "A unique identifier used to reference the object",
                                                                                "example": "co_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "updated_at": {
                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "description": "Details of team used in public API.",
                                                                        "properties": {
                                                                            "name": {
                                                                                "description": "The name of the partner team",
                                                                                "example": "Tushar",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "team_member": {
                                                                "allOf": [
                                                                    {
                                                                        "description": "Standard fields that are present on all database objects.",
                                                                        "properties": {
                                                                            "created_at": {
                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "key": {
                                                                                "description": "A unique identifier used to reference the object",
                                                                                "example": "co_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "updated_at": {
                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "description": "Details of team member used in public API.",
                                                                        "properties": {
                                                                            "email": {
                                                                                "description": "Email of the partner team member",
                                                                                "example": "tushten@partnerstack.com",
                                                                                "type": "string"
                                                                            },
                                                                            "first_name": {
                                                                                "description": "First name of the partner team member",
                                                                                "example": "Tushar",
                                                                                "type": "string"
                                                                            },
                                                                            "last_name": {
                                                                                "description": "Last name of the partner team member",
                                                                                "example": "Sutherland",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "nullable": true,
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Retrieves the details of an existing deal. You need only supply the unique deal key that was returned upon deal creation."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "deal:read"
                            ]
                        }
                    ],
                    "summary": "Retrieve a deal",
                    "tags": [
                        "Deals"
                    ],
                    "x-isPublic": true
                },
                "patch": {
                    "description": "Updates the specified deal by setting the values of\n    the parameters passed. Any parameters not provided will be left\n    unchanged.",
                    "parameters": [
                        {
                            "description": "Unique identifier of deal. Can be `external_key`, if one configured for deal.",
                            "example": "deal_1234",
                            "in": "path",
                            "name": "deal_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "**Deals** allow your partners to submit accounts they are working to your sales team to avoid channel conflicts and earn commissions for closed accounts.\n\nTypically the Deals experience is handled through a CRM integration like Salesforce. However you may opt to use the Deals API to have PartnerStack interact with a custom data warehouse rather than directly with your CRM.",
                                    "properties": {
                                        "account_name": {
                                            "description": "Name of the account",
                                            "example": "Digital Agency Acme",
                                            "maxLength": 255,
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Deal amount in **cents**",
                                            "example": 25000,
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "close_date": {
                                            "description": "Expected close date of deal as YYYY-MM-DD",
                                            "example": "2020-03-01",
                                            "format": "date",
                                            "type": "string",
                                            "x-accessor": "close_date_as_date_string"
                                        },
                                        "contact_first_name": {
                                            "description": "First name of the account's contact",
                                            "example": "John",
                                            "maxLength": 255,
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "contact_last_name": {
                                            "description": "Last name of the account's contact",
                                            "example": "Smith",
                                            "maxLength": 255,
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "external_key": {
                                            "description": "Reference that can be used in place of the key.",
                                            "example": "deal_1234",
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "field_data": {
                                            "nullable": true,
                                            "type": "object"
                                        },
                                        "fields": {
                                            "items": {
                                                "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                "properties": {
                                                    "api_name": {
                                                        "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                        "maxLength": 255,
                                                        "type": "string"
                                                    },
                                                    "external_type": {
                                                        "description": "Name that can be used for external systems",
                                                        "maxLength": 255,
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "field_key": {
                                                        "description": "Key of field that is presented",
                                                        "example": "field_fjkdlrh9i32nfew",
                                                        "maxLength": 255,
                                                        "type": "string"
                                                    },
                                                    "help_text": {
                                                        "description": "The help text that is provided for this field",
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "hidden": {
                                                        "description": "Whether or not this field is displayed when filling out its attached form",
                                                        "type": "boolean"
                                                    },
                                                    "internal_name": {
                                                        "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                        "maxLength": 255,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Name of field that is presented",
                                                        "example": "Company Address",
                                                        "maxLength": 255,
                                                        "type": "string"
                                                    },
                                                    "options": {
                                                        "description": "Options to select from if this field is a picklist/checkbox",
                                                        "type": "object"
                                                    },
                                                    "placeholder_text": {
                                                        "description": "The text of the placeholder that is provided for this field",
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "position": {
                                                        "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                        "type": "integer"
                                                    },
                                                    "required": {
                                                        "description": "Whether or not this field will be required when filling out its attached form",
                                                        "type": "boolean"
                                                    },
                                                    "type": {
                                                        "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                        "maxLength": 255,
                                                        "type": "string",
                                                        "x-accessor": "type_"
                                                    },
                                                    "value": {
                                                        "description": "The value that was submitted to the field and stored on the target object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "group_key": {
                                            "description": "The unique key of the group in which this deals's partner is in",
                                            "example": "grup_UHrMpyoNbTBRuc",
                                            "maxLength": 255,
                                            "type": "string"
                                        },
                                        "lost_reason": {
                                            "description": "Reason for which the deal was lost.",
                                            "example": "Not the right fit",
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "meta": {
                                            "nullable": true,
                                            "type": "object"
                                        },
                                        "mold_key": {
                                            "maxLength": 40,
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "partner_key": {
                                            "description": "The unique key of the partner who owns this deal",
                                            "example": "bertramgilfoyle",
                                            "maxLength": 255,
                                            "type": "string"
                                        },
                                        "source": {
                                            "description": "Source of the deal, either 'partner' or 'vendor', defaults to 'partner' if not specified",
                                            "enum": [
                                                "partner",
                                                "vendor"
                                            ],
                                            "example": "partner",
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "stage": {
                                            "description": "Current stage of this deal. Must appear in Deals Stage list found in group settings.",
                                            "example": "Working",
                                            "maxLength": 255,
                                            "type": "string"
                                        },
                                        "team": {
                                            "allOf": [
                                                {
                                                    "description": "Standard fields that are present on all database objects.",
                                                    "properties": {
                                                        "created_at": {
                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                            "example": 1574181282399,
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "key": {
                                                            "description": "A unique identifier used to reference the object",
                                                            "example": "co_a80cb515fe",
                                                            "maxLength": 255,
                                                            "type": "string"
                                                        },
                                                        "updated_at": {
                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                            "example": 1574181282399,
                                                            "format": "int32",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                {
                                                    "description": "Details of team used in public API.",
                                                    "properties": {
                                                        "name": {
                                                            "description": "The name of the partner team",
                                                            "example": "Tushar",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ],
                                            "nullable": true,
                                            "type": "object"
                                        },
                                        "team_member": {
                                            "allOf": [
                                                {
                                                    "description": "Standard fields that are present on all database objects.",
                                                    "properties": {
                                                        "created_at": {
                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                            "example": 1574181282399,
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "key": {
                                                            "description": "A unique identifier used to reference the object",
                                                            "example": "co_a80cb515fe",
                                                            "maxLength": 255,
                                                            "type": "string"
                                                        },
                                                        "updated_at": {
                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                            "example": 1574181282399,
                                                            "format": "int32",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                {
                                                    "description": "Details of team member used in public API.",
                                                    "properties": {
                                                        "email": {
                                                            "description": "Email of the partner team member",
                                                            "example": "tushten@partnerstack.com",
                                                            "type": "string"
                                                        },
                                                        "first_name": {
                                                            "description": "First name of the partner team member",
                                                            "example": "Tushar",
                                                            "type": "string"
                                                        },
                                                        "last_name": {
                                                            "description": "Last name of the partner team member",
                                                            "example": "Sutherland",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ],
                                            "nullable": true,
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "**Deals** allow your partners to submit accounts they are working to your sales team to avoid channel conflicts and earn commissions for closed accounts.\n\nTypically the Deals experience is handled through a CRM integration like Salesforce. However you may opt to use the Deals API to have PartnerStack interact with a custom data warehouse rather than directly with your CRM.",
                                                        "properties": {
                                                            "account_name": {
                                                                "description": "Name of the account",
                                                                "example": "Digital Agency Acme",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "amount": {
                                                                "description": "Deal amount in **cents**",
                                                                "example": 25000,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "close_date": {
                                                                "description": "Expected close date of deal as YYYY-MM-DD",
                                                                "example": "2020-03-01",
                                                                "format": "date",
                                                                "type": "string",
                                                                "x-accessor": "close_date_as_date_string"
                                                            },
                                                            "contact_first_name": {
                                                                "description": "First name of the account's contact",
                                                                "example": "John",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "contact_last_name": {
                                                                "description": "Last name of the account's contact",
                                                                "example": "Smith",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "external_key": {
                                                                "description": "Reference that can be used in place of the key.",
                                                                "example": "deal_1234",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "field_data": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "fields": {
                                                                "items": {
                                                                    "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                    "properties": {
                                                                        "api_name": {
                                                                            "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "external_type": {
                                                                            "description": "Name that can be used for external systems",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_key": {
                                                                            "description": "Key of field that is presented",
                                                                            "example": "field_fjkdlrh9i32nfew",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "help_text": {
                                                                            "description": "The help text that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "hidden": {
                                                                            "description": "Whether or not this field is displayed when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "internal_name": {
                                                                            "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of field that is presented",
                                                                            "example": "Company Address",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "options": {
                                                                            "description": "Options to select from if this field is a picklist/checkbox",
                                                                            "type": "object"
                                                                        },
                                                                        "placeholder_text": {
                                                                            "description": "The text of the placeholder that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "position": {
                                                                            "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                            "type": "integer"
                                                                        },
                                                                        "required": {
                                                                            "description": "Whether or not this field will be required when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                            "maxLength": 255,
                                                                            "type": "string",
                                                                            "x-accessor": "type_"
                                                                        },
                                                                        "value": {
                                                                            "description": "The value that was submitted to the field and stored on the target object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "group_key": {
                                                                "description": "The unique key of the group in which this deals's partner is in",
                                                                "example": "grup_UHrMpyoNbTBRuc",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "lost_reason": {
                                                                "description": "Reason for which the deal was lost.",
                                                                "example": "Not the right fit",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "meta": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "mold_key": {
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "partner_key": {
                                                                "description": "The unique key of the partner who owns this deal",
                                                                "example": "bertramgilfoyle",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "source": {
                                                                "description": "Source of the deal, either 'partner' or 'vendor', defaults to 'partner' if not specified",
                                                                "enum": [
                                                                    "partner",
                                                                    "vendor"
                                                                ],
                                                                "example": "partner",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "stage": {
                                                                "description": "Current stage of this deal. Must appear in Deals Stage list found in group settings.",
                                                                "example": "Working",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "team": {
                                                                "allOf": [
                                                                    {
                                                                        "description": "Standard fields that are present on all database objects.",
                                                                        "properties": {
                                                                            "created_at": {
                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "key": {
                                                                                "description": "A unique identifier used to reference the object",
                                                                                "example": "co_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "updated_at": {
                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "description": "Details of team used in public API.",
                                                                        "properties": {
                                                                            "name": {
                                                                                "description": "The name of the partner team",
                                                                                "example": "Tushar",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "team_member": {
                                                                "allOf": [
                                                                    {
                                                                        "description": "Standard fields that are present on all database objects.",
                                                                        "properties": {
                                                                            "created_at": {
                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "key": {
                                                                                "description": "A unique identifier used to reference the object",
                                                                                "example": "co_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "updated_at": {
                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "description": "Details of team member used in public API.",
                                                                        "properties": {
                                                                            "email": {
                                                                                "description": "Email of the partner team member",
                                                                                "example": "tushten@partnerstack.com",
                                                                                "type": "string"
                                                                            },
                                                                            "first_name": {
                                                                                "description": "First name of the partner team member",
                                                                                "example": "Tushar",
                                                                                "type": "string"
                                                                            },
                                                                            "last_name": {
                                                                                "description": "Last name of the partner team member",
                                                                                "example": "Sutherland",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "nullable": true,
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Updates the specified deal by setting the values of\n    the parameters passed. Any parameters not provided will be left\n    unchanged."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "deal:write"
                            ]
                        }
                    ],
                    "summary": "Update a deal",
                    "tags": [
                        "Deals"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/deals/{deal_key}/convert": {
                "post": {
                    "description": "Converts a deal to a customer",
                    "parameters": [
                        {
                            "description": "Unique identifier of deal.",
                            "example": "deal_1234",
                            "in": "path",
                            "name": "deal_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "customer_key": {
                                            "description": "Unique identifier to be used for customer. If no value is passed email of deal being converted will be used as `customer_key`.",
                                            "example": "cus_1234",
                                            "type": "string"
                                        },
                                        "email": {
                                            "description": "The customers email, must be a valid email.",
                                            "example": "johnsmith@gmail.com",
                                            "format": "email",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "email"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "**Customers** represent the users who have been referred by a **Partner**.\n\n**Customers** are linked to the **Partner** that referred them through a **partner_key** which must be provided on the Create Customer endpoint.\n\nThe **partner_key** is retrievable from `growsumo.data.partner_key`, which is created by the `PartnerStackJS` snippet.",
                                                        "properties": {
                                                            "customer_key": {
                                                                "description": "External customer key that can be configured on creation.",
                                                                "example": "123435",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string",
                                                                "x-accessor": "external_key"
                                                            },
                                                            "email": {
                                                                "description": "The customers email, must be a valid email",
                                                                "example": "johnsmith@gmail.com",
                                                                "format": "email",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "field_data": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "fields": {
                                                                "items": {
                                                                    "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                    "properties": {
                                                                        "api_name": {
                                                                            "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "external_type": {
                                                                            "description": "Name that can be used for external systems",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_key": {
                                                                            "description": "Key of field that is presented",
                                                                            "example": "field_fjkdlrh9i32nfew",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "help_text": {
                                                                            "description": "The help text that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "hidden": {
                                                                            "description": "Whether or not this field is displayed when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "internal_name": {
                                                                            "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of field that is presented",
                                                                            "example": "Company Address",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "options": {
                                                                            "description": "Options to select from if this field is a picklist/checkbox",
                                                                            "type": "object"
                                                                        },
                                                                        "placeholder_text": {
                                                                            "description": "The text of the placeholder that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "position": {
                                                                            "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                            "type": "integer"
                                                                        },
                                                                        "required": {
                                                                            "description": "Whether or not this field will be required when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                            "maxLength": 255,
                                                                            "type": "string",
                                                                            "x-accessor": "type_"
                                                                        },
                                                                        "value": {
                                                                            "description": "The value that was submitted to the field and stored on the target object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "meta": {
                                                                "description": "Additional custom fields for the customer that is configured in your PartnerStack dashboard.",
                                                                "example": {
                                                                    "field": "value"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "description": "Should be either the customer's name, or the company name",
                                                                "example": "John Smith",
                                                                "maxLength": 100,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "partner_key": {
                                                                "description": "The key of the partner that is responsible for the customer",
                                                                "example": "bertramgilfoyle",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "partnership_key": {
                                                                "description": "Unique key of this partnership.",
                                                                "example": "part_A7nGc9pKnx8xEW",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "provider_key": {
                                                                "description": "A unique identifier given by a payment provider (Stripe, Recurly, Chargebee etc)",
                                                                "example": "cus_AJ6bvXbVofMpsW",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "source_key": {
                                                                "description": "The key of the source at which the customer was created through",
                                                                "example": "deal_987us345r2",
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "source_type": {
                                                                "description": "The source at which the customer was created through",
                                                                "example": "deal",
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "test": {
                                                                "description": "True if created by a test partner",
                                                                "example": true,
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Converts a deal to a customer"
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        }
                    ],
                    "summary": "Convert a deal",
                    "tags": [
                        "Deals"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/deals/{deal_key}/files": {
                "get": {
                    "description": "Gets the files attached to the specified deal",
                    "parameters": [
                        {
                            "description": "Unique identifier of the deal",
                            "example": "deal_9KgQyH8Uzm4t4V",
                            "in": "path",
                            "name": "deal_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "deal_files": {
                                                        "items": {
                                                            "properties": {
                                                                "field_key": {
                                                                    "type": "string"
                                                                },
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Gets the files attached to the specified deal"
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "deal:read"
                            ]
                        }
                    ],
                    "summary": "Get files attached to a deal",
                    "tags": [
                        "Deals"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/form-templates": {
                "get": {
                    "description": "Returns a list of your form templates. The\n    form templates are returned sorted by creation date, with the most\n    recent form templates appearing first.",
                    "parameters": [
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Will filter for partnerships who are in a group with the specified name. Name must have spaces and special characters removed.",
                            "example": "resellers",
                            "in": "query",
                            "name": "group",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.",
                            "example": 10,
                            "in": "query",
                            "name": "limit",
                            "schema": {
                                "default": 10,
                                "maximum": 250,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.",
                            "example": "key_8U5s1iH2Pd2a2p",
                            "in": "query",
                            "name": "starting_after",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.",
                            "example": "key_sE1vd9uwep7XHg",
                            "in": "query",
                            "name": "ending_before",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "The molds' target type. If empty, filter by all types.",
                            "in": "query",
                            "name": "target_type",
                            "required": false,
                            "schema": {
                                "enum": [
                                    "link",
                                    "application",
                                    "deal",
                                    "lead",
                                    "customer",
                                    "request",
                                    "partnership",
                                    "announcement",
                                    "mdf"
                                ],
                                "type": "string"
                            }
                        },
                        {
                            "description": "The keys of the molds to filter by. If empty, returns fields for all molds.",
                            "in": "query",
                            "name": "mold_keys",
                            "required": false,
                            "schema": {
                                "example": "['mold_jRq2wKrJyTIEj7', 'mold_svJk6FKsOT6R8Q']",
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "has_more": {
                                                        "type": "boolean"
                                                    },
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "description": "**FormTemplates** are configurable on many of our supported objects. These forms act as a way to collect additional information on object create",
                                                                    "properties": {
                                                                        "description": {
                                                                            "description": "A description for users to better understand the form",
                                                                            "example": "please fill out the entire form to register a deal",
                                                                            "nullable": true,
                                                                            "type": "string",
                                                                            "x-accessor": "target_data.description"
                                                                        },
                                                                        "fields": {
                                                                            "items": {
                                                                                "description": "**Fields** are attached to **FormTemplates** and allow for configurable options / types of data to collect from partners",
                                                                                "properties": {
                                                                                    "default_value": {
                                                                                        "description": "The default value that will be pinned to this field on the resulting object if no value is provided"
                                                                                    },
                                                                                    "help_text": {
                                                                                        "description": "Helper text on how to use this field",
                                                                                        "maxLength": 255,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "hidden": {
                                                                                        "description": "Whether or not this field is displayed when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "internal_name": {
                                                                                        "description": "API name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "maps_to": {
                                                                                        "description": "If provided, the response to the current field will map to responses of fields within maps_to array",
                                                                                        "type": "array"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of field that is presented",
                                                                                        "example": "Company Address",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "options": {
                                                                                        "description": "Options to select from if this field is a picklist/checkbox",
                                                                                        "type": "object"
                                                                                    },
                                                                                    "placeholder_text": {
                                                                                        "description": "Text to be used as placeholder when filling out this field",
                                                                                        "maxLength": 255,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "position": {
                                                                                        "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "protected": {
                                                                                        "description": "Boolean that limits values of field that can be edited. If True, this field may not be archived and type as well as required cannot be edited.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "required": {
                                                                                        "description": "Whether or not this field will be required when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "type": {
                                                                                        "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                                        "maxLength": 255,
                                                                                        "type": "string",
                                                                                        "x-accessor": "type_"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "groups": {
                                                                            "items": {
                                                                                "allOf": [
                                                                                    {
                                                                                        "description": "Standard fields that are present on all database objects.",
                                                                                        "properties": {
                                                                                            "created_at": {
                                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                                "example": 1574181282399,
                                                                                                "format": "int32",
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "key": {
                                                                                                "description": "A unique identifier used to reference the object",
                                                                                                "example": "co_a80cb515fe",
                                                                                                "maxLength": 255,
                                                                                                "type": "string"
                                                                                            },
                                                                                            "updated_at": {
                                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                                "example": 1574181282399,
                                                                                                "format": "int32",
                                                                                                "type": "integer"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    {
                                                                                        "description": "**Groups** are a way to segment partners within PartnerStack to selectively distribute access to things such as Campaigns, Marketing Assets, and Rewards",
                                                                                        "properties": {
                                                                                            "archived": {
                                                                                                "description": "Whether or not this group is still active",
                                                                                                "nullable": true,
                                                                                                "type": "boolean"
                                                                                            },
                                                                                            "default": {
                                                                                                "description": "Whether this is the default Group for partners to join",
                                                                                                "type": "boolean",
                                                                                                "x-accessor": "is_default"
                                                                                            },
                                                                                            "features": {
                                                                                                "description": "Features that partners within this group have access too",
                                                                                                "nullable": true,
                                                                                                "type": "object"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "The name of this Group as presented to partners",
                                                                                                "example": "Resellers",
                                                                                                "maxLength": 255,
                                                                                                "type": "string"
                                                                                            },
                                                                                            "slug": {
                                                                                                "description": "The slugified version of this groups name to be added to routes",
                                                                                                "example": "resellers",
                                                                                                "maxLength": 255,
                                                                                                "nullable": true,
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "name": {
                                                                            "description": "The presented name of this form",
                                                                            "example": "Deal registration form",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "title": {
                                                                            "description": "A title to display to users when they fill out the form",
                                                                            "example": "My Companies Deal Registration Form",
                                                                            "nullable": true,
                                                                            "type": "string",
                                                                            "x-accessor": "target_data.title"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of object within PartnerStack that this form translates to",
                                                                            "example": "deal",
                                                                            "type": "string",
                                                                            "x-accessor": "target_type"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Returns a list of your form templates. The\n    form templates are returned sorted by creation date, with the most\n    recent form templates appearing first."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "form_template:read"
                            ]
                        }
                    ],
                    "summary": "List all form templates",
                    "tags": [
                        "Form Templates"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/groups": {
                "get": {
                    "description": "Returns a list of your groups. The groups are returned sorted by creation date, with the most recent groups appearing first.",
                    "parameters": [
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.",
                            "example": 10,
                            "in": "query",
                            "name": "limit",
                            "schema": {
                                "default": 10,
                                "maximum": 250,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.",
                            "example": "key_8U5s1iH2Pd2a2p",
                            "in": "query",
                            "name": "starting_after",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.",
                            "example": "key_sE1vd9uwep7XHg",
                            "in": "query",
                            "name": "ending_before",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "has_more": {
                                                        "type": "boolean"
                                                    },
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "description": "**Groups** are a way to segment partners within PartnerStack to selectively distribute access to things such as Campaigns, Marketing Assets, and Rewards",
                                                                    "properties": {
                                                                        "archived": {
                                                                            "description": "Whether or not this group is still active",
                                                                            "nullable": true,
                                                                            "type": "boolean"
                                                                        },
                                                                        "default": {
                                                                            "description": "Whether this is the default Group for partners to join",
                                                                            "type": "boolean",
                                                                            "x-accessor": "is_default"
                                                                        },
                                                                        "features": {
                                                                            "description": "Features that partners within this group have access too",
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        },
                                                                        "name": {
                                                                            "description": "The name of this Group as presented to partners",
                                                                            "example": "Resellers",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "slug": {
                                                                            "description": "The slugified version of this groups name to be added to routes",
                                                                            "example": "resellers",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Returns a list of your groups. The groups are returned sorted by creation date, with the most recent groups appearing first."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "group:read"
                            ]
                        }
                    ],
                    "summary": "List all groups",
                    "tags": [
                        "Groups"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/leads": {
                "get": {
                    "description": "Returns a list of your leads. The leads are\n    returned sorted by creation date, with the most recent leads\n    appearing first.",
                    "parameters": [
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Will filter for partnerships who are in a group with the specified name. Name must have spaces and special characters removed.",
                            "example": "resellers",
                            "in": "query",
                            "name": "group",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Will filter to a specific partnership's `partner_key`, which can be found using the partnership's get endpoint or from the partnership view in your PartnerStack dashboard.",
                            "example": "bertramgilfoyle",
                            "in": "query",
                            "name": "partner_key",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.",
                            "example": 10,
                            "in": "query",
                            "name": "limit",
                            "schema": {
                                "default": 10,
                                "maximum": 250,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.",
                            "example": "key_8U5s1iH2Pd2a2p",
                            "in": "query",
                            "name": "starting_after",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.",
                            "example": "key_sE1vd9uwep7XHg",
                            "in": "query",
                            "name": "ending_before",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "has_more": {
                                                        "type": "boolean"
                                                    },
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "description": "**Leads** are submitted by your partners to let your sales team know of potential accounts that they may wish to work. Partners may earn comission for qualified leads, or leads that eventually become closed accounts.",
                                                                    "properties": {
                                                                        "amount": {
                                                                            "description": "Lead amount in **cents**",
                                                                            "example": 25000,
                                                                            "format": "int32",
                                                                            "nullable": true,
                                                                            "type": "integer"
                                                                        },
                                                                        "approved": {
                                                                            "description": "Used to indicate whether this lead has been approved to move past the closed stage",
                                                                            "nullable": true,
                                                                            "type": "boolean"
                                                                        },
                                                                        "customer_key": {
                                                                            "description": "Unique identifier to be used for Customer after a lead has been converted",
                                                                            "example": "cus_1234",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "external_key": {
                                                                            "description": "A unique key that identifies this lead in an external system. This key must be unique across all leads in your account. This key is used to identify leads when they are updated or deleted. Often provided as an email, but can be any unique string.",
                                                                            "example": "361ba21c-ca87-46b0-baa4-97ca16e55059",
                                                                            "type": "string"
                                                                        },
                                                                        "field_data": {
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        },
                                                                        "fields": {
                                                                            "items": {
                                                                                "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                                "properties": {
                                                                                    "api_name": {
                                                                                        "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "external_type": {
                                                                                        "description": "Name that can be used for external systems",
                                                                                        "maxLength": 255,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "field_key": {
                                                                                        "description": "Key of field that is presented",
                                                                                        "example": "field_fjkdlrh9i32nfew",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "help_text": {
                                                                                        "description": "The help text that is provided for this field",
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "hidden": {
                                                                                        "description": "Whether or not this field is displayed when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "internal_name": {
                                                                                        "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of field that is presented",
                                                                                        "example": "Company Address",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "options": {
                                                                                        "description": "Options to select from if this field is a picklist/checkbox",
                                                                                        "type": "object"
                                                                                    },
                                                                                    "placeholder_text": {
                                                                                        "description": "The text of the placeholder that is provided for this field",
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "position": {
                                                                                        "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "required": {
                                                                                        "description": "Whether or not this field will be required when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "type": {
                                                                                        "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                                        "maxLength": 255,
                                                                                        "type": "string",
                                                                                        "x-accessor": "type_"
                                                                                    },
                                                                                    "value": {
                                                                                        "description": "The value that was submitted to the field and stored on the target object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "group_key": {
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "meta": {
                                                                            "additionalProperties": true,
                                                                            "description": "Key value pairs that store additional information about this lead. First and last name required. Other eligible keys are based on Lead forms created. Use the /leads/form-template to view field names",
                                                                            "nullable": true,
                                                                            "properties": {
                                                                                "company": {
                                                                                    "example": "Lockman Olson",
                                                                                    "type": "string"
                                                                                },
                                                                                "email": {
                                                                                    "example": "River96@example.com",
                                                                                    "type": "string"
                                                                                },
                                                                                "first_name": {
                                                                                    "example": "River",
                                                                                    "type": "string"
                                                                                },
                                                                                "last_name": {
                                                                                    "example": "Tremblay",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "mold_key": {
                                                                            "maxLength": 40,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "partner_key": {
                                                                            "description": "The unique key of the partner who submitted this lead",
                                                                            "example": "bertramgilfoyle",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "stage_data": {
                                                                            "description": "Information about the current lead's stage",
                                                                            "nullable": true,
                                                                            "properties": {
                                                                                "api_name": {
                                                                                    "description": "A unique identifier that reflects what this stage means in a vendor's external system, like a CRM.",
                                                                                    "example": "closed won",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "description": {
                                                                                    "description": "A description of this stage in the sales pipeline",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "internal_status": {
                                                                                    "description": "What the given stage represents internally to PartnerStack",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "description": "A unique key that references the stage within PartnerStack's systems",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "description": "The name of the stage",
                                                                                    "example": "Closed Won",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object",
                                                                            "x-accessor": "stage"
                                                                        },
                                                                        "status": {
                                                                            "description": "Current status of this lead. Must be one of either 'open', 'closed', 'dead', 'closed won', or 'closed lost. Note that open = New, closed = Qualified and dead = Unqualified default stages in the PartnerStack dashboard.'",
                                                                            "enum": [
                                                                                "open",
                                                                                "closed",
                                                                                "dead",
                                                                                "closed won",
                                                                                "closed lost"
                                                                            ],
                                                                            "example": "open",
                                                                            "type": "string",
                                                                            "x-accessor": "status_mapping"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "properties": {
                                                                        "team": {
                                                                            "allOf": [
                                                                                {
                                                                                    "description": "Standard fields that are present on all database objects.",
                                                                                    "properties": {
                                                                                        "created_at": {
                                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "A unique identifier used to reference the object",
                                                                                            "example": "co_a80cb515fe",
                                                                                            "maxLength": 255,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "updated_at": {
                                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                {
                                                                                    "description": "Details of team used in public API.",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "description": "The name of the partner team",
                                                                                            "example": "Tushar",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            ],
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        },
                                                                        "team_member": {
                                                                            "allOf": [
                                                                                {
                                                                                    "description": "Standard fields that are present on all database objects.",
                                                                                    "properties": {
                                                                                        "created_at": {
                                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "A unique identifier used to reference the object",
                                                                                            "example": "co_a80cb515fe",
                                                                                            "maxLength": 255,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "updated_at": {
                                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                {
                                                                                    "description": "Details of team member used in public API.",
                                                                                    "properties": {
                                                                                        "email": {
                                                                                            "description": "Email of the partner team member",
                                                                                            "example": "tushten@partnerstack.com",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "first_name": {
                                                                                            "description": "First name of the partner team member",
                                                                                            "example": "Tushar",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "last_name": {
                                                                                            "description": "Last name of the partner team member",
                                                                                            "example": "Sutherland",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            ],
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "array"
                                                    },
                                                    "total": {
                                                        "nullable": true,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Returns a list of your leads. The leads are\n    returned sorted by creation date, with the most recent leads\n    appearing first."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "lead:read"
                            ]
                        }
                    ],
                    "summary": "List all leads",
                    "tags": [
                        "Leads"
                    ],
                    "x-isPublic": true,
                    "x-scope": "read"
                },
                "post": {
                    "description": "Creates a lead with desired params.",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "**Leads** are submitted by your partners to let your sales team know of potential accounts that they may wish to work. Partners may earn comission for qualified leads, or leads that eventually become closed accounts.",
                                            "properties": {
                                                "amount": {
                                                    "description": "Lead amount in **cents**",
                                                    "example": 25000,
                                                    "format": "int32",
                                                    "nullable": true,
                                                    "type": "integer"
                                                },
                                                "approved": {
                                                    "description": "Used to indicate whether this lead has been approved to move past the closed stage",
                                                    "enum": [
                                                        true,
                                                        false
                                                    ],
                                                    "nullable": true,
                                                    "type": "boolean"
                                                },
                                                "external_key": {
                                                    "description": "A unique key that identifies this lead in an external system. This key must be unique across all leads in your account. This key is used to identify leads when they are updated or deleted. Often provided as an email, but can be any unique string.",
                                                    "example": "361ba21c-ca87-46b0-baa4-97ca16e55059",
                                                    "type": "string"
                                                },
                                                "field_data": {
                                                    "nullable": true,
                                                    "type": "object"
                                                },
                                                "fields": {
                                                    "items": {
                                                        "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                        "properties": {
                                                            "api_name": {
                                                                "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "external_type": {
                                                                "description": "Name that can be used for external systems",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "field_key": {
                                                                "description": "Key of field that is presented",
                                                                "example": "field_fjkdlrh9i32nfew",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "help_text": {
                                                                "description": "The help text that is provided for this field",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "hidden": {
                                                                "description": "Whether or not this field is displayed when filling out its attached form",
                                                                "type": "boolean"
                                                            },
                                                            "internal_name": {
                                                                "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Name of field that is presented",
                                                                "example": "Company Address",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "options": {
                                                                "description": "Options to select from if this field is a picklist/checkbox",
                                                                "type": "object"
                                                            },
                                                            "placeholder_text": {
                                                                "description": "The text of the placeholder that is provided for this field",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "position": {
                                                                "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                "type": "integer"
                                                            },
                                                            "required": {
                                                                "description": "Whether or not this field will be required when filling out its attached form",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                "maxLength": 255,
                                                                "type": "string",
                                                                "x-accessor": "type_"
                                                            },
                                                            "value": {
                                                                "description": "The value that was submitted to the field and stored on the target object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "group_key": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "meta": {
                                                    "additionalProperties": true,
                                                    "description": "Key value pairs that store additional information about this lead. First and last name required. Other eligible keys are based on Lead forms created. Use the /leads/form-template to view field names",
                                                    "nullable": false,
                                                    "properties": {
                                                        "company": {
                                                            "example": "Lockman Olson",
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "example": "River96@example.com",
                                                            "type": "string"
                                                        },
                                                        "first_name": {
                                                            "example": "River",
                                                            "type": "string"
                                                        },
                                                        "last_name": {
                                                            "example": "Tremblay",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "first_name",
                                                        "last_name",
                                                        "company"
                                                    ],
                                                    "type": "object"
                                                },
                                                "mold_key": {
                                                    "maxLength": 40,
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "partner_key": {
                                                    "description": "The unique key of the partner who submitted this lead",
                                                    "example": "bertramgilfoyle",
                                                    "maxLength": 255,
                                                    "type": "string"
                                                },
                                                "personal_stack_key": {
                                                    "description": "The unique personal stack_key of the partner team member who submitted this lead. To select a team member, please pass either the personal_stack_key or the team_member_email.",
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "stage_api_name": {
                                                    "description": "The api_name of the Stage this lead should be in. This is used to determine the current stage of the lead. If not provided, the lead will be placed in the first stage of the sales cycle.",
                                                    "example": "crm_stage_123",
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "Current status of this lead. Must be one of either 'open', 'closed', 'dead', 'closed won', or 'closed lost'. Note that open = New, closed = Qualified and dead = Unqualified default stages in the PartnerStack dashboard.",
                                                    "enum": [
                                                        "open",
                                                        "closed",
                                                        "dead",
                                                        "closed won",
                                                        "closed lost"
                                                    ],
                                                    "example": "open",
                                                    "nullable": true,
                                                    "type": "string",
                                                    "x-accessor": "status_mapping"
                                                },
                                                "team_member_email": {
                                                    "description": "The email of the partner team member who submitted this lead. To select a team member, please pass either the personal_stack_key or the team_member_email.",
                                                    "nullable": true,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "external_key",
                                                "meta",
                                                "partner_key"
                                            ],
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "**Leads** are submitted by your partners to let your sales team know of potential accounts that they may wish to work. Partners may earn comission for qualified leads, or leads that eventually become closed accounts.",
                                                        "properties": {
                                                            "amount": {
                                                                "description": "Lead amount in **cents**",
                                                                "example": 25000,
                                                                "format": "int32",
                                                                "nullable": true,
                                                                "type": "integer"
                                                            },
                                                            "approved": {
                                                                "description": "Used to indicate whether this lead has been approved to move past the closed stage",
                                                                "nullable": true,
                                                                "type": "boolean"
                                                            },
                                                            "customer_key": {
                                                                "description": "Unique identifier to be used for Customer after a lead has been converted",
                                                                "example": "cus_1234",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "external_key": {
                                                                "description": "A unique key that identifies this lead in an external system. This key must be unique across all leads in your account. This key is used to identify leads when they are updated or deleted. Often provided as an email, but can be any unique string.",
                                                                "example": "361ba21c-ca87-46b0-baa4-97ca16e55059",
                                                                "type": "string"
                                                            },
                                                            "field_data": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "fields": {
                                                                "items": {
                                                                    "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                    "properties": {
                                                                        "api_name": {
                                                                            "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "external_type": {
                                                                            "description": "Name that can be used for external systems",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_key": {
                                                                            "description": "Key of field that is presented",
                                                                            "example": "field_fjkdlrh9i32nfew",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "help_text": {
                                                                            "description": "The help text that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "hidden": {
                                                                            "description": "Whether or not this field is displayed when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "internal_name": {
                                                                            "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of field that is presented",
                                                                            "example": "Company Address",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "options": {
                                                                            "description": "Options to select from if this field is a picklist/checkbox",
                                                                            "type": "object"
                                                                        },
                                                                        "placeholder_text": {
                                                                            "description": "The text of the placeholder that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "position": {
                                                                            "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                            "type": "integer"
                                                                        },
                                                                        "required": {
                                                                            "description": "Whether or not this field will be required when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                            "maxLength": 255,
                                                                            "type": "string",
                                                                            "x-accessor": "type_"
                                                                        },
                                                                        "value": {
                                                                            "description": "The value that was submitted to the field and stored on the target object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "group_key": {
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "meta": {
                                                                "additionalProperties": true,
                                                                "description": "Key value pairs that store additional information about this lead. First and last name required. Other eligible keys are based on Lead forms created. Use the /leads/form-template to view field names",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "company": {
                                                                        "example": "Lockman Olson",
                                                                        "type": "string"
                                                                    },
                                                                    "email": {
                                                                        "example": "River96@example.com",
                                                                        "type": "string"
                                                                    },
                                                                    "first_name": {
                                                                        "example": "River",
                                                                        "type": "string"
                                                                    },
                                                                    "last_name": {
                                                                        "example": "Tremblay",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "mold_key": {
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "partner_key": {
                                                                "description": "The unique key of the partner who submitted this lead",
                                                                "example": "bertramgilfoyle",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "stage_data": {
                                                                "description": "Information about the current lead's stage",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "api_name": {
                                                                        "description": "A unique identifier that reflects what this stage means in a vendor's external system, like a CRM.",
                                                                        "example": "closed won",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "description": {
                                                                        "description": "A description of this stage in the sales pipeline",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "internal_status": {
                                                                        "description": "What the given stage represents internally to PartnerStack",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "key": {
                                                                        "description": "A unique key that references the stage within PartnerStack's systems",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the stage",
                                                                        "example": "Closed Won",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object",
                                                                "x-accessor": "stage"
                                                            },
                                                            "status": {
                                                                "description": "Current status of this lead. Must be one of either 'open', 'closed', 'dead', 'closed won', or 'closed lost. Note that open = New, closed = Qualified and dead = Unqualified default stages in the PartnerStack dashboard.'",
                                                                "enum": [
                                                                    "open",
                                                                    "closed",
                                                                    "dead",
                                                                    "closed won",
                                                                    "closed lost"
                                                                ],
                                                                "example": "open",
                                                                "type": "string",
                                                                "x-accessor": "status_mapping"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "team": {
                                                                "allOf": [
                                                                    {
                                                                        "description": "Standard fields that are present on all database objects.",
                                                                        "properties": {
                                                                            "created_at": {
                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "key": {
                                                                                "description": "A unique identifier used to reference the object",
                                                                                "example": "co_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "updated_at": {
                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "description": "Details of team used in public API.",
                                                                        "properties": {
                                                                            "name": {
                                                                                "description": "The name of the partner team",
                                                                                "example": "Tushar",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "team_member": {
                                                                "allOf": [
                                                                    {
                                                                        "description": "Standard fields that are present on all database objects.",
                                                                        "properties": {
                                                                            "created_at": {
                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "key": {
                                                                                "description": "A unique identifier used to reference the object",
                                                                                "example": "co_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "updated_at": {
                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "description": "Details of team member used in public API.",
                                                                        "properties": {
                                                                            "email": {
                                                                                "description": "Email of the partner team member",
                                                                                "example": "tushten@partnerstack.com",
                                                                                "type": "string"
                                                                            },
                                                                            "first_name": {
                                                                                "description": "First name of the partner team member",
                                                                                "example": "Tushar",
                                                                                "type": "string"
                                                                            },
                                                                            "last_name": {
                                                                                "description": "Last name of the partner team member",
                                                                                "example": "Sutherland",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "nullable": true,
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Creates a lead with desired params."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "lead:write"
                            ]
                        }
                    ],
                    "summary": "Create a lead",
                    "tags": [
                        "Leads"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/leads/form-templates": {
                "get": {
                    "description": "Fetches the specified form templates for a lead.",
                    "parameters": [
                        {
                            "in": "query",
                            "name": "group_key",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "in": "query",
                            "name": "mold_key",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "items": {
                                                    "allOf": [
                                                        {
                                                            "description": "Standard fields that are present on all database objects.",
                                                            "properties": {
                                                                "created_at": {
                                                                    "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                    "example": 1574181282399,
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "key": {
                                                                    "description": "A unique identifier used to reference the object",
                                                                    "example": "co_a80cb515fe",
                                                                    "maxLength": 255,
                                                                    "type": "string"
                                                                },
                                                                "updated_at": {
                                                                    "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                    "example": 1574181282399,
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        {
                                                            "description": "**FormTemplates** are configurable on many of our supported objects. These forms act as a way to collect additional information on object create",
                                                            "properties": {
                                                                "description": {
                                                                    "description": "A description for users to better understand the form",
                                                                    "example": "please fill out the entire form to register a deal",
                                                                    "nullable": true,
                                                                    "type": "string",
                                                                    "x-accessor": "target_data.description"
                                                                },
                                                                "fields": {
                                                                    "items": {
                                                                        "description": "**Fields** are attached to **FormTemplates** and allow for configurable options / types of data to collect from partners",
                                                                        "properties": {
                                                                            "default_value": {
                                                                                "description": "The default value that will be pinned to this field on the resulting object if no value is provided"
                                                                            },
                                                                            "help_text": {
                                                                                "description": "Helper text on how to use this field",
                                                                                "maxLength": 255,
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            },
                                                                            "hidden": {
                                                                                "description": "Whether or not this field is displayed when filling out its attached form",
                                                                                "type": "boolean"
                                                                            },
                                                                            "internal_name": {
                                                                                "description": "API name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "maps_to": {
                                                                                "description": "If provided, the response to the current field will map to responses of fields within maps_to array",
                                                                                "type": "array"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of field that is presented",
                                                                                "example": "Company Address",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "options": {
                                                                                "description": "Options to select from if this field is a picklist/checkbox",
                                                                                "type": "object"
                                                                            },
                                                                            "placeholder_text": {
                                                                                "description": "Text to be used as placeholder when filling out this field",
                                                                                "maxLength": 255,
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            },
                                                                            "position": {
                                                                                "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                                "type": "integer"
                                                                            },
                                                                            "protected": {
                                                                                "description": "Boolean that limits values of field that can be edited. If True, this field may not be archived and type as well as required cannot be edited.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "required": {
                                                                                "description": "Whether or not this field will be required when filling out its attached form",
                                                                                "type": "boolean"
                                                                            },
                                                                            "type": {
                                                                                "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                                "maxLength": 255,
                                                                                "type": "string",
                                                                                "x-accessor": "type_"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "groups": {
                                                                    "items": {
                                                                        "allOf": [
                                                                            {
                                                                                "description": "Standard fields that are present on all database objects.",
                                                                                "properties": {
                                                                                    "created_at": {
                                                                                        "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                        "example": 1574181282399,
                                                                                        "format": "int32",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "key": {
                                                                                        "description": "A unique identifier used to reference the object",
                                                                                        "example": "co_a80cb515fe",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "updated_at": {
                                                                                        "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                        "example": 1574181282399,
                                                                                        "format": "int32",
                                                                                        "type": "integer"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            {
                                                                                "description": "**Groups** are a way to segment partners within PartnerStack to selectively distribute access to things such as Campaigns, Marketing Assets, and Rewards",
                                                                                "properties": {
                                                                                    "archived": {
                                                                                        "description": "Whether or not this group is still active",
                                                                                        "nullable": true,
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "default": {
                                                                                        "description": "Whether this is the default Group for partners to join",
                                                                                        "type": "boolean",
                                                                                        "x-accessor": "is_default"
                                                                                    },
                                                                                    "features": {
                                                                                        "description": "Features that partners within this group have access too",
                                                                                        "nullable": true,
                                                                                        "type": "object"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "The name of this Group as presented to partners",
                                                                                        "example": "Resellers",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "slug": {
                                                                                        "description": "The slugified version of this groups name to be added to routes",
                                                                                        "example": "resellers",
                                                                                        "maxLength": 255,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "name": {
                                                                    "description": "The presented name of this form",
                                                                    "example": "Deal registration form",
                                                                    "maxLength": 255,
                                                                    "nullable": true,
                                                                    "type": "string"
                                                                },
                                                                "title": {
                                                                    "description": "A title to display to users when they fill out the form",
                                                                    "example": "My Companies Deal Registration Form",
                                                                    "nullable": true,
                                                                    "type": "string",
                                                                    "x-accessor": "target_data.title"
                                                                },
                                                                "type": {
                                                                    "description": "The type of object within PartnerStack that this form translates to",
                                                                    "example": "deal",
                                                                    "type": "string",
                                                                    "x-accessor": "target_type"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    ]
                                                },
                                                "type": "array"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Fetches the specified form templates for a lead."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "lead:read"
                            ]
                        }
                    ],
                    "summary": "Retrieve the form templates for a lead",
                    "tags": [
                        "Leads"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/leads/{lead_key}": {
                "delete": {
                    "description": "Archives the specified lead.",
                    "parameters": [
                        {
                            "description": "A unique key that identifies this lead. Can be either the lead's `external_key` or `key` value.",
                            "example": "361ba21c-ca87-46b0-baa4-97ca16e55059",
                            "in": "path",
                            "name": "lead_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Archives the specified lead."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "lead:write"
                            ]
                        }
                    ],
                    "summary": "Archive a lead",
                    "tags": [
                        "Leads"
                    ],
                    "x-isPublic": true
                },
                "get": {
                    "description": "Retrieves the details of an existing\n    lead. You need only supply the unique lead key that was returned\n    upon lead creation.",
                    "parameters": [
                        {
                            "description": "A unique key that identifies this lead. Can be either the lead's `external_key` or `key` value.",
                            "example": "361ba21c-ca87-46b0-baa4-97ca16e55059",
                            "in": "path",
                            "name": "lead_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "**Leads** are submitted by your partners to let your sales team know of potential accounts that they may wish to work. Partners may earn comission for qualified leads, or leads that eventually become closed accounts.",
                                                        "properties": {
                                                            "amount": {
                                                                "description": "Lead amount in **cents**",
                                                                "example": 25000,
                                                                "format": "int32",
                                                                "nullable": true,
                                                                "type": "integer"
                                                            },
                                                            "approved": {
                                                                "description": "Used to indicate whether this lead has been approved to move past the closed stage",
                                                                "nullable": true,
                                                                "type": "boolean"
                                                            },
                                                            "customer_key": {
                                                                "description": "Unique identifier to be used for Customer after a lead has been converted",
                                                                "example": "cus_1234",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "external_key": {
                                                                "description": "A unique key that identifies this lead in an external system. This key must be unique across all leads in your account. This key is used to identify leads when they are updated or deleted. Often provided as an email, but can be any unique string.",
                                                                "example": "361ba21c-ca87-46b0-baa4-97ca16e55059",
                                                                "type": "string"
                                                            },
                                                            "field_data": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "fields": {
                                                                "items": {
                                                                    "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                    "properties": {
                                                                        "api_name": {
                                                                            "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "external_type": {
                                                                            "description": "Name that can be used for external systems",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_key": {
                                                                            "description": "Key of field that is presented",
                                                                            "example": "field_fjkdlrh9i32nfew",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "help_text": {
                                                                            "description": "The help text that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "hidden": {
                                                                            "description": "Whether or not this field is displayed when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "internal_name": {
                                                                            "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of field that is presented",
                                                                            "example": "Company Address",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "options": {
                                                                            "description": "Options to select from if this field is a picklist/checkbox",
                                                                            "type": "object"
                                                                        },
                                                                        "placeholder_text": {
                                                                            "description": "The text of the placeholder that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "position": {
                                                                            "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                            "type": "integer"
                                                                        },
                                                                        "required": {
                                                                            "description": "Whether or not this field will be required when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                            "maxLength": 255,
                                                                            "type": "string",
                                                                            "x-accessor": "type_"
                                                                        },
                                                                        "value": {
                                                                            "description": "The value that was submitted to the field and stored on the target object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "group_key": {
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "meta": {
                                                                "additionalProperties": true,
                                                                "description": "Key value pairs that store additional information about this lead. First and last name required. Other eligible keys are based on Lead forms created. Use the /leads/form-template to view field names",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "company": {
                                                                        "example": "Lockman Olson",
                                                                        "type": "string"
                                                                    },
                                                                    "email": {
                                                                        "example": "River96@example.com",
                                                                        "type": "string"
                                                                    },
                                                                    "first_name": {
                                                                        "example": "River",
                                                                        "type": "string"
                                                                    },
                                                                    "last_name": {
                                                                        "example": "Tremblay",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "mold_key": {
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "partner_key": {
                                                                "description": "The unique key of the partner who submitted this lead",
                                                                "example": "bertramgilfoyle",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "stage_data": {
                                                                "description": "Information about the current lead's stage",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "api_name": {
                                                                        "description": "A unique identifier that reflects what this stage means in a vendor's external system, like a CRM.",
                                                                        "example": "closed won",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "description": {
                                                                        "description": "A description of this stage in the sales pipeline",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "internal_status": {
                                                                        "description": "What the given stage represents internally to PartnerStack",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "key": {
                                                                        "description": "A unique key that references the stage within PartnerStack's systems",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the stage",
                                                                        "example": "Closed Won",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object",
                                                                "x-accessor": "stage"
                                                            },
                                                            "status": {
                                                                "description": "Current status of this lead. Must be one of either 'open', 'closed', 'dead', 'closed won', or 'closed lost. Note that open = New, closed = Qualified and dead = Unqualified default stages in the PartnerStack dashboard.'",
                                                                "enum": [
                                                                    "open",
                                                                    "closed",
                                                                    "dead",
                                                                    "closed won",
                                                                    "closed lost"
                                                                ],
                                                                "example": "open",
                                                                "type": "string",
                                                                "x-accessor": "status_mapping"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "team": {
                                                                "allOf": [
                                                                    {
                                                                        "description": "Standard fields that are present on all database objects.",
                                                                        "properties": {
                                                                            "created_at": {
                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "key": {
                                                                                "description": "A unique identifier used to reference the object",
                                                                                "example": "co_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "updated_at": {
                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "description": "Details of team used in public API.",
                                                                        "properties": {
                                                                            "name": {
                                                                                "description": "The name of the partner team",
                                                                                "example": "Tushar",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "team_member": {
                                                                "allOf": [
                                                                    {
                                                                        "description": "Standard fields that are present on all database objects.",
                                                                        "properties": {
                                                                            "created_at": {
                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "key": {
                                                                                "description": "A unique identifier used to reference the object",
                                                                                "example": "co_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "updated_at": {
                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "description": "Details of team member used in public API.",
                                                                        "properties": {
                                                                            "email": {
                                                                                "description": "Email of the partner team member",
                                                                                "example": "tushten@partnerstack.com",
                                                                                "type": "string"
                                                                            },
                                                                            "first_name": {
                                                                                "description": "First name of the partner team member",
                                                                                "example": "Tushar",
                                                                                "type": "string"
                                                                            },
                                                                            "last_name": {
                                                                                "description": "Last name of the partner team member",
                                                                                "example": "Sutherland",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "nullable": true,
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Retrieves the details of an existing\n    lead. You need only supply the unique lead key that was returned\n    upon lead creation."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "lead:read"
                            ]
                        }
                    ],
                    "summary": "Retrieve a lead",
                    "tags": [
                        "Leads"
                    ],
                    "x-isPublic": true
                },
                "patch": {
                    "description": "Updates the specified lead by setting the values\n    of the parameters passed. Any parameters not provided will be left\n    unchanged.",
                    "parameters": [
                        {
                            "description": "A unique key that identifies this lead. Can be either the lead's `external_key` or `key` value.",
                            "example": "361ba21c-ca87-46b0-baa4-97ca16e55059",
                            "in": "path",
                            "name": "lead_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "**Leads** are submitted by your partners to let your sales team know of potential accounts that they may wish to work. Partners may earn comission for qualified leads, or leads that eventually become closed accounts.",
                                    "properties": {
                                        "amount": {
                                            "description": "Lead amount in **cents**",
                                            "example": 25000,
                                            "format": "int32",
                                            "nullable": true,
                                            "type": "integer"
                                        },
                                        "approved": {
                                            "description": "Used to indicate whether this lead has been approved to move past the closed stage",
                                            "nullable": true,
                                            "type": "boolean"
                                        },
                                        "customer_key": {
                                            "description": "Unique identifier to be used for Customer after a lead has been converted",
                                            "example": "cus_1234",
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "external_key": {
                                            "description": "A unique key that identifies this lead in an external system. This key must be unique across all leads in your account. This key is used to identify leads when they are updated or deleted. Often provided as an email, but can be any unique string.",
                                            "example": "361ba21c-ca87-46b0-baa4-97ca16e55059",
                                            "type": "string"
                                        },
                                        "field_data": {
                                            "nullable": true,
                                            "type": "object"
                                        },
                                        "fields": {
                                            "items": {
                                                "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                "properties": {
                                                    "api_name": {
                                                        "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                        "maxLength": 255,
                                                        "type": "string"
                                                    },
                                                    "external_type": {
                                                        "description": "Name that can be used for external systems",
                                                        "maxLength": 255,
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "field_key": {
                                                        "description": "Key of field that is presented",
                                                        "example": "field_fjkdlrh9i32nfew",
                                                        "maxLength": 255,
                                                        "type": "string"
                                                    },
                                                    "help_text": {
                                                        "description": "The help text that is provided for this field",
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "hidden": {
                                                        "description": "Whether or not this field is displayed when filling out its attached form",
                                                        "type": "boolean"
                                                    },
                                                    "internal_name": {
                                                        "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                        "maxLength": 255,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Name of field that is presented",
                                                        "example": "Company Address",
                                                        "maxLength": 255,
                                                        "type": "string"
                                                    },
                                                    "options": {
                                                        "description": "Options to select from if this field is a picklist/checkbox",
                                                        "type": "object"
                                                    },
                                                    "placeholder_text": {
                                                        "description": "The text of the placeholder that is provided for this field",
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "position": {
                                                        "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                        "type": "integer"
                                                    },
                                                    "required": {
                                                        "description": "Whether or not this field will be required when filling out its attached form",
                                                        "type": "boolean"
                                                    },
                                                    "type": {
                                                        "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                        "maxLength": 255,
                                                        "type": "string",
                                                        "x-accessor": "type_"
                                                    },
                                                    "value": {
                                                        "description": "The value that was submitted to the field and stored on the target object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "group_key": {
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "meta": {
                                            "additionalProperties": true,
                                            "description": "Key value pairs that store additional information about this lead. First and last name required. Other eligible keys are based on Lead forms created. Use the /leads/form-template to view field names",
                                            "nullable": true,
                                            "properties": {
                                                "company": {
                                                    "example": "Lockman Olson",
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "example": "River96@example.com",
                                                    "type": "string"
                                                },
                                                "first_name": {
                                                    "example": "River",
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "example": "Tremblay",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "mold_key": {
                                            "maxLength": 40,
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "partner_key": {
                                            "description": "The unique key of the partner who submitted this lead",
                                            "example": "bertramgilfoyle",
                                            "maxLength": 255,
                                            "type": "string"
                                        },
                                        "stage_data": {
                                            "description": "Information about the current lead's stage",
                                            "nullable": true,
                                            "properties": {
                                                "api_name": {
                                                    "description": "A unique identifier that reflects what this stage means in a vendor's external system, like a CRM.",
                                                    "example": "closed won",
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "A description of this stage in the sales pipeline",
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "internal_status": {
                                                    "description": "What the given stage represents internally to PartnerStack",
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "key": {
                                                    "description": "A unique key that references the stage within PartnerStack's systems",
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the stage",
                                                    "example": "Closed Won",
                                                    "nullable": true,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "x-accessor": "stage"
                                        },
                                        "status": {
                                            "description": "Current status of this lead. Must be one of either 'open', 'closed', 'dead', 'closed won', or 'closed lost. Note that open = New, closed = Qualified and dead = Unqualified default stages in the PartnerStack dashboard.'",
                                            "enum": [
                                                "open",
                                                "closed",
                                                "dead",
                                                "closed won",
                                                "closed lost"
                                            ],
                                            "example": "open",
                                            "type": "string",
                                            "x-accessor": "status_mapping"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "**Leads** are submitted by your partners to let your sales team know of potential accounts that they may wish to work. Partners may earn comission for qualified leads, or leads that eventually become closed accounts.",
                                                        "properties": {
                                                            "amount": {
                                                                "description": "Lead amount in **cents**",
                                                                "example": 25000,
                                                                "format": "int32",
                                                                "nullable": true,
                                                                "type": "integer"
                                                            },
                                                            "approved": {
                                                                "description": "Used to indicate whether this lead has been approved to move past the closed stage",
                                                                "nullable": true,
                                                                "type": "boolean"
                                                            },
                                                            "customer_key": {
                                                                "description": "Unique identifier to be used for Customer after a lead has been converted",
                                                                "example": "cus_1234",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "external_key": {
                                                                "description": "A unique key that identifies this lead in an external system. This key must be unique across all leads in your account. This key is used to identify leads when they are updated or deleted. Often provided as an email, but can be any unique string.",
                                                                "example": "361ba21c-ca87-46b0-baa4-97ca16e55059",
                                                                "type": "string"
                                                            },
                                                            "field_data": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "fields": {
                                                                "items": {
                                                                    "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                    "properties": {
                                                                        "api_name": {
                                                                            "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "external_type": {
                                                                            "description": "Name that can be used for external systems",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_key": {
                                                                            "description": "Key of field that is presented",
                                                                            "example": "field_fjkdlrh9i32nfew",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "help_text": {
                                                                            "description": "The help text that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "hidden": {
                                                                            "description": "Whether or not this field is displayed when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "internal_name": {
                                                                            "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of field that is presented",
                                                                            "example": "Company Address",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "options": {
                                                                            "description": "Options to select from if this field is a picklist/checkbox",
                                                                            "type": "object"
                                                                        },
                                                                        "placeholder_text": {
                                                                            "description": "The text of the placeholder that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "position": {
                                                                            "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                            "type": "integer"
                                                                        },
                                                                        "required": {
                                                                            "description": "Whether or not this field will be required when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                            "maxLength": 255,
                                                                            "type": "string",
                                                                            "x-accessor": "type_"
                                                                        },
                                                                        "value": {
                                                                            "description": "The value that was submitted to the field and stored on the target object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "group_key": {
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "meta": {
                                                                "additionalProperties": true,
                                                                "description": "Key value pairs that store additional information about this lead. First and last name required. Other eligible keys are based on Lead forms created. Use the /leads/form-template to view field names",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "company": {
                                                                        "example": "Lockman Olson",
                                                                        "type": "string"
                                                                    },
                                                                    "email": {
                                                                        "example": "River96@example.com",
                                                                        "type": "string"
                                                                    },
                                                                    "first_name": {
                                                                        "example": "River",
                                                                        "type": "string"
                                                                    },
                                                                    "last_name": {
                                                                        "example": "Tremblay",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "mold_key": {
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "partner_key": {
                                                                "description": "The unique key of the partner who submitted this lead",
                                                                "example": "bertramgilfoyle",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "stage_data": {
                                                                "description": "Information about the current lead's stage",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "api_name": {
                                                                        "description": "A unique identifier that reflects what this stage means in a vendor's external system, like a CRM.",
                                                                        "example": "closed won",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "description": {
                                                                        "description": "A description of this stage in the sales pipeline",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "internal_status": {
                                                                        "description": "What the given stage represents internally to PartnerStack",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "key": {
                                                                        "description": "A unique key that references the stage within PartnerStack's systems",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the stage",
                                                                        "example": "Closed Won",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object",
                                                                "x-accessor": "stage"
                                                            },
                                                            "status": {
                                                                "description": "Current status of this lead. Must be one of either 'open', 'closed', 'dead', 'closed won', or 'closed lost. Note that open = New, closed = Qualified and dead = Unqualified default stages in the PartnerStack dashboard.'",
                                                                "enum": [
                                                                    "open",
                                                                    "closed",
                                                                    "dead",
                                                                    "closed won",
                                                                    "closed lost"
                                                                ],
                                                                "example": "open",
                                                                "type": "string",
                                                                "x-accessor": "status_mapping"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Updates the specified lead by setting the values\n    of the parameters passed. Any parameters not provided will be left\n    unchanged."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "lead:write"
                            ]
                        }
                    ],
                    "summary": "Update a lead",
                    "tags": [
                        "Leads"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/leads/{lead_key}/convert": {
                "post": {
                    "description": "Converts a lead to a customer",
                    "parameters": [
                        {
                            "description": "A unique key that identifies this lead. Can be either the lead's `external_key` or `key` value.",
                            "example": "361ba21c-ca87-46b0-baa4-97ca16e55059",
                            "in": "path",
                            "name": "lead_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "customer_key": {
                                            "description": "Unique identifier to be used for customer. If no value is passed external_key of lead being converted will be used as `customer_key`.",
                                            "example": "cus_1234",
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "email": {
                                            "description": "The customers email, must be a valid email. If no value is passed external_key of lead being converted will be used as `email`.",
                                            "example": "johnsmith@gmail.com",
                                            "format": "email",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "**Customers** represent the users who have been referred by a **Partner**.\n\n**Customers** are linked to the **Partner** that referred them through a **partner_key** which must be provided on the Create Customer endpoint.\n\nThe **partner_key** is retrievable from `growsumo.data.partner_key`, which is created by the `PartnerStackJS` snippet.",
                                                        "properties": {
                                                            "customer_key": {
                                                                "description": "External customer key that can be configured on creation.",
                                                                "example": "123435",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string",
                                                                "x-accessor": "external_key"
                                                            },
                                                            "email": {
                                                                "description": "The customers email, must be a valid email",
                                                                "example": "johnsmith@gmail.com",
                                                                "format": "email",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "field_data": {
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "fields": {
                                                                "items": {
                                                                    "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                    "properties": {
                                                                        "api_name": {
                                                                            "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "external_type": {
                                                                            "description": "Name that can be used for external systems",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_key": {
                                                                            "description": "Key of field that is presented",
                                                                            "example": "field_fjkdlrh9i32nfew",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "help_text": {
                                                                            "description": "The help text that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "hidden": {
                                                                            "description": "Whether or not this field is displayed when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "internal_name": {
                                                                            "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of field that is presented",
                                                                            "example": "Company Address",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "options": {
                                                                            "description": "Options to select from if this field is a picklist/checkbox",
                                                                            "type": "object"
                                                                        },
                                                                        "placeholder_text": {
                                                                            "description": "The text of the placeholder that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "position": {
                                                                            "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                            "type": "integer"
                                                                        },
                                                                        "required": {
                                                                            "description": "Whether or not this field will be required when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                            "maxLength": 255,
                                                                            "type": "string",
                                                                            "x-accessor": "type_"
                                                                        },
                                                                        "value": {
                                                                            "description": "The value that was submitted to the field and stored on the target object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "meta": {
                                                                "description": "Additional custom fields for the customer that is configured in your PartnerStack dashboard.",
                                                                "example": {
                                                                    "field": "value"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "description": "Should be either the customer's name, or the company name",
                                                                "example": "John Smith",
                                                                "maxLength": 100,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "partner_key": {
                                                                "description": "The key of the partner that is responsible for the customer",
                                                                "example": "bertramgilfoyle",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "partnership_key": {
                                                                "description": "Unique key of this partnership.",
                                                                "example": "part_A7nGc9pKnx8xEW",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "provider_key": {
                                                                "description": "A unique identifier given by a payment provider (Stripe, Recurly, Chargebee etc)",
                                                                "example": "cus_AJ6bvXbVofMpsW",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "source_key": {
                                                                "description": "The key of the source at which the customer was created through",
                                                                "example": "deal_987us345r2",
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "source_type": {
                                                                "description": "The source at which the customer was created through",
                                                                "example": "deal",
                                                                "maxLength": 40,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "test": {
                                                                "description": "True if created by a test partner",
                                                                "example": true,
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Converts a lead to a customer"
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "lead:write"
                            ]
                        }
                    ],
                    "summary": "Convert a lead",
                    "tags": [
                        "Leads"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/marketplace/programs": {
                "get": {
                    "description": "Returns a list of all active marketplace-listed programs and their details. The programs are returned sorted by creation date by default, with the most recent programs appearing first.",
                    "parameters": [
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Marketplace category of the programs",
                            "example": "IT",
                            "in": "query",
                            "name": "category",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.",
                            "example": 10,
                            "in": "query",
                            "name": "limit",
                            "schema": {
                                "default": 10,
                                "maximum": 250,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.",
                            "example": "key_8U5s1iH2Pd2a2p",
                            "in": "query",
                            "name": "starting_after",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.",
                            "example": "key_sE1vd9uwep7XHg",
                            "in": "query",
                            "name": "ending_before",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "has_more": {
                                                        "type": "boolean"
                                                    },
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Returns a list of all marketplace-listed programs and their details",
                                                                    "properties": {
                                                                        "category": {
                                                                            "description": "The category of this marketplace listing",
                                                                            "example": "productivity",
                                                                            "nullable": true,
                                                                            "type": "array"
                                                                        },
                                                                        "country": {
                                                                            "description": "Origin country of this marketplace listing",
                                                                            "example": "Canada",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of company creation",
                                                                            "type": "integer"
                                                                        },
                                                                        "description": {
                                                                            "description": "The description of the marketplace listing",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "key": {
                                                                            "description": "Key of the marketplace listing",
                                                                            "example": "comp_jei0wrhj320",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "logo": {
                                                                            "description": "Key of image for this marketplace listing",
                                                                            "example": "file_fdmni0f3420fnw",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "The name of the marketplace listing",
                                                                            "example": "Thing.io",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "offers": {
                                                                            "description": "Available offers for the program",
                                                                            "items": {
                                                                                "properties": {
                                                                                    "currency": {
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "description": {
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type_": {
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "nullable": true,
                                                                            "type": "array"
                                                                        },
                                                                        "website": {
                                                                            "description": "The website of this marketplace listing",
                                                                            "example": "https://thing.io",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "type": "array"
                                                    },
                                                    "total": {
                                                        "nullable": true,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Returns a list of all active marketplace-listed programs and their details. The programs are returned sorted by creation date by default, with the most recent programs appearing first."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "bearerAuth": []
                        }
                    ],
                    "summary": "List all programs",
                    "tags": [
                        "Marketplace"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/marketplace/programs/{company_key}": {
                "get": {
                    "description": "Retrieves a marketplace program given its program key.",
                    "parameters": [
                        {
                            "description": "Unique identifier of the program.",
                            "example": "co_123",
                            "in": "path",
                            "name": "company_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Returns a list of all marketplace-listed programs and their details",
                                                        "properties": {
                                                            "category": {
                                                                "description": "The category of this marketplace listing",
                                                                "example": "productivity",
                                                                "nullable": true,
                                                                "type": "array"
                                                            },
                                                            "country": {
                                                                "description": "Origin country of this marketplace listing",
                                                                "example": "Canada",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of company creation",
                                                                "type": "integer"
                                                            },
                                                            "description": {
                                                                "description": "The description of the marketplace listing",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "key": {
                                                                "description": "Key of the marketplace listing",
                                                                "example": "comp_jei0wrhj320",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "logo": {
                                                                "description": "Key of image for this marketplace listing",
                                                                "example": "file_fdmni0f3420fnw",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "The name of the marketplace listing",
                                                                "example": "Thing.io",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "offers": {
                                                                "description": "Available offers for the program",
                                                                "items": {
                                                                    "properties": {
                                                                        "currency": {
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "description": {
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "type_": {
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "nullable": true,
                                                                "type": "array"
                                                            },
                                                            "website": {
                                                                "description": "The website of this marketplace listing",
                                                                "example": "https://thing.io",
                                                                "nullable": true,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Retrieves a marketplace program given its program key."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "bearerAuth": []
                        }
                    ],
                    "summary": "Retrieve a marketplace program",
                    "tags": [
                        "Marketplace"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/partner_team/{team_key}": {
                "get": {
                    "description": "Retrieves the list of members of a partner team using the team stack key.",
                    "parameters": [
                        {
                            "description": "Stack key of the partnership's team.",
                            "example": "stck_12345",
                            "in": "path",
                            "name": "team_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Details of the partner team and the team members.",
                                                        "properties": {
                                                            "partner_key": {
                                                                "description": "The partner key of the team owner",
                                                                "type": "string"
                                                            },
                                                            "partnership_key": {
                                                                "description": "The internal partnership key of the team owner",
                                                                "type": "string"
                                                            },
                                                            "team_key": {
                                                                "description": "The key of the team",
                                                                "type": "string"
                                                            },
                                                            "team_members": {
                                                                "items": {
                                                                    "properties": {
                                                                        "email": {
                                                                            "description": "The email of the member",
                                                                            "type": "string"
                                                                        },
                                                                        "first_name": {
                                                                            "description": "The first name of the member",
                                                                            "type": "string"
                                                                        },
                                                                        "last_name": {
                                                                            "description": "The last name of the member",
                                                                            "type": "string"
                                                                        },
                                                                        "personal_stack_key": {
                                                                            "description": "The personal stack key of the member",
                                                                            "type": "string"
                                                                        },
                                                                        "role": {
                                                                            "description": "The role of the member",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "team_name": {
                                                                "description": "The name of the team",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Retrieves the list of members of a partner team using the team stack key."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "team:read"
                            ]
                        }
                    ],
                    "summary": "Retrieve a partner team",
                    "tags": [
                        "Partner Team"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/partnerships": {
                "get": {
                    "description": "Returns a list of your partnerships. The partnerships are returned sorted by creation date by default, with the most recent partnerships appearing first.",
                    "parameters": [
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `updated_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_updated",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Will filter for partnerships who are in a group with the specified name. Name must have spaces and special characters removed.",
                            "example": "resellers",
                            "in": "query",
                            "name": "group",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "The field in which the results are ordered by. A `-` prefix denotes that the results are in descending order.",
                            "example": "-created_at",
                            "in": "query",
                            "name": "order_by",
                            "required": false,
                            "schema": {
                                "enum": [
                                    "-created_at",
                                    "created_at",
                                    "-updated_at",
                                    "updated_at"
                                ],
                                "type": "string"
                            }
                        },
                        {
                            "description": "The email of the user with the partnership you're looking for.",
                            "example": "alice@email.com",
                            "in": "query",
                            "name": "email",
                            "required": false,
                            "schema": {
                                "format": "email",
                                "type": "string"
                            }
                        },
                        {
                            "description": "The approved status of a partnership. Approved means the partner is approved to be in your program. Pending means that partner's application is pending. Declined means the partner application was declined.",
                            "example": "approved",
                            "in": "query",
                            "name": "approved_status",
                            "required": false,
                            "schema": {
                                "enum": [
                                    "approved",
                                    "pending",
                                    "declined"
                                ],
                                "type": "string"
                            }
                        },
                        {
                            "description": "A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.",
                            "example": 10,
                            "in": "query",
                            "name": "limit",
                            "schema": {
                                "default": 10,
                                "maximum": 250,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.",
                            "example": "key_8U5s1iH2Pd2a2p",
                            "in": "query",
                            "name": "starting_after",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.",
                            "example": "key_sE1vd9uwep7XHg",
                            "in": "query",
                            "name": "ending_before",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "has_more": {
                                                        "type": "boolean"
                                                    },
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "description": "Partnerships represent companies that you are partnered with and promoting on PartnerStack",
                                                                    "properties": {
                                                                        "address": {
                                                                            "description": "Partnership's address information.",
                                                                            "nullable": true,
                                                                            "properties": {
                                                                                "city": {
                                                                                    "description": "The city of the residence for this address.",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "country": {
                                                                                    "description": "The country of the residence for this address.",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "description": "Key of the Partnership's Address data.",
                                                                                    "type": "string"
                                                                                },
                                                                                "postal": {
                                                                                    "description": "The postal code for this address.",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "primary": {
                                                                                    "description": "Is this address the primary residence.",
                                                                                    "nullable": true,
                                                                                    "type": "boolean"
                                                                                },
                                                                                "region": {
                                                                                    "description": "The region of the world for this address.",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "state": {
                                                                                    "description": "The state of the residence for this address.",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "street": {
                                                                                    "description": "The street address for this address.",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "unit": {
                                                                                    "description": "The unit number for the building at this address.",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "approved_status": {
                                                                            "type": "string"
                                                                        },
                                                                        "email": {
                                                                            "description": "email address for the partner",
                                                                            "type": "string"
                                                                        },
                                                                        "first_name": {
                                                                            "description": "first name of the partner",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "group": {
                                                                            "description": "partnership's group information",
                                                                            "properties": {
                                                                                "id": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "slug": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "joined_at": {
                                                                            "description": "timestamp for when the partner joined partnerstack",
                                                                            "type": "integer"
                                                                        },
                                                                        "last_name": {
                                                                            "description": "last name of the partner",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "manager": {
                                                                            "description": "partnership's manager information if applicable",
                                                                            "nullable": true,
                                                                            "properties": {
                                                                                "manager_email": {
                                                                                    "type": "string"
                                                                                },
                                                                                "manager_name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "mdata": {
                                                                            "description": "partnership metadata",
                                                                            "type": "object"
                                                                        },
                                                                        "partner_key": {
                                                                            "description": "key used externally when referencing the partnership",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "stats": {
                                                                            "description": "latest stats data for partnership",
                                                                            "type": "object"
                                                                        },
                                                                        "tags": {
                                                                            "description": "List of tags associated with the partnership",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "properties": {
                                                                        "team": {
                                                                            "properties": {
                                                                                "key": {
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "type": "array"
                                                    },
                                                    "total": {
                                                        "nullable": true,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Returns a list of your partnerships. The partnerships are returned sorted by creation date by default, with the most recent partnerships appearing first."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "bearerAuth": []
                        },
                        {
                            "oauth2": [
                                "partnership:read"
                            ]
                        }
                    ],
                    "summary": "List all partnerships",
                    "tags": [
                        "Partnerships"
                    ],
                    "x-apiType": [
                        "company",
                        "partner"
                    ],
                    "x-isPublic": true,
                    "x-scope": "read"
                },
                "patch": {
                    "description": "Updates a set of partnerships to a new group",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "partner_keys": {
                                                    "description": "List of partner keys.",
                                                    "example": [
                                                        "partner1",
                                                        "partner2"
                                                    ],
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "partner_keys"
                                            ],
                                            "type": "object"
                                        },
                                        {
                                            "oneOf": [
                                                {
                                                    "properties": {
                                                        "group_slug": {
                                                            "description": "Slug of the group. The slug is lowercase and has no spaces.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "group_slug"
                                                    ],
                                                    "type": "object"
                                                },
                                                {
                                                    "properties": {
                                                        "group_id": {
                                                            "description": "ID of the group.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "group_id"
                                                    ],
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    ],
                                    "description": "UpdatePartnerships",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Updates a set of partnerships to a new group"
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "partnership:write"
                            ]
                        }
                    ],
                    "summary": "Update partnerships",
                    "tags": [
                        "Partnerships"
                    ],
                    "x-isPublic": true
                },
                "post": {
                    "description": "Creates a new partnership with the data provided.",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "**Partners** represent users on PartnerStack that will be promoting your company.",
                                            "properties": {
                                                "email": {
                                                    "description": "The email of the partner.",
                                                    "example": "johnsmith@gmail.com",
                                                    "format": "email",
                                                    "maxLength": 255,
                                                    "type": "string"
                                                },
                                                "field_data": {
                                                    "description": "DEPRECATED 'fields' should be the source of truth",
                                                    "nullable": true,
                                                    "type": "object"
                                                },
                                                "fields": {
                                                    "items": {
                                                        "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                        "properties": {
                                                            "api_name": {
                                                                "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "external_type": {
                                                                "description": "Name that can be used for external systems",
                                                                "maxLength": 255,
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "field_key": {
                                                                "description": "Key of field that is presented",
                                                                "example": "field_fjkdlrh9i32nfew",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "help_text": {
                                                                "description": "The help text that is provided for this field",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "hidden": {
                                                                "description": "Whether or not this field is displayed when filling out its attached form",
                                                                "type": "boolean"
                                                            },
                                                            "internal_name": {
                                                                "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Name of field that is presented",
                                                                "example": "Company Address",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "options": {
                                                                "description": "Options to select from if this field is a picklist/checkbox",
                                                                "type": "object"
                                                            },
                                                            "placeholder_text": {
                                                                "description": "The text of the placeholder that is provided for this field",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "position": {
                                                                "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                "type": "integer"
                                                            },
                                                            "required": {
                                                                "description": "Whether or not this field will be required when filling out its attached form",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                "maxLength": 255,
                                                                "type": "string",
                                                                "x-accessor": "type_"
                                                            },
                                                            "value": {
                                                                "description": "The value that was submitted to the field and stored on the target object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "first_name": {
                                                    "description": "The first name of the partner.",
                                                    "example": "John",
                                                    "maxLength": 50,
                                                    "type": "string"
                                                },
                                                "fraud_flagged": {
                                                    "description": "Whether the partner has been flagged for fraud",
                                                    "nullable": true,
                                                    "type": "boolean"
                                                },
                                                "last_name": {
                                                    "description": "The last name of the partner.",
                                                    "example": "Smith",
                                                    "maxLength": 50,
                                                    "type": "string"
                                                },
                                                "manager_email": {
                                                    "description": "The email of the Partner Manager who you wish to manage this partner.",
                                                    "example": "alicebaz@gmail.com",
                                                    "format": "email",
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "manager_name": {
                                                    "description": "The name of the Partner Manager who you wish to manage this partner.",
                                                    "example": "Alice Baz",
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "meta": {
                                                    "description": "DEPRECATED 'fields' should be the source of truth",
                                                    "nullable": true,
                                                    "type": "object",
                                                    "x-accessor": "mdata"
                                                },
                                                "partner_key": {
                                                    "description": "The `partner_key` you wish to use for this partner. If included, **must** be unique to this partner. For more information on `partner_key` see PartnerStackJS. Note that the partner_key can only consist of letters, numbers, and underscores.",
                                                    "example": "gstest",
                                                    "maxLength": 255,
                                                    "type": "string"
                                                },
                                                "tags": {
                                                    "example": "['tag_1_name', 'tag_2_name']",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "nullable": true,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "group_key": {
                                                    "description": "The key of the group within PartnerStack that you want this partner to be placed into.",
                                                    "example": "gr_2384jh348234y",
                                                    "maxLength": 255,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "email"
                                            ],
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "description": "**Partners** represent users on PartnerStack that will be promoting your company.",
                                                                "properties": {
                                                                    "email": {
                                                                        "description": "The email of the partner.",
                                                                        "example": "johnsmith@gmail.com",
                                                                        "format": "email",
                                                                        "maxLength": 255,
                                                                        "type": "string"
                                                                    },
                                                                    "field_data": {
                                                                        "description": "DEPRECATED 'fields' should be the source of truth",
                                                                        "nullable": true,
                                                                        "type": "object"
                                                                    },
                                                                    "fields": {
                                                                        "items": {
                                                                            "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                            "properties": {
                                                                                "api_name": {
                                                                                    "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                                    "maxLength": 255,
                                                                                    "type": "string"
                                                                                },
                                                                                "external_type": {
                                                                                    "description": "Name that can be used for external systems",
                                                                                    "maxLength": 255,
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "field_key": {
                                                                                    "description": "Key of field that is presented",
                                                                                    "example": "field_fjkdlrh9i32nfew",
                                                                                    "maxLength": 255,
                                                                                    "type": "string"
                                                                                },
                                                                                "help_text": {
                                                                                    "description": "The help text that is provided for this field",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "hidden": {
                                                                                    "description": "Whether or not this field is displayed when filling out its attached form",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "internal_name": {
                                                                                    "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                                    "maxLength": 255,
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "description": "Name of field that is presented",
                                                                                    "example": "Company Address",
                                                                                    "maxLength": 255,
                                                                                    "type": "string"
                                                                                },
                                                                                "options": {
                                                                                    "description": "Options to select from if this field is a picklist/checkbox",
                                                                                    "type": "object"
                                                                                },
                                                                                "placeholder_text": {
                                                                                    "description": "The text of the placeholder that is provided for this field",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "position": {
                                                                                    "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                                    "type": "integer"
                                                                                },
                                                                                "required": {
                                                                                    "description": "Whether or not this field will be required when filling out its attached form",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "type": {
                                                                                    "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                                    "maxLength": 255,
                                                                                    "type": "string",
                                                                                    "x-accessor": "type_"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The value that was submitted to the field and stored on the target object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "first_name": {
                                                                        "description": "The first name of the partner.",
                                                                        "example": "John",
                                                                        "maxLength": 50,
                                                                        "type": "string"
                                                                    },
                                                                    "fraud_flagged": {
                                                                        "description": "Whether the partner has been flagged for fraud",
                                                                        "nullable": true,
                                                                        "type": "boolean"
                                                                    },
                                                                    "last_name": {
                                                                        "description": "The last name of the partner.",
                                                                        "example": "Smith",
                                                                        "maxLength": 50,
                                                                        "type": "string"
                                                                    },
                                                                    "manager_email": {
                                                                        "description": "The email of the Partner Manager who you wish to manage this partner.",
                                                                        "example": "alicebaz@gmail.com",
                                                                        "format": "email",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "manager_name": {
                                                                        "description": "The name of the Partner Manager who you wish to manage this partner.",
                                                                        "example": "Alice Baz",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "meta": {
                                                                        "description": "DEPRECATED 'fields' should be the source of truth",
                                                                        "nullable": true,
                                                                        "type": "object",
                                                                        "x-accessor": "mdata"
                                                                    },
                                                                    "partner_key": {
                                                                        "description": "The `partner_key` you wish to use for this partner. If included, **must** be unique to this partner. For more information on `partner_key` see PartnerStackJS. Note that the partner_key can only consist of letters, numbers, and underscores.",
                                                                        "example": "gstest",
                                                                        "maxLength": 255,
                                                                        "type": "string"
                                                                    },
                                                                    "tags": {
                                                                        "example": "['tag_1_name', 'tag_2_name']",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "nullable": true,
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            {
                                                                "properties": {
                                                                    "group": {
                                                                        "allOf": [
                                                                            {
                                                                                "description": "Standard fields that are present on all database objects.",
                                                                                "properties": {
                                                                                    "created_at": {
                                                                                        "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                        "example": 1574181282399,
                                                                                        "format": "int32",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "key": {
                                                                                        "description": "A unique identifier used to reference the object",
                                                                                        "example": "co_a80cb515fe",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "updated_at": {
                                                                                        "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                        "example": 1574181282399,
                                                                                        "format": "int32",
                                                                                        "type": "integer"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            {
                                                                                "description": "**Groups** are a way to segment partners within PartnerStack to selectively distribute access to things such as Campaigns, Marketing Assets, and Rewards",
                                                                                "properties": {
                                                                                    "archived": {
                                                                                        "description": "Whether or not this group is still active",
                                                                                        "nullable": true,
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "default": {
                                                                                        "description": "Whether this is the default Group for partners to join",
                                                                                        "type": "boolean",
                                                                                        "x-accessor": "is_default"
                                                                                    },
                                                                                    "features": {
                                                                                        "description": "Features that partners within this group have access too",
                                                                                        "nullable": true,
                                                                                        "type": "object"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "The name of this Group as presented to partners",
                                                                                        "example": "Resellers",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "slug": {
                                                                                        "description": "The slugified version of this groups name to be added to routes",
                                                                                        "example": "resellers",
                                                                                        "maxLength": 255,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "tier": {
                                                                        "additionalProperties": false,
                                                                        "description": "**Tiers** enable vendors to provide reward and feature levels.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "A unique identifier to identify the tier",
                                                                                "example": "tag_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Specifies name of the Tier",
                                                                                "example": "Tier 1",
                                                                                "maxLength": 50,
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Creates a new partnership with the data provided."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "partnership:write"
                            ]
                        }
                    ],
                    "summary": "Create a partnership",
                    "tags": [
                        "Partnerships"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/partnerships/{partnership_key}": {
                "delete": {
                    "description": "Archives a partnership.",
                    "parameters": [
                        {
                            "description": "The specific internal key that identifies the partnership.",
                            "example": "part_123455",
                            "in": "path",
                            "name": "partnership_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "archived_reason": {
                                            "description": "The reason for archiving this partnership",
                                            "example": "Its not you its me bb",
                                            "maxLength": 255,
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "team_key": {
                                            "description": "A unique identifier used to reference the team stack",
                                            "example": "stck_12345",
                                            "maxLength": 255,
                                            "nullable": true,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Archives a partnership."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "cookieAuth": []
                        },
                        {
                            "oauth2": [
                                "partnership:write"
                            ]
                        }
                    ],
                    "summary": "Archive a partnership",
                    "tags": [
                        "Partnerships"
                    ],
                    "x-isPublic": true
                },
                "patch": {
                    "description": "Updates the specific partnership by setting the values of the parameters passed.",
                    "parameters": [
                        {
                            "description": "The specific key for the partnership",
                            "example": "part_123455",
                            "in": "path",
                            "name": "partnership_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "UpdateTarget",
                                    "properties": {
                                        "fields": {
                                            "items": {
                                                "properties": {
                                                    "api_name": {
                                                        "description": "The api name of the field that you wish to update on the partnership",
                                                        "example": "company_size",
                                                        "maxLength": 255,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "description": "The value you wish to set for the corresponding field api_name",
                                                        "example": 5000
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                        },
                                        "group_key": {
                                            "description": "The key of the group within PartnerStack that you want this partner to be placed into.",
                                            "example": "gr_2384jh348234y",
                                            "maxLength": 255,
                                            "type": "string"
                                        },
                                        "manager_email": {
                                            "description": "The email of the partner manager that you would like to assign this partner.",
                                            "example": "partnermanager@company.com",
                                            "maxLength": 255,
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "partner_key": {
                                            "description": "The partner_key that you would like this partner to have.",
                                            "example": "gstest",
                                            "maxLength": 255,
                                            "nullable": true,
                                            "type": "string"
                                        },
                                        "tier_key": {
                                            "description": "The key of the tier within PartnerStack that you want this partner to be placed into.",
                                            "example": "tier_UWjSmVBIxRQoaP",
                                            "maxLength": 255,
                                            "nullable": true,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "**Partners** represent users on PartnerStack that will be promoting your company.",
                                                        "properties": {
                                                            "email": {
                                                                "description": "The email of the partner.",
                                                                "example": "johnsmith@gmail.com",
                                                                "format": "email",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "field_data": {
                                                                "description": "DEPRECATED 'fields' should be the source of truth",
                                                                "nullable": true,
                                                                "type": "object"
                                                            },
                                                            "fields": {
                                                                "items": {
                                                                    "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                    "properties": {
                                                                        "api_name": {
                                                                            "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "external_type": {
                                                                            "description": "Name that can be used for external systems",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_key": {
                                                                            "description": "Key of field that is presented",
                                                                            "example": "field_fjkdlrh9i32nfew",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "help_text": {
                                                                            "description": "The help text that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "hidden": {
                                                                            "description": "Whether or not this field is displayed when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "internal_name": {
                                                                            "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of field that is presented",
                                                                            "example": "Company Address",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "options": {
                                                                            "description": "Options to select from if this field is a picklist/checkbox",
                                                                            "type": "object"
                                                                        },
                                                                        "placeholder_text": {
                                                                            "description": "The text of the placeholder that is provided for this field",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "position": {
                                                                            "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                            "type": "integer"
                                                                        },
                                                                        "required": {
                                                                            "description": "Whether or not this field will be required when filling out its attached form",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                            "maxLength": 255,
                                                                            "type": "string",
                                                                            "x-accessor": "type_"
                                                                        },
                                                                        "value": {
                                                                            "description": "The value that was submitted to the field and stored on the target object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "first_name": {
                                                                "description": "The first name of the partner.",
                                                                "example": "John",
                                                                "maxLength": 50,
                                                                "type": "string"
                                                            },
                                                            "fraud_flagged": {
                                                                "description": "Whether the partner has been flagged for fraud",
                                                                "nullable": true,
                                                                "type": "boolean"
                                                            },
                                                            "last_name": {
                                                                "description": "The last name of the partner.",
                                                                "example": "Smith",
                                                                "maxLength": 50,
                                                                "type": "string"
                                                            },
                                                            "manager_email": {
                                                                "description": "The email of the Partner Manager who you wish to manage this partner.",
                                                                "example": "alicebaz@gmail.com",
                                                                "format": "email",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "manager_name": {
                                                                "description": "The name of the Partner Manager who you wish to manage this partner.",
                                                                "example": "Alice Baz",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "meta": {
                                                                "description": "DEPRECATED 'fields' should be the source of truth",
                                                                "nullable": true,
                                                                "type": "object",
                                                                "x-accessor": "mdata"
                                                            },
                                                            "partner_key": {
                                                                "description": "The `partner_key` you wish to use for this partner. If included, **must** be unique to this partner. For more information on `partner_key` see PartnerStackJS. Note that the partner_key can only consist of letters, numbers, and underscores.",
                                                                "example": "gstest",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "tags": {
                                                                "example": "['tag_1_name', 'tag_2_name']",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "nullable": true,
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "group": {
                                                                "allOf": [
                                                                    {
                                                                        "description": "Standard fields that are present on all database objects.",
                                                                        "properties": {
                                                                            "created_at": {
                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "key": {
                                                                                "description": "A unique identifier used to reference the object",
                                                                                "example": "co_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "updated_at": {
                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "description": "**Groups** are a way to segment partners within PartnerStack to selectively distribute access to things such as Campaigns, Marketing Assets, and Rewards",
                                                                        "properties": {
                                                                            "archived": {
                                                                                "description": "Whether or not this group is still active",
                                                                                "nullable": true,
                                                                                "type": "boolean"
                                                                            },
                                                                            "default": {
                                                                                "description": "Whether this is the default Group for partners to join",
                                                                                "type": "boolean",
                                                                                "x-accessor": "is_default"
                                                                            },
                                                                            "features": {
                                                                                "description": "Features that partners within this group have access too",
                                                                                "nullable": true,
                                                                                "type": "object"
                                                                            },
                                                                            "name": {
                                                                                "description": "The name of this Group as presented to partners",
                                                                                "example": "Resellers",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "slug": {
                                                                                "description": "The slugified version of this groups name to be added to routes",
                                                                                "example": "resellers",
                                                                                "maxLength": 255,
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                ]
                                                            },
                                                            "tier": {
                                                                "additionalProperties": false,
                                                                "description": "**Tiers** enable vendors to provide reward and feature levels.",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "A unique identifier to identify the tier",
                                                                        "example": "tag_a80cb515fe",
                                                                        "maxLength": 255,
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "Specifies name of the Tier",
                                                                        "example": "Tier 1",
                                                                        "maxLength": 50,
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Updates the specific partnership by setting the values of the parameters passed."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "partnership:write"
                            ]
                        }
                    ],
                    "summary": "Update a partnership",
                    "tags": [
                        "Partnerships"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/partnerships/{partnership_key}/tags": {
                "patch": {
                    "description": "Add or remove tags from the specified partnership.",
                    "parameters": [
                        {
                            "description": "The specific key for the partnership",
                            "example": "part_123455",
                            "in": "path",
                            "name": "partnership_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "UpdateTagsForTarget",
                                    "properties": {
                                        "add": {
                                            "description": "Specifies a list of tags to be associated/added to the partnership",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "remove": {
                                            "description": "Specifies a list of tags to be disassociated/removed from the partnership",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "description": "Response schema for the PatchUpdateTagsForPartnership endpoint",
                                                "properties": {
                                                    "partnership": {
                                                        "allOf": [
                                                            {
                                                                "description": "Standard fields that are present on all database objects.",
                                                                "properties": {
                                                                    "created_at": {
                                                                        "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                        "example": 1574181282399,
                                                                        "format": "int32",
                                                                        "type": "integer"
                                                                    },
                                                                    "key": {
                                                                        "description": "A unique identifier used to reference the object",
                                                                        "example": "co_a80cb515fe",
                                                                        "maxLength": 255,
                                                                        "type": "string"
                                                                    },
                                                                    "updated_at": {
                                                                        "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                        "example": 1574181282399,
                                                                        "format": "int32",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "description": "**Partners** represent users on PartnerStack that will be promoting your company.",
                                                                        "properties": {
                                                                            "email": {
                                                                                "description": "The email of the partner.",
                                                                                "example": "johnsmith@gmail.com",
                                                                                "format": "email",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "field_data": {
                                                                                "description": "DEPRECATED 'fields' should be the source of truth",
                                                                                "nullable": true,
                                                                                "type": "object"
                                                                            },
                                                                            "fields": {
                                                                                "items": {
                                                                                    "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                                    "properties": {
                                                                                        "api_name": {
                                                                                            "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                                            "maxLength": 255,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "external_type": {
                                                                                            "description": "Name that can be used for external systems",
                                                                                            "maxLength": 255,
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "field_key": {
                                                                                            "description": "Key of field that is presented",
                                                                                            "example": "field_fjkdlrh9i32nfew",
                                                                                            "maxLength": 255,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "help_text": {
                                                                                            "description": "The help text that is provided for this field",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "hidden": {
                                                                                            "description": "Whether or not this field is displayed when filling out its attached form",
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "internal_name": {
                                                                                            "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                                            "maxLength": 255,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "description": "Name of field that is presented",
                                                                                            "example": "Company Address",
                                                                                            "maxLength": 255,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "options": {
                                                                                            "description": "Options to select from if this field is a picklist/checkbox",
                                                                                            "type": "object"
                                                                                        },
                                                                                        "placeholder_text": {
                                                                                            "description": "The text of the placeholder that is provided for this field",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "position": {
                                                                                            "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "required": {
                                                                                            "description": "Whether or not this field will be required when filling out its attached form",
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "type": {
                                                                                            "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                                            "maxLength": 255,
                                                                                            "type": "string",
                                                                                            "x-accessor": "type_"
                                                                                        },
                                                                                        "value": {
                                                                                            "description": "The value that was submitted to the field and stored on the target object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "first_name": {
                                                                                "description": "The first name of the partner.",
                                                                                "example": "John",
                                                                                "maxLength": 50,
                                                                                "type": "string"
                                                                            },
                                                                            "fraud_flagged": {
                                                                                "description": "Whether the partner has been flagged for fraud",
                                                                                "nullable": true,
                                                                                "type": "boolean"
                                                                            },
                                                                            "last_name": {
                                                                                "description": "The last name of the partner.",
                                                                                "example": "Smith",
                                                                                "maxLength": 50,
                                                                                "type": "string"
                                                                            },
                                                                            "manager_email": {
                                                                                "description": "The email of the Partner Manager who you wish to manage this partner.",
                                                                                "example": "alicebaz@gmail.com",
                                                                                "format": "email",
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            },
                                                                            "manager_name": {
                                                                                "description": "The name of the Partner Manager who you wish to manage this partner.",
                                                                                "example": "Alice Baz",
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            },
                                                                            "meta": {
                                                                                "description": "DEPRECATED 'fields' should be the source of truth",
                                                                                "nullable": true,
                                                                                "type": "object",
                                                                                "x-accessor": "mdata"
                                                                            },
                                                                            "partner_key": {
                                                                                "description": "The `partner_key` you wish to use for this partner. If included, **must** be unique to this partner. For more information on `partner_key` see PartnerStackJS. Note that the partner_key can only consist of letters, numbers, and underscores.",
                                                                                "example": "gstest",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "tags": {
                                                                                "example": "['tag_1_name', 'tag_2_name']",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "nullable": true,
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "group": {
                                                                                "allOf": [
                                                                                    {
                                                                                        "description": "Standard fields that are present on all database objects.",
                                                                                        "properties": {
                                                                                            "created_at": {
                                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                                "example": 1574181282399,
                                                                                                "format": "int32",
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "key": {
                                                                                                "description": "A unique identifier used to reference the object",
                                                                                                "example": "co_a80cb515fe",
                                                                                                "maxLength": 255,
                                                                                                "type": "string"
                                                                                            },
                                                                                            "updated_at": {
                                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                                "example": 1574181282399,
                                                                                                "format": "int32",
                                                                                                "type": "integer"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    {
                                                                                        "description": "**Groups** are a way to segment partners within PartnerStack to selectively distribute access to things such as Campaigns, Marketing Assets, and Rewards",
                                                                                        "properties": {
                                                                                            "archived": {
                                                                                                "description": "Whether or not this group is still active",
                                                                                                "nullable": true,
                                                                                                "type": "boolean"
                                                                                            },
                                                                                            "default": {
                                                                                                "description": "Whether this is the default Group for partners to join",
                                                                                                "type": "boolean",
                                                                                                "x-accessor": "is_default"
                                                                                            },
                                                                                            "features": {
                                                                                                "description": "Features that partners within this group have access too",
                                                                                                "nullable": true,
                                                                                                "type": "object"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "The name of this Group as presented to partners",
                                                                                                "example": "Resellers",
                                                                                                "maxLength": 255,
                                                                                                "type": "string"
                                                                                            },
                                                                                            "slug": {
                                                                                                "description": "The slugified version of this groups name to be added to routes",
                                                                                                "example": "resellers",
                                                                                                "maxLength": 255,
                                                                                                "nullable": true,
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "tier": {
                                                                                "additionalProperties": false,
                                                                                "description": "**Tiers** enable vendors to provide reward and feature levels.",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "A unique identifier to identify the tier",
                                                                                        "example": "tag_a80cb515fe",
                                                                                        "maxLength": 255,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Specifies name of the Tier",
                                                                                        "example": "Tier 1",
                                                                                        "maxLength": 50,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                ]
                                                            }
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "tags_added": {
                                                        "example": "['tag_1_name', 'tag_2_name']",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "tags_not_found": {
                                                        "example": "['tag_1_name', 'tag_2_name']",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "tags_removed": {
                                                        "example": "['tag_1_name', 'tag_2_name']",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Add or remove tags from the specified partnership."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "partnership:write"
                            ]
                        }
                    ],
                    "summary": "Updates a partnership's tags",
                    "tags": [
                        "Partnerships"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/partnerships/{unique_identifier}": {
                "get": {
                    "description": "Retrieves the details of an existing partnership.",
                    "parameters": [
                        {
                            "description": "Unique identifier of partnership. Can be `partner_key`, `internal partnership_key` or `email`.",
                            "example": "gstest",
                            "in": "path",
                            "name": "unique_identifier",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "allOf": [
                                                            {
                                                                "description": "**Partners** represent users on PartnerStack that will be promoting your company.",
                                                                "properties": {
                                                                    "email": {
                                                                        "description": "The email of the partner.",
                                                                        "example": "johnsmith@gmail.com",
                                                                        "format": "email",
                                                                        "maxLength": 255,
                                                                        "type": "string"
                                                                    },
                                                                    "field_data": {
                                                                        "description": "DEPRECATED 'fields' should be the source of truth",
                                                                        "nullable": true,
                                                                        "type": "object"
                                                                    },
                                                                    "fields": {
                                                                        "items": {
                                                                            "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                            "properties": {
                                                                                "api_name": {
                                                                                    "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                                    "maxLength": 255,
                                                                                    "type": "string"
                                                                                },
                                                                                "external_type": {
                                                                                    "description": "Name that can be used for external systems",
                                                                                    "maxLength": 255,
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "field_key": {
                                                                                    "description": "Key of field that is presented",
                                                                                    "example": "field_fjkdlrh9i32nfew",
                                                                                    "maxLength": 255,
                                                                                    "type": "string"
                                                                                },
                                                                                "help_text": {
                                                                                    "description": "The help text that is provided for this field",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "hidden": {
                                                                                    "description": "Whether or not this field is displayed when filling out its attached form",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "internal_name": {
                                                                                    "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                                    "maxLength": 255,
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "description": "Name of field that is presented",
                                                                                    "example": "Company Address",
                                                                                    "maxLength": 255,
                                                                                    "type": "string"
                                                                                },
                                                                                "options": {
                                                                                    "description": "Options to select from if this field is a picklist/checkbox",
                                                                                    "type": "object"
                                                                                },
                                                                                "placeholder_text": {
                                                                                    "description": "The text of the placeholder that is provided for this field",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "position": {
                                                                                    "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                                    "type": "integer"
                                                                                },
                                                                                "required": {
                                                                                    "description": "Whether or not this field will be required when filling out its attached form",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "type": {
                                                                                    "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                                    "maxLength": 255,
                                                                                    "type": "string",
                                                                                    "x-accessor": "type_"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The value that was submitted to the field and stored on the target object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "first_name": {
                                                                        "description": "The first name of the partner.",
                                                                        "example": "John",
                                                                        "maxLength": 50,
                                                                        "type": "string"
                                                                    },
                                                                    "fraud_flagged": {
                                                                        "description": "Whether the partner has been flagged for fraud",
                                                                        "nullable": true,
                                                                        "type": "boolean"
                                                                    },
                                                                    "last_name": {
                                                                        "description": "The last name of the partner.",
                                                                        "example": "Smith",
                                                                        "maxLength": 50,
                                                                        "type": "string"
                                                                    },
                                                                    "manager_email": {
                                                                        "description": "The email of the Partner Manager who you wish to manage this partner.",
                                                                        "example": "alicebaz@gmail.com",
                                                                        "format": "email",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "manager_name": {
                                                                        "description": "The name of the Partner Manager who you wish to manage this partner.",
                                                                        "example": "Alice Baz",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "meta": {
                                                                        "description": "DEPRECATED 'fields' should be the source of truth",
                                                                        "nullable": true,
                                                                        "type": "object",
                                                                        "x-accessor": "mdata"
                                                                    },
                                                                    "partner_key": {
                                                                        "description": "The `partner_key` you wish to use for this partner. If included, **must** be unique to this partner. For more information on `partner_key` see PartnerStackJS. Note that the partner_key can only consist of letters, numbers, and underscores.",
                                                                        "example": "gstest",
                                                                        "maxLength": 255,
                                                                        "type": "string"
                                                                    },
                                                                    "tags": {
                                                                        "example": "['tag_1_name', 'tag_2_name']",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "nullable": true,
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            {
                                                                "properties": {
                                                                    "group": {
                                                                        "allOf": [
                                                                            {
                                                                                "description": "Standard fields that are present on all database objects.",
                                                                                "properties": {
                                                                                    "created_at": {
                                                                                        "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                        "example": 1574181282399,
                                                                                        "format": "int32",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "key": {
                                                                                        "description": "A unique identifier used to reference the object",
                                                                                        "example": "co_a80cb515fe",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "updated_at": {
                                                                                        "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                        "example": 1574181282399,
                                                                                        "format": "int32",
                                                                                        "type": "integer"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            {
                                                                                "description": "**Groups** are a way to segment partners within PartnerStack to selectively distribute access to things such as Campaigns, Marketing Assets, and Rewards",
                                                                                "properties": {
                                                                                    "archived": {
                                                                                        "description": "Whether or not this group is still active",
                                                                                        "nullable": true,
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "default": {
                                                                                        "description": "Whether this is the default Group for partners to join",
                                                                                        "type": "boolean",
                                                                                        "x-accessor": "is_default"
                                                                                    },
                                                                                    "features": {
                                                                                        "description": "Features that partners within this group have access too",
                                                                                        "nullable": true,
                                                                                        "type": "object"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "The name of this Group as presented to partners",
                                                                                        "example": "Resellers",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "slug": {
                                                                                        "description": "The slugified version of this groups name to be added to routes",
                                                                                        "example": "resellers",
                                                                                        "maxLength": 255,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "tier": {
                                                                        "additionalProperties": false,
                                                                        "description": "**Tiers** enable vendors to provide reward and feature levels.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "A unique identifier to identify the tier",
                                                                                "example": "tag_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Specifies name of the Tier",
                                                                                "example": "Tier 1",
                                                                                "maxLength": 50,
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "properties": {
                                                            "address": {
                                                                "description": "Partnership's address information.",
                                                                "nullable": true,
                                                                "properties": {
                                                                    "city": {
                                                                        "description": "The city of the residence for this address.",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "country": {
                                                                        "description": "The country of the residence for this address.",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "key": {
                                                                        "description": "Key of the Partnership's Address data.",
                                                                        "type": "string"
                                                                    },
                                                                    "postal": {
                                                                        "description": "The postal code for this address.",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "primary": {
                                                                        "description": "Is this address the primary residence.",
                                                                        "nullable": true,
                                                                        "type": "boolean"
                                                                    },
                                                                    "region": {
                                                                        "description": "The region of the world for this address.",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "state": {
                                                                        "description": "The state of the residence for this address.",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "street": {
                                                                        "description": "The street address for this address.",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "unit": {
                                                                        "description": "The unit number for the building at this address.",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "approved_status": {
                                                                "description": "The approved status of a partnership. Approved means the partner is approved to be in your program. Pending means that partner's application is pending. Declined means the partner application was declined.",
                                                                "type": "string"
                                                            },
                                                            "team": {
                                                                "properties": {
                                                                    "key": {
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Retrieves the details of an existing partnership."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "partnership:read"
                            ]
                        }
                    ],
                    "summary": "Retrieve a partnership",
                    "tags": [
                        "Partnerships"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/rewards": {
                "get": {
                    "description": "Returns a list of your rewards. The rewards are returned sorted by creation date by default, with the most recent rewards appearing first.",
                    "parameters": [
                        {
                            "description": "Partnership key in which the results are filtered by.",
                            "example": "part_1234",
                            "in": "query",
                            "name": "partnership_key",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "The field in which the results are ordered by. A `-` prefix denotes that the results are in descending order.",
                            "example": "-created_at",
                            "in": "query",
                            "name": "order_by",
                            "required": false,
                            "schema": {
                                "enum": [
                                    "-created_at",
                                    "created_at",
                                    "-amount",
                                    "amount",
                                    "-ready_at",
                                    "ready_at"
                                ],
                                "type": "string"
                            }
                        },
                        {
                            "description": "Group key in which the results are filtered by",
                            "example": "grup_123",
                            "in": "query",
                            "name": "group_key",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Customer key in which the results are filtered by",
                            "example": "cus_123",
                            "in": "query",
                            "name": "customer_key",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Invoice key in which the results are filtered by",
                            "example": "invo_123",
                            "in": "query",
                            "name": "invoice_key",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "The status of the rewards",
                            "example": "pending",
                            "in": "query",
                            "name": "status",
                            "required": false,
                            "schema": {
                                "enum": [
                                    "pending",
                                    "declined",
                                    "approved",
                                    "hold",
                                    "paid",
                                    "scheduled"
                                ],
                                "type": "string"
                            }
                        },
                        {
                            "description": "Flag if drip rewards should be included into the results",
                            "example": "false",
                            "in": "query",
                            "name": "exclude_drip_rewards",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Flag to hide rewards that have been archived",
                            "example": "false",
                            "in": "query",
                            "name": "hide_archived_rewards",
                            "required": false,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "description": "Flag if drip rewards returned have a line_id (invoice) attached or not",
                            "example": "false",
                            "in": "query",
                            "name": "empty_line_id",
                            "required": false,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "description": "Free keywords that will filter on the followingReward key, Customer name, Partner first name, Partner last name, Partner email, Partner key",
                            "example": "rwrd_1234",
                            "in": "query",
                            "name": "keywords",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Text that the description must contain",
                            "example": "$5 for every sign up",
                            "in": "query",
                            "name": "description",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Flag the returned results should have distinct descriptions or not",
                            "example": "true",
                            "in": "query",
                            "name": "distinct_description",
                            "required": false,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "description": "Flag the returned results should have distinct decline reasons or not",
                            "example": "true",
                            "in": "query",
                            "name": "distinct_decline_reason",
                            "required": false,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "description": "Text that the decline_reason must contain",
                            "example": "Automated: On hold due to suspicious activity",
                            "in": "query",
                            "name": "decline_reason",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Flag if the returned results should have only pending and approved rewards which do not have an associated payment line.",
                            "example": "true",
                            "in": "query",
                            "name": "invoiceable",
                            "required": false,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "description": "A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.",
                            "example": 10,
                            "in": "query",
                            "name": "limit",
                            "schema": {
                                "default": 10,
                                "maximum": 250,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.",
                            "example": "key_8U5s1iH2Pd2a2p",
                            "in": "query",
                            "name": "starting_after",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.",
                            "example": "key_sE1vd9uwep7XHg",
                            "in": "query",
                            "name": "ending_before",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "has_more": {
                                                        "type": "boolean"
                                                    },
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "allOf": [
                                                                        {
                                                                            "description": "Reward is what you earn from companies on PartnerStack.",
                                                                            "properties": {
                                                                                "amount": {
                                                                                    "description": "The amount of the reward in cents (USD).",
                                                                                    "example": 1000,
                                                                                    "maximum": 100000000,
                                                                                    "nullable": true,
                                                                                    "type": "integer"
                                                                                },
                                                                                "decline_reason": {
                                                                                    "description": "The reason the reward has been held or declined",
                                                                                    "example": "Invalid reward",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "description": {
                                                                                    "description": "The description that the company gives to the reward.",
                                                                                    "example": "$30 earned for every transaction made by each customer",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "reward_status": {
                                                                                    "description": "The status of the reward. Can be one of: `hold`, `pending`, `approved`, `declined`, `paid`.",
                                                                                    "example": "pending",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        {
                                                                            "description": "Reward is what you earn from companies on PartnerStack.",
                                                                            "properties": {
                                                                                "action": {
                                                                                    "description": "The action associated with this reward.",
                                                                                    "nullable": true,
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "description": "Unique key of this action.",
                                                                                            "example": "act_YSTIEhRr57QEzH",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": {
                                                                                            "description": "The type of action the partner or customer performed",
                                                                                            "example": "post_created",
                                                                                            "type": "string",
                                                                                            "x-accessor": "external_type"
                                                                                        },
                                                                                        "value": {
                                                                                            "description": "The number of times the action was performed",
                                                                                            "example": 1,
                                                                                            "minimum": 1,
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "customer": {
                                                                                    "description": "The customer associated with this reward.",
                                                                                    "nullable": true,
                                                                                    "properties": {
                                                                                        "email": {
                                                                                            "description": "Email of this customer.",
                                                                                            "example": "Brandon.Davila@gmail.com",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "external_key": {
                                                                                            "description": "Unique external key of this customer.",
                                                                                            "example": "bdavila@hotmail.com",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Unique key of this customer.",
                                                                                            "example": "cus_EMwFYOF73GCCRv",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "description": "Name of this customer.",
                                                                                            "example": "Brandon Davila",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "invoice": {
                                                                                    "description": "The invoice associated with this reward.",
                                                                                    "nullable": true,
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "description": "Unique key of this invoice.",
                                                                                            "example": "invo_Xt8WCadB3ivDoe",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "payment_date": {
                                                                                            "description": "Epoch timestamp (ms) when this invoice was paid out. Available only if the invoice was charged successfully.",
                                                                                            "example": 1622733671000,
                                                                                            "nullable": true,
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "status": {
                                                                                            "description": "The status of this invoice.",
                                                                                            "enum": [
                                                                                                "paused",
                                                                                                "pending",
                                                                                                "flagged",
                                                                                                "approved",
                                                                                                "charge_queued",
                                                                                                "charge_pending",
                                                                                                "charge_cancelled",
                                                                                                "charge_failed",
                                                                                                "charge_successful"
                                                                                            ],
                                                                                            "example": "charge_successful",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "line": {
                                                                                    "description": "If this reward is associated with an invoice, the line record associating the two.",
                                                                                    "nullable": true,
                                                                                    "properties": {
                                                                                        "amount": {
                                                                                            "description": "The amount of the line.",
                                                                                            "example": 1000,
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Unique key of this line.",
                                                                                            "example": "line_9ebOwdTywVFOFr",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "offer": {
                                                                                    "description": "The offer associated with this reward.",
                                                                                    "nullable": true,
                                                                                    "properties": {
                                                                                        "description": {
                                                                                            "description": "The offer description",
                                                                                            "example": "Earn 5$ on signup",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Unique key of this offer.",
                                                                                            "example": "offr_xL9AG6gMUSURrC",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "partnership": {
                                                                                    "description": "The partnership associated with this reward.",
                                                                                    "properties": {
                                                                                        "email": {
                                                                                            "description": "The partnership owner's email.",
                                                                                            "example": "stevenrobertson@example.com",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "group": {
                                                                                            "description": "The group associated with the partnership.",
                                                                                            "nullable": true,
                                                                                            "properties": {
                                                                                                "key": {
                                                                                                    "description": "Unique key of this group.",
                                                                                                    "example": "grup_TvNnHPJTV6t9yJ",
                                                                                                    "nullable": true,
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "name": {
                                                                                                    "description": "The name of this group.",
                                                                                                    "example": "Default",
                                                                                                    "nullable": true,
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Unique key of this partnership.",
                                                                                            "example": "part_9ebOwdTywVFOFr",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "description": "The partnership owner's name.",
                                                                                            "example": "Steven Robertson",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "transaction": {
                                                                                    "description": "The transaction associated with this reward.",
                                                                                    "nullable": true,
                                                                                    "properties": {
                                                                                        "amount": {
                                                                                            "description": "The amount of the transaction.",
                                                                                            "example": 1000,
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "currency": {
                                                                                            "description": "The currency of the transaction.",
                                                                                            "example": "CAD",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Unique key of this transaction.",
                                                                                            "example": "tran_8cLammWSLyL59l",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "product_key": {
                                                                                            "description": "The product key associated with the transaction.",
                                                                                            "example": "prod_8cLammWSLyL59l",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "trigger": {
                                                                                    "description": "The trigger associated with this reward.",
                                                                                    "nullable": true,
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "description": "Unique key of this trigger.",
                                                                                            "example": "trig_Z2gSIqQhPyT5KS",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "array"
                                                    },
                                                    "total": {
                                                        "nullable": true,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Returns a list of your rewards. The rewards are returned sorted by creation date by default, with the most recent rewards appearing first."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "bearerAuth": []
                        },
                        {
                            "oauth2": [
                                "reward:read"
                            ]
                        },
                        {
                            "basicAuth": []
                        },
                        {
                            "cookieAuth": []
                        }
                    ],
                    "summary": "List all rewards",
                    "tags": [
                        "Rewards"
                    ],
                    "x-apiType": [
                        "company",
                        "partner"
                    ],
                    "x-isPublic": true,
                    "x-scope": "read"
                },
                "post": {
                    "description": "Creates a new reward for a given target.",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Reward is what the Partner earns.",
                                    "properties": {
                                        "amount": {
                                            "description": "The amount of the reward in cents (USD)",
                                            "example": 666,
                                            "maximum": 100000000,
                                            "minimum": 1,
                                            "type": "integer"
                                        },
                                        "description": {
                                            "description": "The description of what this reward is for",
                                            "example": "$30 earned for every transaction made by each customer",
                                            "type": "string"
                                        },
                                        "target": {
                                            "properties": {
                                                "key": {
                                                    "description": "The key of the target for reward creation",
                                                    "example": "cust_1234567",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "The type of the target for the reward",
                                                    "enum": [
                                                        "customer",
                                                        "transaction",
                                                        "manual"
                                                    ],
                                                    "example": "transaction",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "key"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "amount",
                                        "description",
                                        "target"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "Reward is what the Partner earns.",
                                                        "properties": {
                                                            "amount": {
                                                                "description": "The amount of the reward in cents (USD)",
                                                                "example": 666,
                                                                "maximum": 100000000,
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "description": {
                                                                "description": "The description of what this reward is for",
                                                                "example": "$30 earned for every transaction made by each customer",
                                                                "type": "string"
                                                            },
                                                            "target": {
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The key of the target for reward creation",
                                                                        "example": "cust_1234567",
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "The type of the target for the reward",
                                                                        "enum": [
                                                                            "customer",
                                                                            "transaction",
                                                                            "manual"
                                                                        ],
                                                                        "example": "transaction",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type",
                                                                    "key"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "amount",
                                                            "description",
                                                            "target"
                                                        ],
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Creates a new reward for a given target."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "reward:write"
                            ]
                        }
                    ],
                    "summary": "Create a reward",
                    "tags": [
                        "Rewards"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/rewards/removed/{invoice_key}": {
                "get": {
                    "description": "Returns a list of your rewards. The rewards are returned sorted by creation date by default, with the most recent rewards appearing first.",
                    "parameters": [
                        {
                            "description": "The invoice key to return the removed rewards for",
                            "example": "invo_78yw2h35nioh",
                            "in": "path",
                            "name": "invoice_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Partnership key in which the results are filtered by.",
                            "example": "part_1234",
                            "in": "query",
                            "name": "partnership_key",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Applies a maximum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538352000000,
                            "in": "query",
                            "name": "max_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "Applies a minimum epoch timestamp (ms) filter to the response `created_at`.",
                            "example": 1538062487765,
                            "in": "query",
                            "name": "min_created",
                            "schema": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "description": "The field in which the results are ordered by.A `-` prefix denotes that the results are in descending order.",
                            "example": "-created_at",
                            "in": "query",
                            "name": "order_by",
                            "required": false,
                            "schema": {
                                "enum": [
                                    "-created_at",
                                    "created_at",
                                    "-amount",
                                    "amount",
                                    "-ready_at",
                                    "ready_at",
                                    "-fraud_score",
                                    "fraud_score"
                                ],
                                "type": "string"
                            }
                        },
                        {
                            "description": "Group key in which the results are filtered by",
                            "example": "grup_123",
                            "in": "query",
                            "name": "group_key",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Customer key in which the results are filtered by",
                            "example": "cus_123",
                            "in": "query",
                            "name": "customer_key",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Free keywords that will filter on the followingReward key, Customer name, Partner first name, Partner last name, Partner email, Partner key",
                            "example": "rwrd_1234",
                            "in": "query",
                            "name": "keywords",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.",
                            "example": 10,
                            "in": "query",
                            "name": "limit",
                            "schema": {
                                "default": 10,
                                "maximum": 250,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.",
                            "example": "key_8U5s1iH2Pd2a2p",
                            "in": "query",
                            "name": "starting_after",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.",
                            "example": "key_sE1vd9uwep7XHg",
                            "in": "query",
                            "name": "ending_before",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "has_more": {
                                                        "type": "boolean"
                                                    },
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "allOf": [
                                                                        {
                                                                            "description": "Reward is what you earn from companies on PartnerStack.",
                                                                            "properties": {
                                                                                "amount": {
                                                                                    "description": "The amount of the reward in cents (USD).",
                                                                                    "example": 1000,
                                                                                    "maximum": 100000000,
                                                                                    "nullable": true,
                                                                                    "type": "integer"
                                                                                },
                                                                                "decline_reason": {
                                                                                    "description": "The reason the reward has been held or declined",
                                                                                    "example": "Invalid reward",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "description": {
                                                                                    "description": "The description that the company gives to the reward.",
                                                                                    "example": "$30 earned for every transaction made by each customer",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "reward_status": {
                                                                                    "description": "The status of the reward. Can be one of: `hold`, `pending`, `approved`, `declined`, `paid`.",
                                                                                    "example": "pending",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        {
                                                                            "description": "Reward is what you earn from companies on PartnerStack.",
                                                                            "properties": {
                                                                                "customer": {
                                                                                    "description": "The customer associated with this reward.",
                                                                                    "nullable": true,
                                                                                    "properties": {
                                                                                        "email": {
                                                                                            "description": "Email of this customer.",
                                                                                            "example": "Brandon.Davila@gmail.com",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "external_key": {
                                                                                            "description": "Unique external key of this customer.",
                                                                                            "example": "bdavila@hotmail.com",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Unique key of this customer.",
                                                                                            "example": "cus_EMwFYOF73GCCRv",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "description": "Name of this customer.",
                                                                                            "example": "Brandon Davila",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "fraud_data": {
                                                                                    "description": "The fraud data associated with the partner attached to the reward.",
                                                                                    "nullable": true,
                                                                                    "properties": {
                                                                                        "fraud_date": {
                                                                                            "description": "The date of the fraud decision.",
                                                                                            "example": 1615382400,
                                                                                            "nullable": true,
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "fraud_reason": {
                                                                                            "description": "The risk reasons of this reward.",
                                                                                            "example": [
                                                                                                "High risk email address"
                                                                                            ],
                                                                                            "items": {
                                                                                                "example": "High risk email address",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "nullable": true,
                                                                                            "type": "array"
                                                                                        },
                                                                                        "fraud_score": {
                                                                                            "description": "The highest fraud score of the partner",
                                                                                            "example": 97,
                                                                                            "nullable": true,
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "risk_level": {
                                                                                            "description": "The risk level of this partner.",
                                                                                            "example": "High",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "line": {
                                                                                    "description": "If this reward is associated with an invoice, the line record associating the two.",
                                                                                    "nullable": true,
                                                                                    "properties": {
                                                                                        "amount": {
                                                                                            "description": "The amount of the line.",
                                                                                            "example": 1000,
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Unique key of this line.",
                                                                                            "example": "line_9ebOwdTywVFOFr",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "partnership": {
                                                                                    "description": "The partnership associated with this reward.",
                                                                                    "properties": {
                                                                                        "email": {
                                                                                            "description": "The partnership owner's email.",
                                                                                            "example": "stevenrobertson@example.com",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "group": {
                                                                                            "description": "The group associated with the partnership.",
                                                                                            "nullable": true,
                                                                                            "properties": {
                                                                                                "key": {
                                                                                                    "description": "Unique key of this group.",
                                                                                                    "example": "grup_TvNnHPJTV6t9yJ",
                                                                                                    "nullable": true,
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "name": {
                                                                                                    "description": "The name of this group.",
                                                                                                    "example": "Default",
                                                                                                    "nullable": true,
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Unique key of this partnership.",
                                                                                            "example": "part_9ebOwdTywVFOFr",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "description": "The partnership owner's name.",
                                                                                            "example": "Steven Robertson",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "payment_history": {
                                                                                    "description": "The removed reward payment history associated with this reward.",
                                                                                    "nullable": true,
                                                                                    "properties": {
                                                                                        "reason": {
                                                                                            "description": "The reason for removing the reward.",
                                                                                            "example": "Fraud",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "user_email": {
                                                                                            "description": "The email of the user who removed the reward.",
                                                                                            "example": "steven.robertson@example.com",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "user_key": {
                                                                                            "description": "The user key of the user who removed the reward.",
                                                                                            "example": "usr_9ebOwdTywVFOFr",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "user_name": {
                                                                                            "description": "The name of the user who removed the reward.",
                                                                                            "example": "Steven Robertson",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "transaction": {
                                                                                    "description": "The transaction associated with this reward.",
                                                                                    "nullable": true,
                                                                                    "properties": {
                                                                                        "amount": {
                                                                                            "description": "The amount of the transaction.",
                                                                                            "example": 1000,
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "currency": {
                                                                                            "description": "The currency of the transaction.",
                                                                                            "example": "CAD",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Unique key of this transaction.",
                                                                                            "example": "tran_8cLammWSLyL59l",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "product_key": {
                                                                                            "description": "The product key associated with the transaction.",
                                                                                            "example": "prod_8cLammWSLyL59l",
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "array"
                                                    },
                                                    "total": {
                                                        "nullable": true,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Returns a list of your rewards. The rewards are returned sorted by creation date by default, with the most recent rewards appearing first."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "cookieAuth": []
                        }
                    ],
                    "summary": "List all rewards",
                    "tags": [
                        "Rewards"
                    ],
                    "x-isPublic": true,
                    "x-scope": "read"
                }
            },
            "/v2/sales_cycles/{object_type}/stages": {
                "get": {
                    "description": "Retrieves configured Sales Cycle Stages for a company or group (if group_key argument provided)",
                    "parameters": [
                        {
                            "description": "The Sales Cycle type to retrieve stages for",
                            "example": "lead",
                            "in": "path",
                            "name": "object_type",
                            "required": true,
                            "schema": {
                                "enum": [
                                    "lead",
                                    "deal"
                                ],
                                "type": "string"
                            }
                        },
                        {
                            "description": "Group key to retreive Stages for. Optional, defaults to all company Stages of this type",
                            "in": "query",
                            "name": "group_key",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "properties": {
                                                                        "api_name": {
                                                                            "description": "The API name of this Stage for non-PartnerStack systems",
                                                                            "example": "qualified_ent",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "description": {
                                                                            "description": "The description of the stage",
                                                                            "example": "Initial stage",
                                                                            "type": "string"
                                                                        },
                                                                        "internal_status": {
                                                                            "description": "The PartnerStack identifier for this Stage",
                                                                            "enum": [
                                                                                "open",
                                                                                "closed",
                                                                                "dead",
                                                                                "closed won",
                                                                                "closed lost",
                                                                                "custom"
                                                                            ],
                                                                            "example": "closed won",
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "description": "The name of the stage",
                                                                            "example": "1st Stage",
                                                                            "type": "string"
                                                                        },
                                                                        "position": {
                                                                            "description": "The display position of the stage in the sales cycle",
                                                                            "example": 1,
                                                                            "type": "integer"
                                                                        },
                                                                        "sales_cycle_key": {
                                                                            "description": "The unique key for associate sales cycle",
                                                                            "example": "scy_123",
                                                                            "maxLength": 40,
                                                                            "type": "string"
                                                                        },
                                                                        "sales_cycle_name": {
                                                                            "description": "The name of the Sales Cycle this Stage belongs to",
                                                                            "example": "Enterprise Sales Cycle",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ],
                                                            "description": "A Stage in a Sales Cycle.",
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Retrieves configured Sales Cycle Stages for a company or group (if group_key argument provided)"
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        }
                    ],
                    "summary": "Retrieve Sales Cycle Stages",
                    "tags": [
                        "SalesCycles"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/transactions": {
                "get": {
                    "description": "Returns a list of your transactions. The transactions are returned sorted by creation date, with the most recent transactions appearing first. ",
                    "parameters": [
                        {
                            "description": "Key of customer who made the transaction.",
                            "example": "cus_a80cb515fe",
                            "in": "query",
                            "name": "customer_key",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "An external key that can be used to reference the customer.                 This is the same as the `customer_key` value used when creating the customer                 with PartnerStackJS.",
                            "example": "crust_Hu8Gfax3DXZn6K",
                            "in": "query",
                            "name": "customer_external_key",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Customer's email address.",
                            "example": "johnsmith@gmail.com",
                            "in": "query",
                            "name": "customer_email",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Transaction's product_key.",
                            "example": "monthly_plan",
                            "in": "query",
                            "name": "product_key",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "Transaction's category_key.",
                            "example": "subscription",
                            "in": "query",
                            "name": "category_key",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.",
                            "example": 10,
                            "in": "query",
                            "name": "limit",
                            "schema": {
                                "default": 10,
                                "maximum": 250,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.",
                            "example": "key_8U5s1iH2Pd2a2p",
                            "in": "query",
                            "name": "starting_after",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.",
                            "example": "key_sE1vd9uwep7XHg",
                            "in": "query",
                            "name": "ending_before",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "has_more": {
                                                        "type": "boolean"
                                                    },
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "allOf": [
                                                                        {
                                                                            "description": "Standard fields that are present on all database objects.",
                                                                            "properties": {
                                                                                "created_at": {
                                                                                    "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                    "example": 1574181282399,
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "key": {
                                                                                    "description": "A unique identifier used to reference the object",
                                                                                    "example": "co_a80cb515fe",
                                                                                    "maxLength": 255,
                                                                                    "type": "string"
                                                                                },
                                                                                "updated_at": {
                                                                                    "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                    "example": 1574181282399,
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        {
                                                                            "description": "Transaction Base",
                                                                            "properties": {
                                                                                "amount": {
                                                                                    "description": "Transaction amount in cents for specified currency.",
                                                                                    "example": 10000,
                                                                                    "maximum": 10000000000,
                                                                                    "type": "integer"
                                                                                },
                                                                                "category_key": {
                                                                                    "description": "Key of transaction category.",
                                                                                    "maxLength": 255,
                                                                                    "minLength": 1,
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "currency": {
                                                                                    "description": "Transaction currency type. Note that the format is the three-letter ISO currency code.",
                                                                                    "example": "USD",
                                                                                    "maxLength": 3,
                                                                                    "minLength": 3,
                                                                                    "type": "string"
                                                                                },
                                                                                "customer_key": {
                                                                                    "description": "Key of customer who made the transaction.",
                                                                                    "maxLength": 255,
                                                                                    "minLength": 1,
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "description": "Key of transaction record in PartnerStack.",
                                                                                    "maxLength": 255,
                                                                                    "minLength": 4,
                                                                                    "type": "string"
                                                                                },
                                                                                "metadata": {
                                                                                    "description": "Additional data that can be provided for the transaction on creation. Note that you can only store a maximum of 25 metadata attributes. The value of each attribute cannot exceed 100 characters, and the name of each attribute cannot exceed 30 characters.",
                                                                                    "nullable": true,
                                                                                    "type": "object"
                                                                                },
                                                                                "product_key": {
                                                                                    "description": "Key of transaction product.",
                                                                                    "maxLength": 255,
                                                                                    "minLength": 1,
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        {
                                                                            "properties": {
                                                                                "amount_usd": {
                                                                                    "description": "Transaction amount in cents converted to USD.",
                                                                                    "example": 10000,
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    ],
                                                                    "description": "Transaction"
                                                                },
                                                                {
                                                                    "properties": {
                                                                        "approved": {
                                                                            "description": "Used to indicate whether this transaction has been approved",
                                                                            "type": "boolean"
                                                                        },
                                                                        "customer": {
                                                                            "description": "Customer info.",
                                                                            "nullable": true,
                                                                            "properties": {
                                                                                "email": {
                                                                                    "description": "Customer's email address.",
                                                                                    "example": "johnsmith@gmail.com",
                                                                                    "maxLength": 255,
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "external_key": {
                                                                                    "description": "An external key that can be used to reference the customer.                                 This is the same as the `customer_key` value used when creating the customer                                 with PartnerStackJS.",
                                                                                    "example": "crust_Hu8Gfax3DXZn6K",
                                                                                    "maxLength": 255,
                                                                                    "minLength": 1,
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "description": "Key of customer who made the transaction.",
                                                                                    "example": "cus_MQ30zVaUvsWIna",
                                                                                    "maxLength": 255,
                                                                                    "minLength": 1,
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "extension": {
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ],
                                                            "description": "Transaction"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "total": {
                                                        "nullable": true,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Returns a list of your transactions. The transactions are returned sorted by creation date, with the most recent transactions appearing first. "
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "bearerAuth": []
                        },
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "transaction:read"
                            ]
                        }
                    ],
                    "summary": "List all transactions",
                    "tags": [
                        "Transactions"
                    ],
                    "x-apiType": [
                        "company",
                        "partner"
                    ],
                    "x-isPublic": true,
                    "x-scope": "read"
                },
                "post": {
                    "description": "Creates a new transaction\n\nNote that `customer_external_key` or `customer_email` can be provided in\nplace of `customer_key` to reference the customer.\n\nThese customer reference fields are required, but mutually exclusive\n(i.e. you must provide exactly and only one of the three).",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "Transaction Base",
                                            "properties": {
                                                "amount": {
                                                    "description": "Transaction amount in cents for specified currency.",
                                                    "example": 10000,
                                                    "maximum": 10000000000,
                                                    "type": "integer"
                                                },
                                                "category_key": {
                                                    "description": "Key of transaction category.",
                                                    "maxLength": 255,
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "currency": {
                                                    "description": "Transaction currency type. Note that the format is the three-letter ISO currency code.",
                                                    "example": "USD",
                                                    "maxLength": 3,
                                                    "minLength": 3,
                                                    "type": "string"
                                                },
                                                "customer_key": {
                                                    "description": "Key of customer who made the transaction.",
                                                    "maxLength": 255,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "key": {
                                                    "description": "Key of transaction record in PartnerStack.",
                                                    "maxLength": 255,
                                                    "minLength": 4,
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "description": "Additional data that can be provided for the transaction on creation. Note that you can only store a maximum of 25 metadata attributes. The value of each attribute cannot exceed 100 characters, and the name of each attribute cannot exceed 30 characters.",
                                                    "nullable": true,
                                                    "type": "object"
                                                },
                                                "product_key": {
                                                    "description": "Key of transaction product.",
                                                    "maxLength": 255,
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "required": [
                                                "amount",
                                                "currency"
                                            ]
                                        },
                                        {
                                            "properties": {
                                                "created_at": {
                                                    "description": "The created_at date of the transaction in epoch (ms).",
                                                    "example": "1688570185935",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "oneOf": [
                                                {
                                                    "properties": {
                                                        "customer_key": {
                                                            "description": "Key of customer who made the transaction.",
                                                            "example": "cus_a80cb515fe",
                                                            "maxLength": 255,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "customer_key"
                                                    ],
                                                    "type": "object"
                                                },
                                                {
                                                    "properties": {
                                                        "customer_external_key": {
                                                            "description": "An external key that can be used to reference the customer.                                     This is the same as the `customer_key` value used when creating the customer                                     with PartnerStackJS.",
                                                            "example": "crust_Hu8Gfax3DXZn6K",
                                                            "maxLength": 255,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "customer_external_key"
                                                    ],
                                                    "type": "object"
                                                },
                                                {
                                                    "properties": {
                                                        "customer_email": {
                                                            "description": "Customer's email address.",
                                                            "example": "johnsmith@gmail.com",
                                                            "maxLength": 255,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "customer_email"
                                                    ],
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "allOf": [
                                                            {
                                                                "allOf": [
                                                                    {
                                                                        "description": "Standard fields that are present on all database objects.",
                                                                        "properties": {
                                                                            "created_at": {
                                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "key": {
                                                                                "description": "A unique identifier used to reference the object",
                                                                                "example": "co_a80cb515fe",
                                                                                "maxLength": 255,
                                                                                "type": "string"
                                                                            },
                                                                            "updated_at": {
                                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                "example": 1574181282399,
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "description": "Transaction Base",
                                                                        "properties": {
                                                                            "amount": {
                                                                                "description": "Transaction amount in cents for specified currency.",
                                                                                "example": 10000,
                                                                                "maximum": 10000000000,
                                                                                "type": "integer"
                                                                            },
                                                                            "category_key": {
                                                                                "description": "Key of transaction category.",
                                                                                "maxLength": 255,
                                                                                "minLength": 1,
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            },
                                                                            "currency": {
                                                                                "description": "Transaction currency type. Note that the format is the three-letter ISO currency code.",
                                                                                "example": "USD",
                                                                                "maxLength": 3,
                                                                                "minLength": 3,
                                                                                "type": "string"
                                                                            },
                                                                            "customer_key": {
                                                                                "description": "Key of customer who made the transaction.",
                                                                                "maxLength": 255,
                                                                                "minLength": 1,
                                                                                "type": "string"
                                                                            },
                                                                            "key": {
                                                                                "description": "Key of transaction record in PartnerStack.",
                                                                                "maxLength": 255,
                                                                                "minLength": 4,
                                                                                "type": "string"
                                                                            },
                                                                            "metadata": {
                                                                                "description": "Additional data that can be provided for the transaction on creation. Note that you can only store a maximum of 25 metadata attributes. The value of each attribute cannot exceed 100 characters, and the name of each attribute cannot exceed 30 characters.",
                                                                                "nullable": true,
                                                                                "type": "object"
                                                                            },
                                                                            "product_key": {
                                                                                "description": "Key of transaction product.",
                                                                                "maxLength": 255,
                                                                                "minLength": 1,
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "amount_usd": {
                                                                                "description": "Transaction amount in cents converted to USD.",
                                                                                "example": 10000,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "description": "Transaction"
                                                            },
                                                            {
                                                                "properties": {
                                                                    "approved": {
                                                                        "description": "Used to indicate whether this transaction has been approved",
                                                                        "type": "boolean"
                                                                    },
                                                                    "customer": {
                                                                        "description": "Customer info.",
                                                                        "nullable": true,
                                                                        "properties": {
                                                                            "email": {
                                                                                "description": "Customer's email address.",
                                                                                "example": "johnsmith@gmail.com",
                                                                                "maxLength": 255,
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            },
                                                                            "external_key": {
                                                                                "description": "An external key that can be used to reference the customer.                                 This is the same as the `customer_key` value used when creating the customer                                 with PartnerStackJS.",
                                                                                "example": "crust_Hu8Gfax3DXZn6K",
                                                                                "maxLength": 255,
                                                                                "minLength": 1,
                                                                                "nullable": true,
                                                                                "type": "string"
                                                                            },
                                                                            "key": {
                                                                                "description": "Key of customer who made the transaction.",
                                                                                "example": "cus_MQ30zVaUvsWIna",
                                                                                "maxLength": 255,
                                                                                "minLength": 1,
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "extension": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "description": "Transaction"
                                                    }
                                                ]
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Creates a new transaction\n\nNote that `customer_external_key` or `customer_email` can be provided in\nplace of `customer_key` to reference the customer.\n\nThese customer reference fields are required, but mutually exclusive\n(i.e. you must provide exactly and only one of the three)."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "transaction:write"
                            ]
                        }
                    ],
                    "summary": "Create a transaction",
                    "tags": [
                        "Transactions"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/transactions/{transaction_key}": {
                "delete": {
                    "description": "Deletes a transaction with a given transaction key.",
                    "parameters": [
                        {
                            "description": "Unique identifier for transactions.",
                            "example": "tran_a80cb515fe",
                            "in": "path",
                            "name": "transaction_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Deletes a transaction with a given transaction key."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "transaction:write"
                            ]
                        }
                    ],
                    "summary": "Delete a transaction",
                    "tags": [
                        "Transactions"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/webhooks": {
                "get": {
                    "description": "Returns a list of your webhooks. The webhooks are\n    returned sorted by creation date, with the most recent webhooks\n    appearing first.",
                    "parameters": [
                        {
                            "description": "A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.",
                            "example": 10,
                            "in": "query",
                            "name": "limit",
                            "schema": {
                                "default": 10,
                                "maximum": 250,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.",
                            "example": "key_8U5s1iH2Pd2a2p",
                            "in": "query",
                            "name": "starting_after",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "description": "A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.",
                            "example": "key_sE1vd9uwep7XHg",
                            "in": "query",
                            "name": "ending_before",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "properties": {
                                                    "has_more": {
                                                        "example": true,
                                                        "type": "boolean"
                                                    },
                                                    "items": {
                                                        "items": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "description": "Webhook Base",
                                                                    "properties": {
                                                                        "events": {
                                                                            "description": "A list of events to send to the registered Webhook.",
                                                                            "example": [
                                                                                "deal.created",
                                                                                "deal.updated"
                                                                            ],
                                                                            "items": {
                                                                                "enum": [
                                                                                    "application.approved",
                                                                                    "application.created",
                                                                                    "application.declined",
                                                                                    "customer.created",
                                                                                    "customer.updated",
                                                                                    "customer.deleted",
                                                                                    "deal.created",
                                                                                    "deal.updated",
                                                                                    "lead.created",
                                                                                    "lead.updated",
                                                                                    "partnership.agreement_created",
                                                                                    "partnership.archived",
                                                                                    "partnership.created",
                                                                                    "partnership.updated",
                                                                                    "partnership.tags_updated",
                                                                                    "training.course_completed",
                                                                                    "training.learning_path_completed",
                                                                                    "transaction.created",
                                                                                    "partner_team.member_created"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            "minItems": 1,
                                                                            "type": "array",
                                                                            "uniqueItems": true
                                                                        },
                                                                        "target_url": {
                                                                            "description": "URL endpoint Webhook data will be sent to.",
                                                                            "example": "https://jsonplaceholder.typicode.com/posts",
                                                                            "format": "uri",
                                                                            "maxLength": 2083,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ],
                                                            "description": "Webhook"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "items",
                                                    "has_more"
                                                ],
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Returns a list of your webhooks. The webhooks are\n    returned sorted by creation date, with the most recent webhooks\n    appearing first."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "webhook:read"
                            ]
                        }
                    ],
                    "summary": "List all webhooks",
                    "tags": [
                        "Webhooks"
                    ],
                    "x-isPublic": true
                },
                "post": {
                    "callbacks": {
                        "Customer Events": {
                            "{$request.body#/target_url}": {
                                "post": {
                                    "description": "A Customer event callback response from a registered webhook",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "properties": {
                                                        "data": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "description": "**Customers** represent the users who have been referred by a **Partner**.\n\n**Customers** are linked to the **Partner** that referred them through a **partner_key** which must be provided on the Create Customer endpoint.\n\nThe **partner_key** is retrievable from `growsumo.data.partner_key`, which is created by the `PartnerStackJS` snippet.",
                                                                    "properties": {
                                                                        "customer_key": {
                                                                            "description": "External customer key that can be configured on creation.",
                                                                            "example": "123435",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string",
                                                                            "x-accessor": "external_key"
                                                                        },
                                                                        "email": {
                                                                            "description": "The customers email, must be a valid email",
                                                                            "example": "johnsmith@gmail.com",
                                                                            "format": "email",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "field_data": {
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        },
                                                                        "fields": {
                                                                            "items": {
                                                                                "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                                "properties": {
                                                                                    "api_name": {
                                                                                        "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "external_type": {
                                                                                        "description": "Name that can be used for external systems",
                                                                                        "maxLength": 255,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "field_key": {
                                                                                        "description": "Key of field that is presented",
                                                                                        "example": "field_fjkdlrh9i32nfew",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "help_text": {
                                                                                        "description": "The help text that is provided for this field",
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "hidden": {
                                                                                        "description": "Whether or not this field is displayed when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "internal_name": {
                                                                                        "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of field that is presented",
                                                                                        "example": "Company Address",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "options": {
                                                                                        "description": "Options to select from if this field is a picklist/checkbox",
                                                                                        "type": "object"
                                                                                    },
                                                                                    "placeholder_text": {
                                                                                        "description": "The text of the placeholder that is provided for this field",
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "position": {
                                                                                        "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "required": {
                                                                                        "description": "Whether or not this field will be required when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "type": {
                                                                                        "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                                        "maxLength": 255,
                                                                                        "type": "string",
                                                                                        "x-accessor": "type_"
                                                                                    },
                                                                                    "value": {
                                                                                        "description": "The value that was submitted to the field and stored on the target object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "meta": {
                                                                            "description": "Additional custom fields for the customer that is configured in your PartnerStack dashboard.",
                                                                            "example": {
                                                                                "field": "value"
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "name": {
                                                                            "description": "Should be either the customer's name, or the company name",
                                                                            "example": "John Smith",
                                                                            "maxLength": 100,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "partner_key": {
                                                                            "description": "The key of the partner that is responsible for the customer",
                                                                            "example": "bertramgilfoyle",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "partnership_key": {
                                                                            "description": "Unique key of this partnership.",
                                                                            "example": "part_A7nGc9pKnx8xEW",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "provider_key": {
                                                                            "description": "A unique identifier given by a payment provider (Stripe, Recurly, Chargebee etc)",
                                                                            "example": "cus_AJ6bvXbVofMpsW",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "source_key": {
                                                                            "description": "The key of the source at which the customer was created through",
                                                                            "example": "deal_987us345r2",
                                                                            "maxLength": 40,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "source_type": {
                                                                            "description": "The source at which the customer was created through",
                                                                            "example": "deal",
                                                                            "maxLength": 40,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "test": {
                                                                            "description": "True if created by a test partner",
                                                                            "example": true,
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "event": {
                                                            "description": "The event that triggered the callback.",
                                                            "enum": [
                                                                "customer.created",
                                                                "customer.updated",
                                                                "customer.deleted"
                                                            ],
                                                            "example": "customer.created",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "event",
                                                        "data"
                                                    ],
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    },
                                    "responses": {
                                        "200": {
                                            "description": "Your server returns this code if it accepts the request"
                                        }
                                    }
                                }
                            }
                        },
                        "Deal Events": {
                            "{$request.body#/target_url}": {
                                "post": {
                                    "description": "A Deal event callback response from a registered Webhook",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "properties": {
                                                        "data": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "description": "**Deals** allow your partners to submit accounts they are working to your sales team to avoid channel conflicts and earn commissions for closed accounts.\n\nTypically the Deals experience is handled through a CRM integration like Salesforce. However you may opt to use the Deals API to have PartnerStack interact with a custom data warehouse rather than directly with your CRM.",
                                                                    "properties": {
                                                                        "account_name": {
                                                                            "description": "Name of the account",
                                                                            "example": "Digital Agency Acme",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "amount": {
                                                                            "description": "Deal amount in **cents**",
                                                                            "example": 25000,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "close_date": {
                                                                            "description": "Expected close date of deal as YYYY-MM-DD",
                                                                            "example": "2020-03-01",
                                                                            "format": "date",
                                                                            "type": "string",
                                                                            "x-accessor": "close_date_as_date_string"
                                                                        },
                                                                        "contact_first_name": {
                                                                            "description": "First name of the account's contact",
                                                                            "example": "John",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "contact_last_name": {
                                                                            "description": "Last name of the account's contact",
                                                                            "example": "Smith",
                                                                            "maxLength": 255,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "external_key": {
                                                                            "description": "Reference that can be used in place of the key.",
                                                                            "example": "deal_1234",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "field_data": {
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        },
                                                                        "fields": {
                                                                            "items": {
                                                                                "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                                "properties": {
                                                                                    "api_name": {
                                                                                        "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "external_type": {
                                                                                        "description": "Name that can be used for external systems",
                                                                                        "maxLength": 255,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "field_key": {
                                                                                        "description": "Key of field that is presented",
                                                                                        "example": "field_fjkdlrh9i32nfew",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "help_text": {
                                                                                        "description": "The help text that is provided for this field",
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "hidden": {
                                                                                        "description": "Whether or not this field is displayed when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "internal_name": {
                                                                                        "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of field that is presented",
                                                                                        "example": "Company Address",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "options": {
                                                                                        "description": "Options to select from if this field is a picklist/checkbox",
                                                                                        "type": "object"
                                                                                    },
                                                                                    "placeholder_text": {
                                                                                        "description": "The text of the placeholder that is provided for this field",
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "position": {
                                                                                        "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "required": {
                                                                                        "description": "Whether or not this field will be required when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "type": {
                                                                                        "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                                        "maxLength": 255,
                                                                                        "type": "string",
                                                                                        "x-accessor": "type_"
                                                                                    },
                                                                                    "value": {
                                                                                        "description": "The value that was submitted to the field and stored on the target object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "group_key": {
                                                                            "description": "The unique key of the group in which this deals's partner is in",
                                                                            "example": "grup_UHrMpyoNbTBRuc",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "lost_reason": {
                                                                            "description": "Reason for which the deal was lost.",
                                                                            "example": "Not the right fit",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "meta": {
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        },
                                                                        "mold_key": {
                                                                            "maxLength": 40,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "partner_key": {
                                                                            "description": "The unique key of the partner who owns this deal",
                                                                            "example": "bertramgilfoyle",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "source": {
                                                                            "description": "Source of the deal, either 'partner' or 'vendor', defaults to 'partner' if not specified",
                                                                            "enum": [
                                                                                "partner",
                                                                                "vendor"
                                                                            ],
                                                                            "example": "partner",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "stage": {
                                                                            "description": "Current stage of this deal. Must appear in Deals Stage list found in group settings.",
                                                                            "example": "Working",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "team": {
                                                                            "allOf": [
                                                                                {
                                                                                    "description": "Standard fields that are present on all database objects.",
                                                                                    "properties": {
                                                                                        "created_at": {
                                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "A unique identifier used to reference the object",
                                                                                            "example": "co_a80cb515fe",
                                                                                            "maxLength": 255,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "updated_at": {
                                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                {
                                                                                    "description": "Details of team used in public API.",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "description": "The name of the partner team",
                                                                                            "example": "Tushar",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            ],
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        },
                                                                        "team_member": {
                                                                            "allOf": [
                                                                                {
                                                                                    "description": "Standard fields that are present on all database objects.",
                                                                                    "properties": {
                                                                                        "created_at": {
                                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "A unique identifier used to reference the object",
                                                                                            "example": "co_a80cb515fe",
                                                                                            "maxLength": 255,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "updated_at": {
                                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                {
                                                                                    "description": "Details of team member used in public API.",
                                                                                    "properties": {
                                                                                        "email": {
                                                                                            "description": "Email of the partner team member",
                                                                                            "example": "tushten@partnerstack.com",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "first_name": {
                                                                                            "description": "First name of the partner team member",
                                                                                            "example": "Tushar",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "last_name": {
                                                                                            "description": "Last name of the partner team member",
                                                                                            "example": "Sutherland",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            ],
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "event": {
                                                            "description": "The event that triggered the callback.",
                                                            "enum": [
                                                                "deal.created",
                                                                "deal.updated"
                                                            ],
                                                            "example": "deal.updated",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "event",
                                                        "data"
                                                    ],
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    },
                                    "responses": {
                                        "200": {
                                            "description": "Your server returns this code if it accepts the request"
                                        }
                                    }
                                }
                            }
                        },
                        "Lead Events": {
                            "{$request.body#/target_url}": {
                                "post": {
                                    "description": "A Lead event callback response from a registered Webhook",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "properties": {
                                                        "data": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "description": "**Leads** are submitted by your partners to let your sales team know of potential accounts that they may wish to work. Partners may earn comission for qualified leads, or leads that eventually become closed accounts.",
                                                                    "properties": {
                                                                        "amount": {
                                                                            "description": "Lead amount in **cents**",
                                                                            "example": 25000,
                                                                            "format": "int32",
                                                                            "nullable": true,
                                                                            "type": "integer"
                                                                        },
                                                                        "approved": {
                                                                            "description": "Used to indicate whether this lead has been approved to move past the closed stage",
                                                                            "nullable": true,
                                                                            "type": "boolean"
                                                                        },
                                                                        "customer_key": {
                                                                            "description": "Unique identifier to be used for Customer after a lead has been converted",
                                                                            "example": "cus_1234",
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "external_key": {
                                                                            "description": "A unique key that identifies this lead in an external system. This key must be unique across all leads in your account. This key is used to identify leads when they are updated or deleted. Often provided as an email, but can be any unique string.",
                                                                            "example": "361ba21c-ca87-46b0-baa4-97ca16e55059",
                                                                            "type": "string"
                                                                        },
                                                                        "field_data": {
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        },
                                                                        "fields": {
                                                                            "items": {
                                                                                "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                                "properties": {
                                                                                    "api_name": {
                                                                                        "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "external_type": {
                                                                                        "description": "Name that can be used for external systems",
                                                                                        "maxLength": 255,
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "field_key": {
                                                                                        "description": "Key of field that is presented",
                                                                                        "example": "field_fjkdlrh9i32nfew",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "help_text": {
                                                                                        "description": "The help text that is provided for this field",
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "hidden": {
                                                                                        "description": "Whether or not this field is displayed when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "internal_name": {
                                                                                        "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of field that is presented",
                                                                                        "example": "Company Address",
                                                                                        "maxLength": 255,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "options": {
                                                                                        "description": "Options to select from if this field is a picklist/checkbox",
                                                                                        "type": "object"
                                                                                    },
                                                                                    "placeholder_text": {
                                                                                        "description": "The text of the placeholder that is provided for this field",
                                                                                        "nullable": true,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "position": {
                                                                                        "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "required": {
                                                                                        "description": "Whether or not this field will be required when filling out its attached form",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "type": {
                                                                                        "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                                        "maxLength": 255,
                                                                                        "type": "string",
                                                                                        "x-accessor": "type_"
                                                                                    },
                                                                                    "value": {
                                                                                        "description": "The value that was submitted to the field and stored on the target object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "group_key": {
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "meta": {
                                                                            "additionalProperties": true,
                                                                            "description": "Key value pairs that store additional information about this lead. First and last name required. Other eligible keys are based on Lead forms created. Use the /leads/form-template to view field names",
                                                                            "nullable": true,
                                                                            "properties": {
                                                                                "company": {
                                                                                    "example": "Lockman Olson",
                                                                                    "type": "string"
                                                                                },
                                                                                "email": {
                                                                                    "example": "River96@example.com",
                                                                                    "type": "string"
                                                                                },
                                                                                "first_name": {
                                                                                    "example": "River",
                                                                                    "type": "string"
                                                                                },
                                                                                "last_name": {
                                                                                    "example": "Tremblay",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "mold_key": {
                                                                            "maxLength": 40,
                                                                            "nullable": true,
                                                                            "type": "string"
                                                                        },
                                                                        "partner_key": {
                                                                            "description": "The unique key of the partner who submitted this lead",
                                                                            "example": "bertramgilfoyle",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "stage_data": {
                                                                            "description": "Information about the current lead's stage",
                                                                            "nullable": true,
                                                                            "properties": {
                                                                                "api_name": {
                                                                                    "description": "A unique identifier that reflects what this stage means in a vendor's external system, like a CRM.",
                                                                                    "example": "closed won",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "description": {
                                                                                    "description": "A description of this stage in the sales pipeline",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "internal_status": {
                                                                                    "description": "What the given stage represents internally to PartnerStack",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "description": "A unique key that references the stage within PartnerStack's systems",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "description": "The name of the stage",
                                                                                    "example": "Closed Won",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object",
                                                                            "x-accessor": "stage"
                                                                        },
                                                                        "status": {
                                                                            "description": "Current status of this lead. Must be one of either 'open', 'closed', 'dead', 'closed won', or 'closed lost. Note that open = New, closed = Qualified and dead = Unqualified default stages in the PartnerStack dashboard.'",
                                                                            "enum": [
                                                                                "open",
                                                                                "closed",
                                                                                "dead",
                                                                                "closed won",
                                                                                "closed lost"
                                                                            ],
                                                                            "example": "open",
                                                                            "type": "string",
                                                                            "x-accessor": "status_mapping"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "properties": {
                                                                        "team": {
                                                                            "allOf": [
                                                                                {
                                                                                    "description": "Standard fields that are present on all database objects.",
                                                                                    "properties": {
                                                                                        "created_at": {
                                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "A unique identifier used to reference the object",
                                                                                            "example": "co_a80cb515fe",
                                                                                            "maxLength": 255,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "updated_at": {
                                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                {
                                                                                    "description": "Details of team used in public API.",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "description": "The name of the partner team",
                                                                                            "example": "Tushar",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            ],
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        },
                                                                        "team_member": {
                                                                            "allOf": [
                                                                                {
                                                                                    "description": "Standard fields that are present on all database objects.",
                                                                                    "properties": {
                                                                                        "created_at": {
                                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "A unique identifier used to reference the object",
                                                                                            "example": "co_a80cb515fe",
                                                                                            "maxLength": 255,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "updated_at": {
                                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                            "example": 1574181282399,
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                {
                                                                                    "description": "Details of team member used in public API.",
                                                                                    "properties": {
                                                                                        "email": {
                                                                                            "description": "Email of the partner team member",
                                                                                            "example": "tushten@partnerstack.com",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "first_name": {
                                                                                            "description": "First name of the partner team member",
                                                                                            "example": "Tushar",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "last_name": {
                                                                                            "description": "Last name of the partner team member",
                                                                                            "example": "Sutherland",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            ],
                                                                            "nullable": true,
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "event": {
                                                            "description": "The event that triggered the callback.",
                                                            "enum": [
                                                                "lead.created",
                                                                "lead.updated"
                                                            ],
                                                            "example": "lead.updated",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "event",
                                                        "data"
                                                    ],
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    },
                                    "responses": {
                                        "200": {
                                            "description": "Your server returns this code if it accepts the request"
                                        }
                                    }
                                }
                            }
                        },
                        "Partnership Events": {
                            "{$request.body#/target_url}": {
                                "post": {
                                    "description": "A Partnership event callback response from a registered webhook",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "properties": {
                                                        "data": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "allOf": [
                                                                        {
                                                                            "description": "**Partners** represent users on PartnerStack that will be promoting your company.",
                                                                            "properties": {
                                                                                "email": {
                                                                                    "description": "The email of the partner.",
                                                                                    "example": "johnsmith@gmail.com",
                                                                                    "format": "email",
                                                                                    "maxLength": 255,
                                                                                    "type": "string"
                                                                                },
                                                                                "field_data": {
                                                                                    "description": "DEPRECATED 'fields' should be the source of truth",
                                                                                    "nullable": true,
                                                                                    "type": "object"
                                                                                },
                                                                                "fields": {
                                                                                    "items": {
                                                                                        "description": "**FieldData** combines attributes about a field with its submitted value on target object",
                                                                                        "properties": {
                                                                                            "api_name": {
                                                                                                "description": "API name of this field to be used on create / update / serialization. Created at time of field creation but can be edited",
                                                                                                "maxLength": 255,
                                                                                                "type": "string"
                                                                                            },
                                                                                            "external_type": {
                                                                                                "description": "Name that can be used for external systems",
                                                                                                "maxLength": 255,
                                                                                                "nullable": true,
                                                                                                "type": "string"
                                                                                            },
                                                                                            "field_key": {
                                                                                                "description": "Key of field that is presented",
                                                                                                "example": "field_fjkdlrh9i32nfew",
                                                                                                "maxLength": 255,
                                                                                                "type": "string"
                                                                                            },
                                                                                            "help_text": {
                                                                                                "description": "The help text that is provided for this field",
                                                                                                "nullable": true,
                                                                                                "type": "string"
                                                                                            },
                                                                                            "hidden": {
                                                                                                "description": "Whether or not this field is displayed when filling out its attached form",
                                                                                                "type": "boolean"
                                                                                            },
                                                                                            "internal_name": {
                                                                                                "description": "Internal name of this field. Created by PartnerStack at time of field creation. Used when referencing field in created objects. Cannot be edited.",
                                                                                                "maxLength": 255,
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of field that is presented",
                                                                                                "example": "Company Address",
                                                                                                "maxLength": 255,
                                                                                                "type": "string"
                                                                                            },
                                                                                            "options": {
                                                                                                "description": "Options to select from if this field is a picklist/checkbox",
                                                                                                "type": "object"
                                                                                            },
                                                                                            "placeholder_text": {
                                                                                                "description": "The text of the placeholder that is provided for this field",
                                                                                                "nullable": true,
                                                                                                "type": "string"
                                                                                            },
                                                                                            "position": {
                                                                                                "description": "The position that this field will be displayed in relation to others on the same form (index starts at 0)",
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "required": {
                                                                                                "description": "Whether or not this field will be required when filling out its attached form",
                                                                                                "type": "boolean"
                                                                                            },
                                                                                            "type": {
                                                                                                "description": "The type of field that will be presented (input, picklist, number ect.)",
                                                                                                "maxLength": 255,
                                                                                                "type": "string",
                                                                                                "x-accessor": "type_"
                                                                                            },
                                                                                            "value": {
                                                                                                "description": "The value that was submitted to the field and stored on the target object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "first_name": {
                                                                                    "description": "The first name of the partner.",
                                                                                    "example": "John",
                                                                                    "maxLength": 50,
                                                                                    "type": "string"
                                                                                },
                                                                                "fraud_flagged": {
                                                                                    "description": "Whether the partner has been flagged for fraud",
                                                                                    "nullable": true,
                                                                                    "type": "boolean"
                                                                                },
                                                                                "last_name": {
                                                                                    "description": "The last name of the partner.",
                                                                                    "example": "Smith",
                                                                                    "maxLength": 50,
                                                                                    "type": "string"
                                                                                },
                                                                                "manager_email": {
                                                                                    "description": "The email of the Partner Manager who you wish to manage this partner.",
                                                                                    "example": "alicebaz@gmail.com",
                                                                                    "format": "email",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "manager_name": {
                                                                                    "description": "The name of the Partner Manager who you wish to manage this partner.",
                                                                                    "example": "Alice Baz",
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "meta": {
                                                                                    "description": "DEPRECATED 'fields' should be the source of truth",
                                                                                    "nullable": true,
                                                                                    "type": "object",
                                                                                    "x-accessor": "mdata"
                                                                                },
                                                                                "partner_key": {
                                                                                    "description": "The `partner_key` you wish to use for this partner. If included, **must** be unique to this partner. For more information on `partner_key` see PartnerStackJS. Note that the partner_key can only consist of letters, numbers, and underscores.",
                                                                                    "example": "gstest",
                                                                                    "maxLength": 255,
                                                                                    "type": "string"
                                                                                },
                                                                                "tags": {
                                                                                    "example": "['tag_1_name', 'tag_2_name']",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "nullable": true,
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        {
                                                                            "properties": {
                                                                                "group": {
                                                                                    "allOf": [
                                                                                        {
                                                                                            "description": "Standard fields that are present on all database objects.",
                                                                                            "properties": {
                                                                                                "created_at": {
                                                                                                    "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                                    "example": 1574181282399,
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "key": {
                                                                                                    "description": "A unique identifier used to reference the object",
                                                                                                    "example": "co_a80cb515fe",
                                                                                                    "maxLength": 255,
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "updated_at": {
                                                                                                    "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                                    "example": 1574181282399,
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        {
                                                                                            "description": "**Groups** are a way to segment partners within PartnerStack to selectively distribute access to things such as Campaigns, Marketing Assets, and Rewards",
                                                                                            "properties": {
                                                                                                "archived": {
                                                                                                    "description": "Whether or not this group is still active",
                                                                                                    "nullable": true,
                                                                                                    "type": "boolean"
                                                                                                },
                                                                                                "default": {
                                                                                                    "description": "Whether this is the default Group for partners to join",
                                                                                                    "type": "boolean",
                                                                                                    "x-accessor": "is_default"
                                                                                                },
                                                                                                "features": {
                                                                                                    "description": "Features that partners within this group have access too",
                                                                                                    "nullable": true,
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "name": {
                                                                                                    "description": "The name of this Group as presented to partners",
                                                                                                    "example": "Resellers",
                                                                                                    "maxLength": 255,
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "slug": {
                                                                                                    "description": "The slugified version of this groups name to be added to routes",
                                                                                                    "example": "resellers",
                                                                                                    "maxLength": 255,
                                                                                                    "nullable": true,
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "tier": {
                                                                                    "additionalProperties": false,
                                                                                    "description": "**Tiers** enable vendors to provide reward and feature levels.",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "description": "A unique identifier to identify the tier",
                                                                                            "example": "tag_a80cb515fe",
                                                                                            "maxLength": 255,
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "description": "Specifies name of the Tier",
                                                                                            "example": "Tier 1",
                                                                                            "maxLength": 50,
                                                                                            "nullable": true,
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "properties": {
                                                                        "approved": {
                                                                            "description": "Whether partner has been approved to participate in program",
                                                                            "example": true,
                                                                            "nullable": true,
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "event": {
                                                            "description": "The event that triggered the callback.",
                                                            "enum": [
                                                                "partnership.agreement_created",
                                                                "partnership.archived",
                                                                "partnership.created",
                                                                "partnership.updated",
                                                                "partnership.tags_updated"
                                                            ],
                                                            "example": "partnership.updated",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "event",
                                                        "data"
                                                    ],
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    },
                                    "responses": {
                                        "200": {
                                            "description": "Your server returns this code if it accepts the request"
                                        }
                                    }
                                }
                            }
                        },
                        "Transaction Events": {
                            "{$request.body#/target_url}": {
                                "post": {
                                    "description": "A Transaction event callback response from a registered webhook",
                                    "requestBody": {
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "properties": {
                                                        "data": {
                                                            "allOf": [
                                                                {
                                                                    "description": "Standard fields that are present on all database objects.",
                                                                    "properties": {
                                                                        "created_at": {
                                                                            "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "key": {
                                                                            "description": "A unique identifier used to reference the object",
                                                                            "example": "co_a80cb515fe",
                                                                            "maxLength": 255,
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                            "example": 1574181282399,
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                {
                                                                    "allOf": [
                                                                        {
                                                                            "description": "Standard fields that are present on all database objects.",
                                                                            "properties": {
                                                                                "created_at": {
                                                                                    "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                                    "example": 1574181282399,
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "key": {
                                                                                    "description": "A unique identifier used to reference the object",
                                                                                    "example": "co_a80cb515fe",
                                                                                    "maxLength": 255,
                                                                                    "type": "string"
                                                                                },
                                                                                "updated_at": {
                                                                                    "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                                    "example": 1574181282399,
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        {
                                                                            "description": "Transaction Base",
                                                                            "properties": {
                                                                                "amount": {
                                                                                    "description": "Transaction amount in cents for specified currency.",
                                                                                    "example": 10000,
                                                                                    "maximum": 10000000000,
                                                                                    "type": "integer"
                                                                                },
                                                                                "category_key": {
                                                                                    "description": "Key of transaction category.",
                                                                                    "maxLength": 255,
                                                                                    "minLength": 1,
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                },
                                                                                "currency": {
                                                                                    "description": "Transaction currency type. Note that the format is the three-letter ISO currency code.",
                                                                                    "example": "USD",
                                                                                    "maxLength": 3,
                                                                                    "minLength": 3,
                                                                                    "type": "string"
                                                                                },
                                                                                "customer_key": {
                                                                                    "description": "Key of customer who made the transaction.",
                                                                                    "maxLength": 255,
                                                                                    "minLength": 1,
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "description": "Key of transaction record in PartnerStack.",
                                                                                    "maxLength": 255,
                                                                                    "minLength": 4,
                                                                                    "type": "string"
                                                                                },
                                                                                "metadata": {
                                                                                    "description": "Additional data that can be provided for the transaction on creation. Note that you can only store a maximum of 25 metadata attributes. The value of each attribute cannot exceed 100 characters, and the name of each attribute cannot exceed 30 characters.",
                                                                                    "nullable": true,
                                                                                    "type": "object"
                                                                                },
                                                                                "product_key": {
                                                                                    "description": "Key of transaction product.",
                                                                                    "maxLength": 255,
                                                                                    "minLength": 1,
                                                                                    "nullable": true,
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        {
                                                                            "properties": {
                                                                                "amount_usd": {
                                                                                    "description": "Transaction amount in cents converted to USD.",
                                                                                    "example": 10000,
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    ],
                                                                    "description": "Transaction"
                                                                }
                                                            ]
                                                        },
                                                        "event": {
                                                            "description": "The event that triggered the callback.",
                                                            "enum": [
                                                                "transaction.created",
                                                                "transaction.updated"
                                                            ],
                                                            "example": "transaction.created",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "event",
                                                        "data"
                                                    ],
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    },
                                    "responses": {
                                        "200": {
                                            "description": "Your server returns this code if it accepts the request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "Webhooks deliver POST requests to the target URL when the specified events are triggered.",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "Webhook Base",
                                            "properties": {
                                                "events": {
                                                    "description": "A list of events to send to the registered Webhook.",
                                                    "example": [
                                                        "deal.created",
                                                        "deal.updated"
                                                    ],
                                                    "items": {
                                                        "enum": [
                                                            "application.approved",
                                                            "application.created",
                                                            "application.declined",
                                                            "customer.created",
                                                            "customer.updated",
                                                            "customer.deleted",
                                                            "deal.created",
                                                            "deal.updated",
                                                            "lead.created",
                                                            "lead.updated",
                                                            "partnership.agreement_created",
                                                            "partnership.archived",
                                                            "partnership.created",
                                                            "partnership.updated",
                                                            "partnership.tags_updated",
                                                            "training.course_completed",
                                                            "training.learning_path_completed",
                                                            "transaction.created",
                                                            "partner_team.member_created"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "type": "array",
                                                    "uniqueItems": true
                                                },
                                                "target_url": {
                                                    "description": "URL endpoint Webhook data will be sent to.",
                                                    "example": "https://jsonplaceholder.typicode.com/posts",
                                                    "format": "uri",
                                                    "maxLength": 2083,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "required": [
                                                "target_url",
                                                "events"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "Webhook Base",
                                                        "properties": {
                                                            "events": {
                                                                "description": "A list of events to send to the registered Webhook.",
                                                                "example": [
                                                                    "deal.created",
                                                                    "deal.updated"
                                                                ],
                                                                "items": {
                                                                    "enum": [
                                                                        "application.approved",
                                                                        "application.created",
                                                                        "application.declined",
                                                                        "customer.created",
                                                                        "customer.updated",
                                                                        "customer.deleted",
                                                                        "deal.created",
                                                                        "deal.updated",
                                                                        "lead.created",
                                                                        "lead.updated",
                                                                        "partnership.agreement_created",
                                                                        "partnership.archived",
                                                                        "partnership.created",
                                                                        "partnership.updated",
                                                                        "partnership.tags_updated",
                                                                        "training.course_completed",
                                                                        "training.learning_path_completed",
                                                                        "transaction.created",
                                                                        "partner_team.member_created"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "minItems": 1,
                                                                "type": "array",
                                                                "uniqueItems": true
                                                            },
                                                            "target_url": {
                                                                "description": "URL endpoint Webhook data will be sent to.",
                                                                "example": "https://jsonplaceholder.typicode.com/posts",
                                                                "format": "uri",
                                                                "maxLength": 2083,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ],
                                                "description": "Webhook"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Webhooks deliver POST requests to the target URL when the specified events are triggered."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "webhook:write"
                            ]
                        }
                    ],
                    "summary": "Create a webhook",
                    "tags": [
                        "Webhooks"
                    ],
                    "x-isPublic": true
                }
            },
            "/v2/webhooks/{webhook_key}": {
                "delete": {
                    "description": "Webhook events will no longer be delivered to the attached endpoints.",
                    "parameters": [
                        {
                            "description": "Unique identifier of a webhook.",
                            "example": "hook_1234",
                            "in": "path",
                            "name": "webhook_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "Webhook Base",
                                                        "properties": {
                                                            "events": {
                                                                "description": "A list of events to send to the registered Webhook.",
                                                                "example": [
                                                                    "deal.created",
                                                                    "deal.updated"
                                                                ],
                                                                "items": {
                                                                    "enum": [
                                                                        "application.approved",
                                                                        "application.created",
                                                                        "application.declined",
                                                                        "customer.created",
                                                                        "customer.updated",
                                                                        "customer.deleted",
                                                                        "deal.created",
                                                                        "deal.updated",
                                                                        "lead.created",
                                                                        "lead.updated",
                                                                        "partnership.agreement_created",
                                                                        "partnership.archived",
                                                                        "partnership.created",
                                                                        "partnership.updated",
                                                                        "partnership.tags_updated",
                                                                        "training.course_completed",
                                                                        "training.learning_path_completed",
                                                                        "transaction.created",
                                                                        "partner_team.member_created"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "minItems": 1,
                                                                "type": "array",
                                                                "uniqueItems": true
                                                            },
                                                            "target_url": {
                                                                "description": "URL endpoint Webhook data will be sent to.",
                                                                "example": "https://jsonplaceholder.typicode.com/posts",
                                                                "format": "uri",
                                                                "maxLength": 2083,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ],
                                                "description": "Webhook"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Webhook events will no longer be delivered to the attached endpoints."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "webhook:write"
                            ]
                        }
                    ],
                    "summary": "Archive a webhook",
                    "tags": [
                        "Webhooks"
                    ],
                    "x-isPublic": true
                },
                "get": {
                    "description": "Retrieves the details of an existing webhook. You\n    need only supply the unique webhook key that was returned upon\n    webhook creation.",
                    "parameters": [
                        {
                            "description": "Unique identifier of a webhook.",
                            "example": "hook_1234",
                            "in": "path",
                            "name": "webhook_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "Webhook Base",
                                                        "properties": {
                                                            "events": {
                                                                "description": "A list of events to send to the registered Webhook.",
                                                                "example": [
                                                                    "deal.created",
                                                                    "deal.updated"
                                                                ],
                                                                "items": {
                                                                    "enum": [
                                                                        "application.approved",
                                                                        "application.created",
                                                                        "application.declined",
                                                                        "customer.created",
                                                                        "customer.updated",
                                                                        "customer.deleted",
                                                                        "deal.created",
                                                                        "deal.updated",
                                                                        "lead.created",
                                                                        "lead.updated",
                                                                        "partnership.agreement_created",
                                                                        "partnership.archived",
                                                                        "partnership.created",
                                                                        "partnership.updated",
                                                                        "partnership.tags_updated",
                                                                        "training.course_completed",
                                                                        "training.learning_path_completed",
                                                                        "transaction.created",
                                                                        "partner_team.member_created"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "minItems": 1,
                                                                "type": "array",
                                                                "uniqueItems": true
                                                            },
                                                            "target_url": {
                                                                "description": "URL endpoint Webhook data will be sent to.",
                                                                "example": "https://jsonplaceholder.typicode.com/posts",
                                                                "format": "uri",
                                                                "maxLength": 2083,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ],
                                                "description": "Webhook"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Retrieves the details of an existing webhook. You\n    need only supply the unique webhook key that was returned upon\n    webhook creation."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "webhook:read"
                            ]
                        }
                    ],
                    "summary": "Retrieve a webhook",
                    "tags": [
                        "Webhooks"
                    ],
                    "x-isPublic": true
                },
                "patch": {
                    "description": "Updates the specified webhook by setting the values of the parameters passed.",
                    "parameters": [
                        {
                            "description": "Unique identifier of a webhook.",
                            "example": "hook_1234",
                            "in": "path",
                            "name": "webhook_key",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "Webhook Base",
                                            "properties": {
                                                "events": {
                                                    "description": "A list of events to send to the registered Webhook.",
                                                    "example": [
                                                        "deal.created",
                                                        "deal.updated"
                                                    ],
                                                    "items": {
                                                        "enum": [
                                                            "application.approved",
                                                            "application.created",
                                                            "application.declined",
                                                            "customer.created",
                                                            "customer.updated",
                                                            "customer.deleted",
                                                            "deal.created",
                                                            "deal.updated",
                                                            "lead.created",
                                                            "lead.updated",
                                                            "partnership.agreement_created",
                                                            "partnership.archived",
                                                            "partnership.created",
                                                            "partnership.updated",
                                                            "partnership.tags_updated",
                                                            "training.course_completed",
                                                            "training.learning_path_completed",
                                                            "transaction.created",
                                                            "partner_team.member_created"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "minItems": 1,
                                                    "type": "array",
                                                    "uniqueItems": true
                                                },
                                                "target_url": {
                                                    "description": "URL endpoint Webhook data will be sent to.",
                                                    "example": "https://jsonplaceholder.typicode.com/posts",
                                                    "format": "uri",
                                                    "maxLength": 2083,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "anyOf": [
                                                {
                                                    "required": [
                                                        "target_url"
                                                    ]
                                                },
                                                {
                                                    "required": [
                                                        "events"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "data": {
                                                "allOf": [
                                                    {
                                                        "description": "Standard fields that are present on all database objects.",
                                                        "properties": {
                                                            "created_at": {
                                                                "description": "Immutable Unix timestamp in milliseconds taken at time of creation",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "key": {
                                                                "description": "A unique identifier used to reference the object",
                                                                "example": "co_a80cb515fe",
                                                                "maxLength": 255,
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "description": "Unix timestamp in milliseconds taken at time of last update",
                                                                "example": 1574181282399,
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "Webhook Base",
                                                        "properties": {
                                                            "events": {
                                                                "description": "A list of events to send to the registered Webhook.",
                                                                "example": [
                                                                    "deal.created",
                                                                    "deal.updated"
                                                                ],
                                                                "items": {
                                                                    "enum": [
                                                                        "application.approved",
                                                                        "application.created",
                                                                        "application.declined",
                                                                        "customer.created",
                                                                        "customer.updated",
                                                                        "customer.deleted",
                                                                        "deal.created",
                                                                        "deal.updated",
                                                                        "lead.created",
                                                                        "lead.updated",
                                                                        "partnership.agreement_created",
                                                                        "partnership.archived",
                                                                        "partnership.created",
                                                                        "partnership.updated",
                                                                        "partnership.tags_updated",
                                                                        "training.course_completed",
                                                                        "training.learning_path_completed",
                                                                        "transaction.created",
                                                                        "partner_team.member_created"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "minItems": 1,
                                                                "type": "array",
                                                                "uniqueItems": true
                                                            },
                                                            "target_url": {
                                                                "description": "URL endpoint Webhook data will be sent to.",
                                                                "example": "https://jsonplaceholder.typicode.com/posts",
                                                                "format": "uri",
                                                                "maxLength": 2083,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ],
                                                "description": "Webhook"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message",
                                            "data"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Updates the specified webhook by setting the values of the parameters passed."
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Bad Request, illegal input for operation",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Bad Request Error"
                        },
                        "401": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Unauthorized, you credentials were invalid",
                                        "status": 401
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Unauthorized Error"
                        },
                        "403": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "You don't have permissions to do that",
                                        "status": 403
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Forbidden Error"
                        },
                        "404": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Not Found, could not find the requested resource",
                                        "status": 404
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Not Found Error"
                        },
                        "500": {
                            "content": {
                                "application/json": {
                                    "example": {
                                        "message": "Internal Server Error, something went wrong",
                                        "status": 500
                                    },
                                    "schema": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "status",
                                            "message"
                                        ],
                                        "type": "object"
                                    }
                                }
                            },
                            "description": "Internal Server Error"
                        }
                    },
                    "security": [
                        {
                            "basicAuth": []
                        },
                        {
                            "oauth2": [
                                "webhook:write"
                            ]
                        }
                    ],
                    "summary": "Update a webhook",
                    "tags": [
                        "Webhooks"
                    ],
                    "x-isPublic": true
                }
            }
        },
        "security": [
            {
                "basicAuth": []
            }
        ],
        "servers": [
            {
                "url": "{protocol}://{subdomain}.{domain}/{basePath}",
                "variables": {
                    "basePath": {
                        "default": "api",
                        "enum": [
                            "api"
                        ]
                    },
                    "domain": {
                        "default": "partnerstack.com",
                        "enum": [
                            "partnerstack.com"
                        ]
                    },
                    "protocol": {
                        "default": "https",
                        "enum": [
                            "https"
                        ]
                    },
                    "subdomain": {
                        "default": "api",
                        "enum": [
                            "api"
                        ]
                    }
                }
            }
        ],
        "tags": [],
        "x-validateResponse": true,
        "x-readme": {
            "explorer-enabled": true,
            "proxy-enabled": true,
            "samples-enabled": true
        },
        "_id": "62be01225b452d0043fb57e8"
    }
}